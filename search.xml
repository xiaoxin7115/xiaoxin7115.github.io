<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title></title>
    <url>/2022/04/15/MySQL/</url>
    <content><![CDATA[<p>mysql</p>
<span id="more"></span>

<h1 id="基础篇"><a href="#基础篇" class="headerlink" title="基础篇"></a>基础篇</h1><h2 id="通用语法及分类"><a href="#通用语法及分类" class="headerlink" title="通用语法及分类"></a>通用语法及分类</h2><ul>
<li>DDL: 数据定义语言，用来定义数据库对象（数据库、表、字段）</li>
<li>DML: 数据操作语言，用来对数据库表中的数据进行增删改</li>
<li>DQL: 数据查询语言，用来查询数据库中表的记录</li>
<li>DCL: 数据控制语言，用来创建数据库用户、控制数据库的控制权限</li>
</ul>
<h3 id="DDL（数据定义语言）"><a href="#DDL（数据定义语言）" class="headerlink" title="DDL（数据定义语言）"></a>DDL（数据定义语言）</h3><p>数据定义语言</p>
<h4 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h4><p>查询所有数据库：<br><code>SHOW DATABASES;</code><br>查询当前数据库：<br><code>SELECT DATABASE();</code><br>创建数据库：<br><code>CREATE DATABASE [ IF NOT EXISTS ] 数据库名 [ DEFAULT CHARSET 字符集] [COLLATE 排序规则 ];</code><br>删除数据库：<br><code>DROP DATABASE [ IF EXISTS ] 数据库名;</code><br>使用数据库：<br><code>USE 数据库名;</code></p>
<h5 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h5><ul>
<li>UTF8字符集长度为3字节，有些符号占4字节，所以推荐用utf8mb4字符集</li>
</ul>
<h4 id="表操作"><a href="#表操作" class="headerlink" title="表操作"></a>表操作</h4><p>查询当前数据库所有表：<br><code>SHOW TABLES;</code><br>查询表结构：<br><code>DESC 表名;</code><br>查询指定表的建表语句：<br><code>SHOW CREATE TABLE 表名;</code></p>
<p>创建表：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE TABLE 表名(</span><br><span class="line">	字段1 字段1类型 [COMMENT 字段1注释],</span><br><span class="line">	字段2 字段2类型 [COMMENT 字段2注释],</span><br><span class="line">	字段3 字段3类型 [COMMENT 字段3注释],</span><br><span class="line">	...</span><br><span class="line">	字段n 字段n类型 [COMMENT 字段n注释]</span><br><span class="line">)[ COMMENT 表注释 ];</span><br></pre></td></tr></table></figure>
<p><strong>最后一个字段后面没有逗号</strong></p>
<p>添加字段：<br><code>ALTER TABLE 表名 ADD 字段名 类型(长度) [COMMENT 注释] [约束];</code><br>例：<code>ALTER TABLE emp ADD nickname varchar(20) COMMENT &#39;昵称&#39;;</code></p>
<p>修改数据类型：<br><code>ALTER TABLE 表名 MODIFY 字段名 新数据类型(长度);</code><br>修改字段名和字段类型：<br><code>ALTER TABLE 表名 CHANGE 旧字段名 新字段名 类型(长度) [COMMENT 注释] [约束];</code><br>例：将emp表的nickname字段修改为username，类型为varchar(30)<br><code>ALTER TABLE emp CHANGE nickname username varchar(30) COMMENT &#39;昵称&#39;;</code></p>
<p>删除字段：<br><code>ALTER TABLE 表名 DROP 字段名;</code></p>
<p>修改表名：<br><code>ALTER TABLE 表名 RENAME TO 新表名</code></p>
<p>删除表：<br><code>DROP TABLE [IF EXISTS] 表名;</code><br>删除表，并重新创建该表：<br><code>TRUNCATE TABLE 表名;</code></p>
<h3 id="DML（数据操作语言）"><a href="#DML（数据操作语言）" class="headerlink" title="DML（数据操作语言）"></a>DML（数据操作语言）</h3><h4 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h4><p>指定字段：<br><code>INSERT INTO 表名 (字段名1, 字段名2, ...) VALUES (值1, 值2, ...);</code><br>全部字段：<br><code>INSERT INTO 表名 VALUES (值1, 值2, ...);</code></p>
<p>批量添加数据：<br><code>INSERT INTO 表名 (字段名1, 字段名2, ...) VALUES (值1, 值2, ...), (值1, 值2, ...), (值1, 值2, ...);</code><br><code>INSERT INTO 表名 VALUES (值1, 值2, ...), (值1, 值2, ...), (值1, 值2, ...);</code></p>
<h5 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h5><ul>
<li>字符串和日期类型数据应该包含在引号中</li>
<li>插入的数据大小应该在字段的规定范围内</li>
</ul>
<h4 id="更新和删除数据"><a href="#更新和删除数据" class="headerlink" title="更新和删除数据"></a>更新和删除数据</h4><p>修改数据：<br><code>UPDATE 表名 SET 字段名1 = 值1, 字段名2 = 值2, ... [ WHERE 条件 ];</code><br>例：<br><code>UPDATE emp SET name = &#39;Jack&#39; WHERE id = 1;</code></p>
<p>删除数据：<br><code>DELETE FROM 表名 [ WHERE 条件 ];</code></p>
<h3 id="DQL（数据查询语言）"><a href="#DQL（数据查询语言）" class="headerlink" title="DQL（数据查询语言）"></a>DQL（数据查询语言）</h3><p>语法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT</span><br><span class="line">	字段列表</span><br><span class="line">FROM</span><br><span class="line">	表名字段</span><br><span class="line">WHERE</span><br><span class="line">	条件列表</span><br><span class="line">GROUP BY</span><br><span class="line">	分组字段列表</span><br><span class="line">HAVING</span><br><span class="line">	分组后的条件列表</span><br><span class="line">ORDER BY</span><br><span class="line">	排序字段列表</span><br><span class="line">LIMIT</span><br><span class="line">	分页参数</span><br></pre></td></tr></table></figure>

<h4 id="基础查询"><a href="#基础查询" class="headerlink" title="基础查询"></a>基础查询</h4><p>查询多个字段：<br><code>SELECT 字段1, 字段2, 字段3, ... FROM 表名;</code><br><code>SELECT * FROM 表名;</code></p>
<p>设置别名：<br><code>SELECT 字段1 [ AS 别名1 ], 字段2 [ AS 别名2 ], 字段3 [ AS 别名3 ], ... FROM 表名;</code><br><code>SELECT 字段1 [ 别名1 ], 字段2 [ 别名2 ], 字段3 [ 别名3 ], ... FROM 表名;</code></p>
<p>去除重复记录：<br><code>SELECT DISTINCT 字段列表 FROM 表名;</code></p>
<p>转义：<br><code>SELECT * FROM 表名 WHERE name LIKE &#39;/_张三&#39; ESCAPE &#39;/&#39;</code><br>/ 之后的_不作为通配符</p>
<h4 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h4><p>语法：<br><code>SELECT 字段列表 FROM 表名 WHERE 条件列表;</code></p>
<p>条件：</p>
<table>
<thead>
<tr>
<th>比较运算符</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>&gt;</td>
<td>大于</td>
</tr>
<tr>
<td>&gt;=</td>
<td>大于等于</td>
</tr>
<tr>
<td>&lt;</td>
<td>小于</td>
</tr>
<tr>
<td>&lt;=</td>
<td>小于等于</td>
</tr>
<tr>
<td>=</td>
<td>等于</td>
</tr>
<tr>
<td>&lt;&gt; 或 !=</td>
<td>不等于</td>
</tr>
<tr>
<td>BETWEEN … AND …</td>
<td>在某个范围内（含最小、最大值）</td>
</tr>
<tr>
<td>IN(…)</td>
<td>在in之后的列表中的值，多选一</td>
</tr>
<tr>
<td>LIKE 占位符</td>
<td>模糊匹配（_匹配单个字符，%匹配任意个字符）</td>
</tr>
<tr>
<td>IS NULL</td>
<td>是NULL</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>逻辑运算符</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>AND 或 &amp;&amp;</td>
<td>并且（多个条件同时成立）</td>
</tr>
<tr>
<td>OR 或 &#124;&#124;</td>
<td>或者（多个条件任意一个成立）</td>
</tr>
<tr>
<td>NOT 或 !</td>
<td>非，不是</td>
</tr>
</tbody></table>
<p>例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 年龄等于30</span><br><span class="line">select * from employee where age = 30;</span><br><span class="line">-- 年龄小于30</span><br><span class="line">select * from employee where age &lt; 30;</span><br><span class="line">-- 小于等于</span><br><span class="line">select * from employee where age &lt;= 30;</span><br><span class="line">-- 没有身份证</span><br><span class="line">select * from employee where idcard is null or idcard = &#x27;&#x27;;</span><br><span class="line">-- 有身份证</span><br><span class="line">select * from employee where idcard;</span><br><span class="line">select * from employee where idcard is not null;</span><br><span class="line">-- 不等于</span><br><span class="line">select * from employee where age != 30;</span><br><span class="line">-- 年龄在20到30之间</span><br><span class="line">select * from employee where age between 20 and 30;</span><br><span class="line">select * from employee where age &gt;= 20 and age &lt;= 30;</span><br><span class="line">-- 下面语句不报错，但查不到任何信息</span><br><span class="line">select * from employee where age between 30 and 20;</span><br><span class="line">-- 性别为女且年龄小于30</span><br><span class="line">select * from employee where age &lt; 30 and gender = &#x27;女&#x27;;</span><br><span class="line">-- 年龄等于25或30或35</span><br><span class="line">select * from employee where age = 25 or age = 30 or age = 35;</span><br><span class="line">select * from employee where age in (25, 30, 35);</span><br><span class="line">-- 姓名为两个字</span><br><span class="line">select * from employee where name like &#x27;__&#x27;;</span><br><span class="line">-- 身份证最后为X</span><br><span class="line">select * from employee where idcard like &#x27;%X&#x27;;</span><br></pre></td></tr></table></figure>

<h4 id="聚合查询（聚合函数）"><a href="#聚合查询（聚合函数）" class="headerlink" title="聚合查询（聚合函数）"></a>聚合查询（聚合函数）</h4><p>常见聚合函数：</p>
<table>
<thead>
<tr>
<th>函数</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>count</td>
<td>统计数量</td>
</tr>
<tr>
<td>max</td>
<td>最大值</td>
</tr>
<tr>
<td>min</td>
<td>最小值</td>
</tr>
<tr>
<td>avg</td>
<td>平均值</td>
</tr>
<tr>
<td>sum</td>
<td>求和</td>
</tr>
</tbody></table>
<p>语法：<br><code>SELECT 聚合函数(字段列表) FROM 表名;</code><br>例：<br><code>SELECT count(id) from employee where workaddress = &quot;广东省&quot;;</code></p>
<h4 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h4><p>语法：<br><code>SELECT 字段列表 FROM 表名 [ WHERE 条件 ] GROUP BY 分组字段名 [ HAVING 分组后的过滤条件 ];</code></p>
<p>where 和 having 的区别：</p>
<ul>
<li>执行时机不同：where是分组之前进行过滤，不满足where条件不参与分组；having是分组后对结果进行过滤。</li>
<li>判断条件不同：where不能对聚合函数进行判断，而having可以。</li>
</ul>
<p>例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 根据性别分组，统计男性和女性数量（只显示分组数量，不显示哪个是男哪个是女）</span><br><span class="line">select count(*) from employee group by gender;</span><br><span class="line">-- 根据性别分组，统计男性和女性数量</span><br><span class="line">select gender, count(*) from employee group by gender;</span><br><span class="line">-- 根据性别分组，统计男性和女性的平均年龄</span><br><span class="line">select gender, avg(age) from employee group by gender;</span><br><span class="line">-- 年龄小于45，并根据工作地址分组</span><br><span class="line">select workaddress, count(*) from employee where age &lt; 45 group by workaddress;</span><br><span class="line">-- 年龄小于45，并根据工作地址分组，获取员工数量大于等于3的工作地址</span><br><span class="line">select workaddress, count(*) address_count from employee where age &lt; 45 group by workaddress having address_count &gt;= 3;</span><br></pre></td></tr></table></figure>

<h5 id="注意事项-2"><a href="#注意事项-2" class="headerlink" title="注意事项"></a>注意事项</h5><ul>
<li>执行顺序：where &gt; 聚合函数 &gt; having</li>
<li>分组之后，查询的字段一般为聚合函数和分组字段，查询其他字段无任何意义</li>
</ul>
<h4 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h4><p>语法：<br><code>SELECT 字段列表 FROM 表名 ORDER BY 字段1 排序方式1, 字段2 排序方式2;</code></p>
<p>排序方式：</p>
<ul>
<li>ASC: 升序（默认）</li>
<li>DESC: 降序</li>
</ul>
<p>例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 根据年龄升序排序</span><br><span class="line">SELECT * FROM employee ORDER BY age ASC;</span><br><span class="line">SELECT * FROM employee ORDER BY age;</span><br><span class="line">-- 两字段排序，根据年龄升序排序，入职时间降序排序</span><br><span class="line">SELECT * FROM employee ORDER BY age ASC, entrydate DESC;</span><br></pre></td></tr></table></figure>

<h5 id="注意事项-3"><a href="#注意事项-3" class="headerlink" title="注意事项"></a>注意事项</h5><p>如果是多字段排序，当第一个字段值相同时，才会根据第二个字段进行排序</p>
<h4 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h4><p>语法：<br><code>SELECT 字段列表 FROM 表名 LIMIT 起始索引, 查询记录数;</code></p>
<p>例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 查询第一页数据，展示10条</span><br><span class="line">SELECT * FROM employee LIMIT 0, 10;</span><br><span class="line">-- 查询第二页</span><br><span class="line">SELECT * FROM employee LIMIT 10, 10;</span><br></pre></td></tr></table></figure>

<h5 id="注意事项-4"><a href="#注意事项-4" class="headerlink" title="注意事项"></a>注意事项</h5><ul>
<li>起始索引从0开始，起始索引 = （查询页码 - 1） * 每页显示记录数</li>
<li>分页查询是数据库的方言，不同数据库有不同实现，MySQL是LIMIT</li>
<li>如果查询的是第一页数据，起始索引可以省略，直接简写 LIMIT 10</li>
</ul>
<h4 id="DQL执行顺序"><a href="#DQL执行顺序" class="headerlink" title="DQL执行顺序"></a>DQL执行顺序</h4><p>FROM -&gt; WHERE -&gt; GROUP BY -&gt; SELECT -&gt; ORDER BY -&gt; LIMIT</p>
<h3 id="DCL"><a href="#DCL" class="headerlink" title="DCL"></a>DCL</h3><h4 id="管理用户"><a href="#管理用户" class="headerlink" title="管理用户"></a>管理用户</h4><p>查询用户：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">USER mysql;</span><br><span class="line">SELECT * FROM user;</span><br></pre></td></tr></table></figure>

<p>创建用户:<br><code>CREATE USER &#39;用户名&#39;@&#39;主机名&#39; IDENTIFIED BY &#39;密码&#39;;</code></p>
<p>修改用户密码：<br><code>ALTER USER &#39;用户名&#39;@&#39;主机名&#39; IDENTIFIED WITH mysql_native_password BY &#39;新密码&#39;;</code></p>
<p>删除用户：<br><code>DROP USER &#39;用户名&#39;@&#39;主机名&#39;;</code></p>
<p>例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 创建用户test，只能在当前主机localhost访问</span><br><span class="line">create user &#x27;test&#x27;@&#x27;localhost&#x27; identified by &#x27;123456&#x27;;</span><br><span class="line">-- 创建用户test，能在任意主机访问</span><br><span class="line">create user &#x27;test&#x27;@&#x27;%&#x27; identified by &#x27;123456&#x27;;</span><br><span class="line">create user &#x27;test&#x27; identified by &#x27;123456&#x27;;</span><br><span class="line">-- 修改密码</span><br><span class="line">alter user &#x27;test&#x27;@&#x27;localhost&#x27; identified with mysql_native_password by &#x27;1234&#x27;;</span><br><span class="line">-- 删除用户</span><br><span class="line">drop user &#x27;test&#x27;@&#x27;localhost&#x27;;</span><br></pre></td></tr></table></figure>

<h5 id="注意事项-5"><a href="#注意事项-5" class="headerlink" title="注意事项"></a>注意事项</h5><ul>
<li>主机名可以使用 % 通配</li>
</ul>
<h4 id="权限控制"><a href="#权限控制" class="headerlink" title="权限控制"></a>权限控制</h4><p>常用权限：</p>
<table>
<thead>
<tr>
<th>权限</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>ALL, ALL PRIVILEGES</td>
<td>所有权限</td>
</tr>
<tr>
<td>SELECT</td>
<td>查询数据</td>
</tr>
<tr>
<td>INSERT</td>
<td>插入数据</td>
</tr>
<tr>
<td>UPDATE</td>
<td>修改数据</td>
</tr>
<tr>
<td>DELETE</td>
<td>删除数据</td>
</tr>
<tr>
<td>ALTER</td>
<td>修改表</td>
</tr>
<tr>
<td>DROP</td>
<td>删除数据库/表/视图</td>
</tr>
<tr>
<td>CREATE</td>
<td>创建数据库/表</td>
</tr>
</tbody></table>
<p>更多权限请看<a href="#%E6%9D%83%E9%99%90%E4%B8%80%E8%A7%88%E8%A1%A8" title="权限一览表">权限一览表</a></p>
<p>查询权限：<br><code>SHOW GRANTS FOR &#39;用户名&#39;@&#39;主机名&#39;;</code></p>
<p>授予权限：<br><code>GRANT 权限列表 ON 数据库名.表名 TO &#39;用户名&#39;@&#39;主机名&#39;;</code></p>
<p>撤销权限：<br><code>REVOKE 权限列表 ON 数据库名.表名 FROM &#39;用户名&#39;@&#39;主机名&#39;;</code></p>
<h5 id="注意事项-6"><a href="#注意事项-6" class="headerlink" title="注意事项"></a>注意事项</h5><ul>
<li>多个权限用逗号分隔</li>
<li>授权时，数据库名和表名可以用 * 进行通配，代表所有</li>
</ul>
<h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><ul>
<li>字符串函数</li>
<li>数值函数</li>
<li>日期函数</li>
<li>流程函数</li>
</ul>
<h3 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h3><p>常用函数：</p>
<table>
<thead>
<tr>
<th>函数</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>CONCAT(s1, s2, …, sn)</td>
<td>字符串拼接，将s1, s2, …, sn拼接成一个字符串</td>
</tr>
<tr>
<td>LOWER(str)</td>
<td>将字符串全部转为小写</td>
</tr>
<tr>
<td>UPPER(str)</td>
<td>将字符串全部转为大写</td>
</tr>
<tr>
<td>LPAD(str, n, pad)</td>
<td>左填充，用字符串pad对str的左边进行填充，达到n个字符串长度</td>
</tr>
<tr>
<td>RPAD(str, n, pad)</td>
<td>右填充，用字符串pad对str的右边进行填充，达到n个字符串长度</td>
</tr>
<tr>
<td>TRIM(str)</td>
<td>去掉字符串头部和尾部的空格</td>
</tr>
<tr>
<td>SUBSTRING(str, start, len)</td>
<td>返回从字符串str从start位置起的len个长度的字符串</td>
</tr>
</tbody></table>
<p>使用示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 拼接</span><br><span class="line">SELECT CONCAT(&#x27;Hello&#x27;, &#x27;World&#x27;);</span><br><span class="line">-- 小写</span><br><span class="line">SELECT LOWER(&#x27;Hello&#x27;);</span><br><span class="line">-- 大写</span><br><span class="line">SELECT UPPER(&#x27;Hello&#x27;);</span><br><span class="line">-- 左填充</span><br><span class="line">SELECT LPAD(&#x27;01&#x27;, 5, &#x27;-&#x27;);</span><br><span class="line">-- 右填充</span><br><span class="line">SELECT RPAD(&#x27;01&#x27;, 5, &#x27;-&#x27;);</span><br><span class="line">-- 去除空格</span><br><span class="line">SELECT TRIM(&#x27; Hello World &#x27;);</span><br><span class="line">-- 切片（起始索引为1）</span><br><span class="line">SELECT SUBSTRING(&#x27;Hello World&#x27;, 1, 5);</span><br></pre></td></tr></table></figure>

<h3 id="数值函数"><a href="#数值函数" class="headerlink" title="数值函数"></a>数值函数</h3><p>常见函数：</p>
<table>
<thead>
<tr>
<th>函数</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>CEIL(x)</td>
<td>向上取整</td>
</tr>
<tr>
<td>FLOOR(x)</td>
<td>向下取整</td>
</tr>
<tr>
<td>MOD(x, y)</td>
<td>返回x/y的模</td>
</tr>
<tr>
<td>RAND()</td>
<td>返回0~1内的随机数</td>
</tr>
<tr>
<td>ROUND(x, y)</td>
<td>求参数x的四舍五入值，保留y位小数</td>
</tr>
</tbody></table>
<h3 id="日期函数"><a href="#日期函数" class="headerlink" title="日期函数"></a>日期函数</h3><p>常用函数：</p>
<table>
<thead>
<tr>
<th>函数</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>CURDATE()</td>
<td>返回当前日期</td>
</tr>
<tr>
<td>CURTIME()</td>
<td>返回当前时间</td>
</tr>
<tr>
<td>NOW()</td>
<td>返回当前日期和时间</td>
</tr>
<tr>
<td>YEAR(date)</td>
<td>获取指定date的年份</td>
</tr>
<tr>
<td>MONTH(date)</td>
<td>获取指定date的月份</td>
</tr>
<tr>
<td>DAY(date)</td>
<td>获取指定date的日期</td>
</tr>
<tr>
<td>DATE_ADD(date, INTERVAL expr type)</td>
<td>返回一个日期/时间值加上一个时间间隔expr后的时间值</td>
</tr>
<tr>
<td>DATEDIFF(date1, date2)</td>
<td>返回起始时间date1和结束时间date2之间的天数</td>
</tr>
</tbody></table>
<p>例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- DATE_ADD</span><br><span class="line">SELECT DATE_ADD(NOW(), INTERVAL 70 YEAR);</span><br></pre></td></tr></table></figure>

<h3 id="流程函数"><a href="#流程函数" class="headerlink" title="流程函数"></a>流程函数</h3><p>常用函数：</p>
<table>
<thead>
<tr>
<th>函数</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>IF(value, t, f)</td>
<td>如果value为true，则返回t，否则返回f</td>
</tr>
<tr>
<td>IFNULL(value1, value2)</td>
<td>如果value1不为空，返回value1，否则返回value2</td>
</tr>
<tr>
<td>CASE WHEN [ val1 ] THEN [ res1 ] … ELSE [ default ] END</td>
<td>如果val1为true，返回res1，… 否则返回default默认值</td>
</tr>
<tr>
<td>CASE [ expr ] WHEN [ val1 ] THEN [ res1 ] … ELSE [ default ] END</td>
<td>如果expr的值等于val1，返回res1，… 否则返回default默认值</td>
</tr>
</tbody></table>
<p>例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select</span><br><span class="line">	name,</span><br><span class="line">	(case when age &gt; 30 then &#x27;中年&#x27; else &#x27;青年&#x27; end)</span><br><span class="line">from employee;</span><br><span class="line">select</span><br><span class="line">	name,</span><br><span class="line">	(case workaddress when &#x27;北京市&#x27; then &#x27;一线城市&#x27; when &#x27;上海市&#x27; then &#x27;一线城市&#x27; else &#x27;二线城市&#x27; end) as &#x27;工作地址&#x27;</span><br><span class="line">from employee;</span><br></pre></td></tr></table></figure>

<h2 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h2><p>分类：</p>
<table>
<thead>
<tr>
<th>约束</th>
<th>描述</th>
<th>关键字</th>
</tr>
</thead>
<tbody><tr>
<td>非空约束</td>
<td>限制该字段的数据不能为null</td>
<td>NOT NULL</td>
</tr>
<tr>
<td>唯一约束</td>
<td>保证该字段的所有数据都是唯一、不重复的</td>
<td>UNIQUE</td>
</tr>
<tr>
<td>主键约束</td>
<td>主键是一行数据的唯一标识，要求非空且唯一</td>
<td>PRIMARY KEY</td>
</tr>
<tr>
<td>默认约束</td>
<td>保存数据时，如果未指定该字段的值，则采用默认值</td>
<td>DEFAULT</td>
</tr>
<tr>
<td>检查约束（8.0.1版本后）</td>
<td>保证字段值满足某一个条件</td>
<td>CHECK</td>
</tr>
<tr>
<td>外键约束</td>
<td>用来让两张图的数据之间建立连接，保证数据的一致性和完整性</td>
<td>FOREIGN KEY</td>
</tr>
</tbody></table>
<p>约束是作用于表中字段上的，可以再创建表/修改表的时候添加约束。</p>
<h3 id="常用约束"><a href="#常用约束" class="headerlink" title="常用约束"></a>常用约束</h3><table>
<thead>
<tr>
<th>约束条件</th>
<th>关键字</th>
</tr>
</thead>
<tbody><tr>
<td>主键</td>
<td>PRIMARY KEY</td>
</tr>
<tr>
<td>自动增长</td>
<td>AUTO_INCREMENT</td>
</tr>
<tr>
<td>不为空</td>
<td>NOT NULL</td>
</tr>
<tr>
<td>唯一</td>
<td>UNIQUE</td>
</tr>
<tr>
<td>逻辑条件</td>
<td>CHECK</td>
</tr>
<tr>
<td>默认值</td>
<td>DEFAULT</td>
</tr>
</tbody></table>
<p>例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table user(</span><br><span class="line">	id int primary key auto_increment,</span><br><span class="line">	name varchar(10) not null unique,</span><br><span class="line">	age int check(age &gt; 0 and age &lt; 120),</span><br><span class="line">	status char(1) default &#x27;1&#x27;,</span><br><span class="line">	gender char(1)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<h3 id="外键约束"><a href="#外键约束" class="headerlink" title="外键约束"></a>外键约束</h3><p>添加外键：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE TABLE 表名(</span><br><span class="line">	字段名 字段类型,</span><br><span class="line">	...</span><br><span class="line">	[CONSTRAINT] [外键名称] FOREIGN KEY(外键字段名) REFERENCES 主表(主表列名)</span><br><span class="line">);</span><br><span class="line">ALTER TABLE 表名 ADD CONSTRAINT 外键名称 FOREIGN KEY (外键字段名) REFERENCES 主表(主表列名);</span><br><span class="line"></span><br><span class="line">-- 例子</span><br><span class="line">alter table emp add constraint fk_emp_dept_id foreign key(dept_id) references dept(id);</span><br></pre></td></tr></table></figure>

<p>删除外键：<br><code>ALTER TABLE 表名 DROP FOREIGN KEY 外键名;</code></p>
<h4 id="删除-更新行为"><a href="#删除-更新行为" class="headerlink" title="删除/更新行为"></a>删除/更新行为</h4><table>
<thead>
<tr>
<th>行为</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>NO ACTION</td>
<td>当在父表中删除/更新对应记录时，首先检查该记录是否有对应外键，如果有则不允许删除/更新（与RESTRICT一致）</td>
</tr>
<tr>
<td>RESTRICT</td>
<td>当在父表中删除/更新对应记录时，首先检查该记录是否有对应外键，如果有则不允许删除/更新（与NO ACTION一致）</td>
</tr>
<tr>
<td>CASCADE</td>
<td>当在父表中删除/更新对应记录时，首先检查该记录是否有对应外键，如果有则也删除/更新外键在子表中的记录</td>
</tr>
<tr>
<td>SET NULL</td>
<td>当在父表中删除/更新对应记录时，首先检查该记录是否有对应外键，如果有则设置子表中该外键值为null（要求该外键允许为null）</td>
</tr>
<tr>
<td>SET DEFAULT</td>
<td>父表有变更时，子表将外键设为一个默认值（Innodb不支持）</td>
</tr>
</tbody></table>
<p>更改删除/更新行为：<br><code>ALTER TABLE 表名 ADD CONSTRAINT 外键名称 FOREIGN KEY (外键字段) REFERENCES 主表名(主表字段名) ON UPDATE 行为 ON DELETE 行为;</code></p>
<h2 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h2><h3 id="多表关系"><a href="#多表关系" class="headerlink" title="多表关系"></a>多表关系</h3><ul>
<li>一对多（多对一）</li>
<li>多对多</li>
<li>一对一</li>
</ul>
<h4 id="一对多"><a href="#一对多" class="headerlink" title="一对多"></a>一对多</h4><p>案例：部门与员工<br>关系：一个部门对应多个员工，一个员工对应一个部门<br>实现：在多的一方建立外键，指向一的一方的主键</p>
<h4 id="多对多"><a href="#多对多" class="headerlink" title="多对多"></a>多对多</h4><p>案例：学生与课程<br>关系：一个学生可以选多门课程，一门课程也可以供多个学生选修<br>实现：建立第三张中间表，中间表至少包含两个外键，分别关联两方主键</p>
<h4 id="一对一"><a href="#一对一" class="headerlink" title="一对一"></a>一对一</h4><p>案例：用户与用户详情<br>关系：一对一关系，多用于单表拆分，将一张表的基础字段放在一张表中，其他详情字段放在另一张表中，以提升操作效率<br>实现：在任意一方加入外键，关联另外一方的主键，并且设置外键为唯一的（UNIQUE）</p>
<h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><p>合并查询（笛卡尔积，会展示所有组合结果）：<br><code>select * from employee, dept;</code></p>
<blockquote>
<p>笛卡尔积：两个集合A集合和B集合的所有组合情况（在多表查询时，需要消除无效的笛卡尔积）</p>
</blockquote>
<p>消除无效笛卡尔积：<br><code>select * from employee, dept where employee.dept = dept.id;</code></p>
<h3 id="内连接查询"><a href="#内连接查询" class="headerlink" title="内连接查询"></a>内连接查询</h3><p>内连接查询的是两张表交集的部分</p>
<p>隐式内连接：<br><code>SELECT 字段列表 FROM 表1, 表2 WHERE 条件 ...;</code></p>
<p>显式内连接：<br><code>SELECT 字段列表 FROM 表1 [ INNER ] JOIN 表2 ON 连接条件 ...;</code></p>
<p>显式性能比隐式高</p>
<p>例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 查询员工姓名，及关联的部门的名称</span><br><span class="line">-- 隐式</span><br><span class="line">select e.name, d.name from employee as e, dept as d where e.dept = d.id;</span><br><span class="line">-- 显式</span><br><span class="line">select e.name, d.name from employee as e inner join dept as d on e.dept = d.id;</span><br></pre></td></tr></table></figure>

<h3 id="外连接查询"><a href="#外连接查询" class="headerlink" title="外连接查询"></a>外连接查询</h3><p>左外连接：<br>查询左表所有数据，以及两张表交集部分数据<br><code>SELECT 字段列表 FROM 表1 LEFT [ OUTER ] JOIN 表2 ON 条件 ...;</code><br>相当于查询表1的所有数据，包含表1和表2交集部分数据</p>
<p>右外连接：<br>查询右表所有数据，以及两张表交集部分数据<br><code>SELECT 字段列表 FROM 表1 RIGHT [ OUTER ] JOIN 表2 ON 条件 ...;</code></p>
<p>例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 左</span><br><span class="line">select e.*, d.name from employee as e left outer join dept as d on e.dept = d.id;</span><br><span class="line">select d.name, e.* from dept d left outer join emp e on e.dept = d.id;  -- 这条语句与下面的语句效果一样</span><br><span class="line">-- 右</span><br><span class="line">select d.name, e.* from employee as e right outer join dept as d on e.dept = d.id;</span><br></pre></td></tr></table></figure>

<p>左连接可以查询到没有dept的employee，右连接可以查询到没有employee的dept</p>
<h3 id="自连接查询"><a href="#自连接查询" class="headerlink" title="自连接查询"></a>自连接查询</h3><p>当前表与自身的连接查询，自连接必须使用表别名</p>
<p>语法：<br><code>SELECT 字段列表 FROM 表A 别名A JOIN 表A 别名B ON 条件 ...;</code></p>
<p>自连接查询，可以是内连接查询，也可以是外连接查询</p>
<p>例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 查询员工及其所属领导的名字</span><br><span class="line">select a.name, b.name from employee a, employee b where a.manager = b.id;</span><br><span class="line">-- 没有领导的也查询出来</span><br><span class="line">select a.name, b.name from employee a left join employee b on a.manager = b.id;</span><br></pre></td></tr></table></figure>

<h3 id="联合查询-union-union-all"><a href="#联合查询-union-union-all" class="headerlink" title="联合查询 union, union all"></a>联合查询 union, union all</h3><p>把多次查询的结果合并，形成一个新的查询集</p>
<p>语法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 字段列表 FROM 表A ...</span><br><span class="line">UNION [ALL]</span><br><span class="line">SELECT 字段列表 FROM 表B ...</span><br></pre></td></tr></table></figure>

<h4 id="注意事项-7"><a href="#注意事项-7" class="headerlink" title="注意事项"></a>注意事项</h4><ul>
<li>UNION ALL 会有重复结果，UNION 不会</li>
<li>联合查询比使用or效率高，不会使索引失效</li>
</ul>
<h3 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h3><p>SQL语句中嵌套SELECT语句，称谓嵌套查询，又称子查询。<br><code>SELECT * FROM t1 WHERE column1 = ( SELECT column1 FROM t2);</code><br><strong>子查询外部的语句可以是 INSERT / UPDATE / DELETE / SELECT 的任何一个</strong></p>
<p>根据子查询结果可以分为：</p>
<ul>
<li>标量子查询（子查询结果为单个值）</li>
<li>列子查询（子查询结果为一列）</li>
<li>行子查询（子查询结果为一行）</li>
<li>表子查询（子查询结果为多行多列）</li>
</ul>
<p>根据子查询位置可分为：</p>
<ul>
<li>WHERE 之后</li>
<li>FROM 之后</li>
<li>SELECT 之后</li>
</ul>
<h4 id="标量子查询"><a href="#标量子查询" class="headerlink" title="标量子查询"></a>标量子查询</h4><p>子查询返回的结果是单个值（数字、字符串、日期等）。<br>常用操作符：- &lt; &gt; &gt; &gt;= &lt; &lt;=</p>
<p>例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 查询销售部所有员工</span><br><span class="line">select id from dept where name = &#x27;销售部&#x27;;</span><br><span class="line">-- 根据销售部部门ID，查询员工信息</span><br><span class="line">select * from employee where dept = 4;</span><br><span class="line">-- 合并（子查询）</span><br><span class="line">select * from employee where dept = (select id from dept where name = &#x27;销售部&#x27;);</span><br><span class="line"></span><br><span class="line">-- 查询xxx入职之后的员工信息</span><br><span class="line">select * from employee where entrydate &gt; (select entrydate from employee where name = &#x27;xxx&#x27;);</span><br></pre></td></tr></table></figure>

<h4 id="列子查询"><a href="#列子查询" class="headerlink" title="列子查询"></a>列子查询</h4><p>返回的结果是一列（可以是多行）。</p>
<p>常用操作符：</p>
<table>
<thead>
<tr>
<th>操作符</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>IN</td>
<td>在指定的集合范围内，多选一</td>
</tr>
<tr>
<td>NOT IN</td>
<td>不在指定的集合范围内</td>
</tr>
<tr>
<td>ANY</td>
<td>子查询返回列表中，有任意一个满足即可</td>
</tr>
<tr>
<td>SOME</td>
<td>与ANY等同，使用SOME的地方都可以使用ANY</td>
</tr>
<tr>
<td>ALL</td>
<td>子查询返回列表的所有值都必须满足</td>
</tr>
</tbody></table>
<p>例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 查询销售部和市场部的所有员工信息</span><br><span class="line">select * from employee where dept in (select id from dept where name = &#x27;销售部&#x27; or name = &#x27;市场部&#x27;);</span><br><span class="line">-- 查询比财务部所有人工资都高的员工信息</span><br><span class="line">select * from employee where salary &gt; all(select salary from employee where dept = (select id from dept where name = &#x27;财务部&#x27;));</span><br><span class="line">-- 查询比研发部任意一人工资高的员工信息</span><br><span class="line">select * from employee where salary &gt; any (select salary from employee where dept = (select id from dept where name = &#x27;研发部&#x27;));</span><br></pre></td></tr></table></figure>

<h4 id="行子查询"><a href="#行子查询" class="headerlink" title="行子查询"></a>行子查询</h4><p>返回的结果是一行（可以是多列）。<br>常用操作符：=, &lt;, &gt;, IN, NOT IN</p>
<p>例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 查询与xxx的薪资及直属领导相同的员工信息</span><br><span class="line">select * from employee where (salary, manager) = (12500, 1);</span><br><span class="line">select * from employee where (salary, manager) = (select salary, manager from employee where name = &#x27;xxx&#x27;);</span><br></pre></td></tr></table></figure>

<h4 id="表子查询"><a href="#表子查询" class="headerlink" title="表子查询"></a>表子查询</h4><p>返回的结果是多行多列<br>常用操作符：IN</p>
<p>例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 查询与xxx1，xxx2的职位和薪资相同的员工</span><br><span class="line">select * from employee where (job, salary) in (select job, salary from employee where name = &#x27;xxx1&#x27; or name = &#x27;xxx2&#x27;);</span><br><span class="line">-- 查询入职日期是2006-01-01之后的员工，及其部门信息</span><br><span class="line">select e.*, d.* from (select * from employee where entrydate &gt; &#x27;2006-01-01&#x27;) as e left join dept as d on e.dept = d.id;</span><br></pre></td></tr></table></figure>

<h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><p>事务是一组操作的集合，事务会把所有操作作为一个整体一起向系统提交或撤销操作请求，即这些操作要么同时成功，要么同时失败。</p>
<p>基本操作：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 1. 查询张三账户余额</span><br><span class="line">select * from account where name = &#x27;张三&#x27;;</span><br><span class="line">-- 2. 将张三账户余额-1000</span><br><span class="line">update account set money = money - 1000 where name = &#x27;张三&#x27;;</span><br><span class="line">-- 此语句出错后张三钱减少但是李四钱没有增加</span><br><span class="line">模拟sql语句错误</span><br><span class="line">-- 3. 将李四账户余额+1000</span><br><span class="line">update account set money = money + 1000 where name = &#x27;李四&#x27;;</span><br><span class="line"></span><br><span class="line">-- 查看事务提交方式</span><br><span class="line">SELECT @@AUTOCOMMIT;</span><br><span class="line">-- 设置事务提交方式，1为自动提交，0为手动提交，该设置只对当前会话有效</span><br><span class="line">SET @@AUTOCOMMIT = 0;</span><br><span class="line">-- 提交事务</span><br><span class="line">COMMIT;</span><br><span class="line">-- 回滚事务</span><br><span class="line">ROLLBACK;</span><br><span class="line"></span><br><span class="line">-- 设置手动提交后上面代码改为：</span><br><span class="line">select * from account where name = &#x27;张三&#x27;;</span><br><span class="line">update account set money = money - 1000 where name = &#x27;张三&#x27;;</span><br><span class="line">update account set money = money + 1000 where name = &#x27;李四&#x27;;</span><br><span class="line">commit;</span><br></pre></td></tr></table></figure>

<p>操作方式二：</p>
<p>开启事务：<br><code>START TRANSACTION 或 BEGIN TRANSACTION;</code><br>提交事务：<br><code>COMMIT;</code><br>回滚事务：<br><code>ROLLBACK;</code></p>
<p>操作实例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">start transaction;</span><br><span class="line">select * from account where name = &#x27;张三&#x27;;</span><br><span class="line">update account set money = money - 1000 where name = &#x27;张三&#x27;;</span><br><span class="line">update account set money = money + 1000 where name = &#x27;李四&#x27;;</span><br><span class="line">commit;</span><br></pre></td></tr></table></figure>

<h3 id="四大特性ACID"><a href="#四大特性ACID" class="headerlink" title="四大特性ACID"></a>四大特性ACID</h3><ul>
<li>原子性(Atomicity)：事务是不可分割的最小操作但愿，要么全部成功，要么全部失败</li>
<li>一致性(Consistency)：事务完成时，必须使所有数据都保持一致状态</li>
<li>隔离性(Isolation)：数据库系统提供的隔离机制，保证事务在不受外部并发操作影响的独立环境下运行</li>
<li>持久性(Durability)：事务一旦提交或回滚，它对数据库中的数据的改变就是永久的</li>
</ul>
<h3 id="并发事务"><a href="#并发事务" class="headerlink" title="并发事务"></a>并发事务</h3><table>
<thead>
<tr>
<th>问题</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>脏读</td>
<td>一个事务读到另一个事务还没提交的数据</td>
</tr>
<tr>
<td>不可重复读</td>
<td>一个事务先后读取同一条记录，但两次读取的数据不同</td>
</tr>
<tr>
<td>幻读</td>
<td>一个事务按照条件查询数据时，没有对应的数据行，但是再插入数据时，又发现这行数据已经存在</td>
</tr>
</tbody></table>
<blockquote>
<p>这三个问题的详细演示：<a href="https://www.bilibili.com/video/BV1Kr4y1i7ru?p=55cd">https://www.bilibili.com/video/BV1Kr4y1i7ru?p=55cd</a> </p>
</blockquote>
<p>并发事务隔离级别：</p>
<table>
<thead>
<tr>
<th>隔离级别</th>
<th>脏读</th>
<th>不可重复读</th>
<th>幻读</th>
</tr>
</thead>
<tbody><tr>
<td>Read uncommitted</td>
<td>√</td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>Read committed</td>
<td>×</td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>Repeatable Read(默认)</td>
<td>×</td>
<td>×</td>
<td>√</td>
</tr>
<tr>
<td>Serializable</td>
<td>×</td>
<td>×</td>
<td>×</td>
</tr>
</tbody></table>
<ul>
<li>√表示在当前隔离级别下该问题会出现</li>
<li>Serializable 性能最低；Read uncommitted 性能最高，数据安全性最差</li>
</ul>
<p>查看事务隔离级别：<br><code>SELECT @@TRANSACTION_ISOLATION;</code><br>设置事务隔离级别：<br><code>SET [ SESSION | GLOBAL ] TRANSACTION ISOLATION LEVEL &#123;READ UNCOMMITTED | READ COMMITTED | REPEATABLE READ | SERIALIZABLE &#125;;</code><br>SESSION 是会话级别，表示只针对当前会话有效，GLOBAL 表示对所有会话有效</p>
<h1 id="进阶篇"><a href="#进阶篇" class="headerlink" title="进阶篇"></a>进阶篇</h1><h2 id="存储引擎"><a href="#存储引擎" class="headerlink" title="存储引擎"></a>存储引擎</h2><p>MySQL体系结构：</p>
<p><img src="https://dhc.pythonanywhere.com/media/editor/MySQL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84_20220315034329549927.png" alt="结构图" title="结构图"><br><img src="https://dhc.pythonanywhere.com/media/editor/MySQL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E5%B1%82%E7%BA%A7%E5%90%AB%E4%B9%89_20220315034359342837.png" alt="层级描述" title="层级描述"></p>
<p>存储引擎就是存储数据、建立索引、更新/查询数据等技术的实现方式。存储引擎是基于表而不是基于库的，所以存储引擎也可以被称为表引擎。<br>默认存储引擎是InnoDB。</p>
<p>相关操作：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 查询建表语句</span><br><span class="line">show create table account;</span><br><span class="line">-- 建表时指定存储引擎</span><br><span class="line">CREATE TABLE 表名(</span><br><span class="line">	...</span><br><span class="line">) ENGINE=INNODB;</span><br><span class="line">-- 查看当前数据库支持的存储引擎</span><br><span class="line">show engines;</span><br></pre></td></tr></table></figure>

<h3 id="InnoDB"><a href="#InnoDB" class="headerlink" title="InnoDB"></a>InnoDB</h3><p>InnoDB 是一种兼顾高可靠性和高性能的通用存储引擎，在 MySQL 5.5 之后，InnoDB 是默认的 MySQL 引擎。</p>
<p>特点：</p>
<ul>
<li>DML 操作遵循 ACID 模型，支持<strong>事务</strong></li>
<li><strong>行级锁</strong>，提高并发访问性能</li>
<li>支持<strong>外键</strong>约束，保证数据的完整性和正确性</li>
</ul>
<p>文件：</p>
<ul>
<li>xxx.ibd: xxx代表表名，InnoDB 引擎的每张表都会对应这样一个表空间文件，存储该表的表结构（frm、sdi）、数据和索引。</li>
</ul>
<p>参数：innodb_file_per_table，决定多张表共享一个表空间还是每张表对应一个表空间</p>
<p>知识点：</p>
<p>查看 Mysql 变量：<br><code>show variables like &#39;innodb_file_per_table&#39;;</code></p>
<p>从idb文件提取表结构数据：<br>（在cmd运行）<br><code>ibd2sdi xxx.ibd</code></p>
<p>InnoDB 逻辑存储结构：<br><img src="https://dhc.pythonanywhere.com/media/editor/%E9%80%BB%E8%BE%91%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84_20220316030616590001.png" alt="InnoDB逻辑存储结构" title="InnoDB逻辑存储结构"></p>
<h3 id="MyISAM"><a href="#MyISAM" class="headerlink" title="MyISAM"></a>MyISAM</h3><p>MyISAM 是 MySQL 早期的默认存储引擎。</p>
<p>特点：</p>
<ul>
<li>不支持事务，不支持外键</li>
<li>支持表锁，不支持行锁</li>
<li>访问速度快</li>
</ul>
<p>文件：</p>
<ul>
<li>xxx.sdi: 存储表结构信息</li>
<li>xxx.MYD: 存储数据</li>
<li>xxx.MYI: 存储索引</li>
</ul>
<h3 id="Memory"><a href="#Memory" class="headerlink" title="Memory"></a>Memory</h3><p>Memory 引擎的表数据是存储在内存中的，受硬件问题、断电问题的影响，只能将这些表作为临时表或缓存使用。</p>
<p>特点：</p>
<ul>
<li>存放在内存中，速度快</li>
<li>hash索引（默认）</li>
</ul>
<p>文件：</p>
<ul>
<li>xxx.sdi: 存储表结构信息</li>
</ul>
<h3 id="存储引擎特点"><a href="#存储引擎特点" class="headerlink" title="存储引擎特点"></a>存储引擎特点</h3><table>
<thead>
<tr>
<th>特点</th>
<th>InnoDB</th>
<th>MyISAM</th>
<th>Memory</th>
</tr>
</thead>
<tbody><tr>
<td>存储限制</td>
<td>64TB</td>
<td>有</td>
<td>有</td>
</tr>
<tr>
<td>事务安全</td>
<td>支持</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td>锁机制</td>
<td>行锁</td>
<td>表锁</td>
<td>表锁</td>
</tr>
<tr>
<td>B+tree索引</td>
<td>支持</td>
<td>支持</td>
<td>支持</td>
</tr>
<tr>
<td>Hash索引</td>
<td>-</td>
<td>-</td>
<td>支持</td>
</tr>
<tr>
<td>全文索引</td>
<td>支持（5.6版本之后）</td>
<td>支持</td>
<td>-</td>
</tr>
<tr>
<td>空间使用</td>
<td>高</td>
<td>低</td>
<td>N/A</td>
</tr>
<tr>
<td>内存使用</td>
<td>高</td>
<td>低</td>
<td>中等</td>
</tr>
<tr>
<td>批量插入速度</td>
<td>低</td>
<td>高</td>
<td>高</td>
</tr>
<tr>
<td>支持外键</td>
<td>支持</td>
<td>-</td>
<td>-</td>
</tr>
</tbody></table>
<h3 id="存储引擎的选择"><a href="#存储引擎的选择" class="headerlink" title="存储引擎的选择"></a>存储引擎的选择</h3><p>在选择存储引擎时，应该根据应用系统的特点选择合适的存储引擎。对于复杂的应用系统，还可以根据实际情况选择多种存储引擎进行组合。</p>
<ul>
<li>InnoDB: 如果应用对事物的完整性有比较高的要求，在并发条件下要求数据的一致性，数据操作除了插入和查询之外，还包含很多的更新、删除操作，则 InnoDB 是比较合适的选择</li>
<li>MyISAM: 如果应用是以读操作和插入操作为主，只有很少的更新和删除操作，并且对事务的完整性、并发性要求不高，那这个存储引擎是非常合适的。</li>
<li>Memory: 将所有数据保存在内存中，访问速度快，通常用于临时表及缓存。Memory 的缺陷是对表的大小有限制，太大的表无法缓存在内存中，而且无法保障数据的安全性</li>
</ul>
<p>电商中的足迹和评论适合使用 MyISAM 引擎，缓存适合使用 Memory 引擎。</p>
<h2 id="性能分析"><a href="#性能分析" class="headerlink" title="性能分析"></a>性能分析</h2><h3 id="查看执行频次"><a href="#查看执行频次" class="headerlink" title="查看执行频次"></a>查看执行频次</h3><p>查看当前数据库的 INSERT, UPDATE, DELETE, SELECT 访问频次：<br><code>SHOW GLOBAL STATUS LIKE &#39;Com_______&#39;;</code> 或者 <code>SHOW SESSION STATUS LIKE &#39;Com_______&#39;;</code><br>例：<code>show global status like &#39;Com_______&#39;</code></p>
<h3 id="慢查询日志"><a href="#慢查询日志" class="headerlink" title="慢查询日志"></a>慢查询日志</h3><p>慢查询日志记录了所有执行时间超过指定参数（long_query_time，单位：秒，默认10秒）的所有SQL语句的日志。<br>MySQL的慢查询日志默认没有开启，需要在MySQL的配置文件（/etc/my.cnf）中配置如下信息：<br>    # 开启慢查询日志开关<br>    slow_query_log=1<br>    # 设置慢查询日志的时间为2秒，SQL语句执行时间超过2秒，就会视为慢查询，记录慢查询日志<br>    long_query_time=2<br>更改后记得重启MySQL服务，日志文件位置：/var/lib/mysql/localhost-slow.log</p>
<p>查看慢查询日志开关状态：<br><code>show variables like &#39;slow_query_log&#39;;</code></p>
<h3 id="profile"><a href="#profile" class="headerlink" title="profile"></a>profile</h3><p>show profile 能在做SQL优化时帮我们了解时间都耗费在哪里。通过 have_profiling 参数，能看到当前 MySQL 是否支持 profile 操作：<br><code>SELECT @@have_profiling;</code><br>profiling 默认关闭，可以通过set语句在session/global级别开启 profiling：<br><code>SET profiling = 1;</code><br>查看所有语句的耗时：<br><code>show profiles;</code><br>查看指定query_id的SQL语句各个阶段的耗时：<br><code>show profile for query query_id;</code><br>查看指定query_id的SQL语句CPU的使用情况<br><code>show profile cpu for query query_id;</code></p>
<h3 id="explain"><a href="#explain" class="headerlink" title="explain"></a>explain</h3><p>EXPLAIN 或者 DESC 命令获取 MySQL 如何执行 SELECT 语句的信息，包括在 SELECT 语句执行过程中表如何连接和连接的顺序。<br>语法：<br>    # 直接在select语句之前加上关键字 explain / desc<br>    EXPLAIN SELECT 字段列表 FROM 表名 HWERE 条件;</p>
<p>EXPLAIN 各字段含义：</p>
<ul>
<li>id：select 查询的序列号，表示查询中执行 select 子句或者操作表的顺序（id相同，执行顺序从上到下；id不同，值越大越先执行）</li>
<li>select_type：表示 SELECT 的类型，常见取值有 SIMPLE（简单表，即不适用表连接或者子查询）、PRIMARY（主查询，即外层的查询）、UNION（UNION中的第二个或者后面的查询语句）、SUBQUERY（SELECT/WHERE之后包含了子查询）等</li>
<li>type：表示连接类型，性能由好到差的连接类型为 NULL、system、const、eq_ref、ref、range、index、all</li>
<li>possible_key：可能应用在这张表上的索引，一个或多个</li>
<li>Key：实际使用的索引，如果为 NULL，则没有使用索引</li>
<li>Key_len：表示索引中使用的字节数，该值为索引字段最大可能长度，并非实际使用长度，在不损失精确性的前提下，长度越短越好</li>
<li>rows：MySQL认为必须要执行的行数，在InnoDB引擎的表中，是一个估计值，可能并不总是准确的</li>
<li>filtered：表示返回结果的行数占需读取行数的百分比，filtered的值越大越好</li>
</ul>
<h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><p>索引是帮助 MySQL <strong>高效获取数据</strong>的<strong>数据结构（有序）</strong>。在数据之外，数据库系统还维护着满足特定查找算法的数据结构，这些数据结构以某种方式引用（指向）数据，这样就可以在这些数据结构上实现高级查询算法，这种数据结构就是索引。</p>
<p>优缺点：</p>
<p>优点：</p>
<ul>
<li>提高数据检索效率，降低数据库的IO成本</li>
<li>通过索引列对数据进行排序，降低数据排序的成本，降低CPU的消耗</li>
</ul>
<p>缺点：</p>
<ul>
<li>索引列也是要占用空间的</li>
<li>索引大大提高了查询效率，但降低了更新的速度，比如 INSERT、UPDATE、DELETE</li>
</ul>
<h3 id="索引结构"><a href="#索引结构" class="headerlink" title="索引结构"></a>索引结构</h3><table>
<thead>
<tr>
<th>索引结构</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>B+Tree</td>
<td>最常见的索引类型，大部分引擎都支持B+树索引</td>
</tr>
<tr>
<td>Hash</td>
<td>底层数据结构是用哈希表实现，只有精确匹配索引列的查询才有效，不支持范围查询</td>
</tr>
<tr>
<td>R-Tree(空间索引)</td>
<td>空间索引是 MyISAM 引擎的一个特殊索引类型，主要用于地理空间数据类型，通常使用较少</td>
</tr>
<tr>
<td>Full-Text(全文索引)</td>
<td>是一种通过建立倒排索引，快速匹配文档的方式，类似于 Lucene, Solr, ES</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>索引</th>
<th>InnoDB</th>
<th>MyISAM</th>
<th>Memory</th>
</tr>
</thead>
<tbody><tr>
<td>B+Tree索引</td>
<td>支持</td>
<td>支持</td>
<td>支持</td>
</tr>
<tr>
<td>Hash索引</td>
<td>不支持</td>
<td>不支持</td>
<td>支持</td>
</tr>
<tr>
<td>R-Tree索引</td>
<td>不支持</td>
<td>支持</td>
<td>不支持</td>
</tr>
<tr>
<td>Full-text</td>
<td>5.6版本后支持</td>
<td>支持</td>
<td>不支持</td>
</tr>
</tbody></table>
<h4 id="B-Tree"><a href="#B-Tree" class="headerlink" title="B-Tree"></a>B-Tree</h4><p><img src="https://dhc.pythonanywhere.com/media/editor/%E4%BA%8C%E5%8F%89%E6%A0%91_20220316153214227108.png" alt="二叉树" title="二叉树"></p>
<p>二叉树的缺点可以用红黑树来解决：<br><img src="https://dhc.pythonanywhere.com/media/editor/%E7%BA%A2%E9%BB%91%E6%A0%91_20220316163142686602.png" alt="红黑树" title="红黑树"><br>红黑树也存在大数据量情况下，层级较深，检索速度慢的问题。</p>
<p>为了解决上述问题，可以使用 B-Tree 结构。<br>B-Tree (多路平衡查找树) 以一棵最大度数（max-degree，指一个节点的子节点个数）为5（5阶）的 b-tree 为例（每个节点最多存储4个key，5个指针）</p>
<p><img src="https://dhc.pythonanywhere.com/media/editor/B-Tree%E7%BB%93%E6%9E%84_20220316163813441163.png" alt="B-Tree结构" title="B-Tree结构"></p>
<blockquote>
<p>B-Tree 的数据插入过程动画参照：<a href="https://www.bilibili.com/video/BV1Kr4y1i7ru?p=68">https://www.bilibili.com/video/BV1Kr4y1i7ru?p=68</a><br>演示地址：<a href="https://www.cs.usfca.edu/~galles/visualization/BTree.html">https://www.cs.usfca.edu/~galles/visualization/BTree.html</a></p>
</blockquote>
<h4 id="B-Tree-1"><a href="#B-Tree-1" class="headerlink" title="B+Tree"></a>B+Tree</h4><p>结构图：</p>
<p><img src="https://dhc.pythonanywhere.com/media/editor/B+Tree%E7%BB%93%E6%9E%84%E5%9B%BE_20220316170700591277.png" alt="B+Tree结构图" title="B+Tree结构图"></p>
<blockquote>
<p>演示地址：<a href="https://www.cs.usfca.edu/~galles/visualization/BPlusTree.html">https://www.cs.usfca.edu/~galles/visualization/BPlusTree.html</a></p>
</blockquote>
<p>与 B-Tree 的区别：</p>
<ul>
<li>所有的数据都会出现在叶子节点</li>
<li>叶子节点形成一个单向链表</li>
</ul>
<p>MySQL 索引数据结构对经典的 B+Tree 进行了优化。在原 B+Tree 的基础上，增加一个指向相邻叶子节点的链表指针，就形成了带有顺序指针的 B+Tree，提高区间访问的性能。</p>
<p><img src="https://dhc.pythonanywhere.com/media/editor/%E7%BB%93%E6%9E%84%E5%9B%BE_20220316171730865611.png" alt="MySQL B+Tree 结构图" title="MySQL B+Tree 结构图"></p>
<h4 id="Hash"><a href="#Hash" class="headerlink" title="Hash"></a>Hash</h4><p>哈希索引就是采用一定的hash算法，将键值换算成新的hash值，映射到对应的槽位上，然后存储在hash表中。<br>如果两个（或多个）键值，映射到一个相同的槽位上，他们就产生了hash冲突（也称为hash碰撞），可以通过链表来解决。</p>
<p><img src="https://dhc.pythonanywhere.com/media/editor/Hash%E7%B4%A2%E5%BC%95%E5%8E%9F%E7%90%86%E5%9B%BE_20220317143226150679.png" alt="Hash索引原理图" title="Hash索引原理图"></p>
<p>特点：</p>
<ul>
<li>Hash索引只能用于对等比较（=、in），不支持范围查询（betwwn、&gt;、&lt;、…）</li>
<li>无法利用索引完成排序操作</li>
<li>查询效率高，通常只需要一次检索就可以了，效率通常要高于 B+Tree 索引</li>
</ul>
<p>存储引擎支持：</p>
<ul>
<li>Memory</li>
<li>InnoDB: 具有自适应hash功能，hash索引是存储引擎根据 B+Tree 索引在指定条件下自动构建的</li>
</ul>
<h4 id="面试题"><a href="#面试题" class="headerlink" title="面试题"></a>面试题</h4><ol>
<li>为什么 InnoDB 存储引擎选择使用 B+Tree 索引结构？</li>
</ol>
<ul>
<li>相对于二叉树，层级更少，搜索效率高</li>
<li>对于 B-Tree，无论是叶子节点还是非叶子节点，都会保存数据，这样导致一页中存储的键值减少，指针也跟着减少，要同样保存大量数据，只能增加树的高度，导致性能降低</li>
<li>相对于 Hash 索引，B+Tree 支持范围匹配及排序操作</li>
</ul>
<h3 id="索引分类"><a href="#索引分类" class="headerlink" title="索引分类"></a>索引分类</h3><table>
<thead>
<tr>
<th>分类</th>
<th>含义</th>
<th>特点</th>
<th>关键字</th>
</tr>
</thead>
<tbody><tr>
<td>主键索引</td>
<td>针对于表中主键创建的索引</td>
<td>默认自动创建，只能有一个</td>
<td>PRIMARY</td>
</tr>
<tr>
<td>唯一索引</td>
<td>避免同一个表中某数据列中的值重复</td>
<td>可以有多个</td>
<td>UNIQUE</td>
</tr>
<tr>
<td>常规索引</td>
<td>快速定位特定数据</td>
<td>可以有多个</td>
<td></td>
</tr>
<tr>
<td>全文索引</td>
<td>全文索引查找的是文本中的关键词，而不是比较索引中的值</td>
<td>可以有多个</td>
<td>FULLTEXT</td>
</tr>
</tbody></table>
<p>在 InnoDB 存储引擎中，根据索引的存储形式，又可以分为以下两种：</p>
<table>
<thead>
<tr>
<th>分类</th>
<th>含义</th>
<th>特点</th>
</tr>
</thead>
<tbody><tr>
<td>聚集索引(Clustered Index)</td>
<td>将数据存储与索引放一块，索引结构的叶子节点保存了行数据</td>
<td>必须有，而且只有一个</td>
</tr>
<tr>
<td>二级索引(Secondary Index)</td>
<td>将数据与索引分开存储，索引结构的叶子节点关联的是对应的主键</td>
<td>可以存在多个</td>
</tr>
</tbody></table>
<p>演示图：</p>
<p><img src="https://dhc.pythonanywhere.com/media/editor/%E5%8E%9F%E7%90%86%E5%9B%BE_20220318194454880073.png" alt="大致原理" title="大致原理"><br><img src="https://dhc.pythonanywhere.com/media/editor/%E6%BC%94%E7%A4%BA%E5%9B%BE_20220319215403721066.png" alt="演示图" title="演示图"></p>
<p>聚集索引选取规则：</p>
<ul>
<li>如果存在主键，主键索引就是聚集索引</li>
<li>如果不存在主键，将使用第一个唯一(UNIQUE)索引作为聚集索引</li>
<li>如果表没有主键或没有合适的唯一索引，则 InnoDB 会自动生成一个 rowid 作为隐藏的聚集索引</li>
</ul>
<h4 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h4><p>1. 以下 SQL 语句，哪个执行效率高？为什么？</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from user where id = 10;</span><br><span class="line">select * from user where name = &#x27;Arm&#x27;;</span><br><span class="line">-- 备注：id为主键，name字段创建的有索引</span><br></pre></td></tr></table></figure>

<p>答：第一条语句，因为第二条需要回表查询，相当于两个步骤。</p>
<p>2. InnoDB 主键索引的 B+Tree 高度为多少？</p>
<p>答：假设一行数据大小为1k，一页中可以存储16行这样的数据。InnoDB 的指针占用6个字节的空间，主键假设为bigint，占用字节数为8.<br>可得公式：<code>n * 8 + (n + 1) * 6 = 16 * 1024</code>，其中 8 表示 bigint 占用的字节数，n 表示当前节点存储的key的数量，(n + 1) 表示指针数量（比key多一个）。算出n约为1170。</p>
<p>如果树的高度为2，那么他能存储的数据量大概为：<code>1171 * 16 = 18736</code>；<br>如果树的高度为3，那么他能存储的数据量大概为：<code>1171 * 1171 * 16 = 21939856</code>。</p>
<p>另外，如果有成千上万的数据，那么就要考虑分表，涉及运维篇知识。</p>
<h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p>创建索引：<br><code>CREATE [ UNIQUE | FULLTEXT ] INDEX index_name ON table_name (index_col_name, ...);</code><br>如果不加 CREATE 后面不加索引类型参数，则创建的是常规索引</p>
<p>查看索引：<br><code>SHOW INDEX FROM table_name;</code></p>
<p>删除索引：<br><code>DROP INDEX index_name ON table_name;</code></p>
<p>案例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- name字段为姓名字段，该字段的值可能会重复，为该字段创建索引</span><br><span class="line">create index idx_user_name on tb_user(name);</span><br><span class="line">-- phone手机号字段的值非空，且唯一，为该字段创建唯一索引</span><br><span class="line">create unique index idx_user_phone on tb_user (phone);</span><br><span class="line">-- 为profession, age, status创建联合索引</span><br><span class="line">create index idx_user_pro_age_stat on tb_user(profession, age, status);</span><br><span class="line">-- 为email建立合适的索引来提升查询效率</span><br><span class="line">create index idx_user_email on tb_user(email);</span><br><span class="line"></span><br><span class="line">-- 删除索引</span><br><span class="line">drop index idx_user_email on tb_user;</span><br></pre></td></tr></table></figure>

<h3 id="使用规则"><a href="#使用规则" class="headerlink" title="使用规则"></a>使用规则</h3><h4 id="最左前缀法则"><a href="#最左前缀法则" class="headerlink" title="最左前缀法则"></a>最左前缀法则</h4><p>如果索引关联了多列（联合索引），要遵守最左前缀法则，最左前缀法则指的是查询从索引的最左列开始，并且不跳过索引中的列。<br>如果跳跃某一列，索引将部分失效（后面的字段索引失效）。</p>
<p>联合索引中，出现范围查询（&lt;, &gt;），范围查询右侧的列索引失效。可以用&gt;=或者&lt;=来规避索引失效问题。</p>
<h4 id="索引失效情况"><a href="#索引失效情况" class="headerlink" title="索引失效情况"></a>索引失效情况</h4><ol>
<li>在索引列上进行运算操作，索引将失效。如：<code>explain select * from tb_user where substring(phone, 10, 2) = &#39;15&#39;;</code></li>
<li>字符串类型字段使用时，不加引号，索引将失效。如：<code>explain select * from tb_user where phone = 17799990015;</code>，此处phone的值没有加引号</li>
<li>模糊查询中，如果仅仅是尾部模糊匹配，索引不会是失效；如果是头部模糊匹配，索引失效。如：<code>explain select * from tb_user where profession like &#39;%工程&#39;;</code>，前后都有 % 也会失效。</li>
<li>用 or 分割开的条件，如果 or 其中一个条件的列没有索引，那么涉及的索引都不会被用到。</li>
<li>如果 MySQL 评估使用索引比全表更慢，则不使用索引。</li>
</ol>
<h4 id="SQL-提示"><a href="#SQL-提示" class="headerlink" title="SQL 提示"></a>SQL 提示</h4><p>是优化数据库的一个重要手段，简单来说，就是在SQL语句中加入一些人为的提示来达到优化操作的目的。</p>
<p>例如，使用索引：<br><code>explain select * from tb_user use index(idx_user_pro) where profession=&quot;软件工程&quot;;</code><br>不使用哪个索引：<br><code>explain select * from tb_user ignore index(idx_user_pro) where profession=&quot;软件工程&quot;;</code><br>必须使用哪个索引：<br><code>explain select * from tb_user force index(idx_user_pro) where profession=&quot;软件工程&quot;;</code></p>
<p>use 是建议，实际使用哪个索引 MySQL 还会自己权衡运行速度去更改，force就是无论如何都强制使用该索引。</p>
<h4 id="覆盖索引-amp-回表查询"><a href="#覆盖索引-amp-回表查询" class="headerlink" title="覆盖索引&amp;回表查询"></a>覆盖索引&amp;回表查询</h4><p>尽量使用覆盖索引（查询使用了索引，并且需要返回的列，在该索引中已经全部能找到），减少 select *。</p>
<p>explain 中 extra 字段含义：<br><code>using index condition</code>：查找使用了索引，但是需要回表查询数据<br><code>using where; using index;</code>：查找使用了索引，但是需要的数据都在索引列中能找到，所以不需要回表查询</p>
<p>如果在聚集索引中直接能找到对应的行，则直接返回行数据，只需要一次查询，哪怕是select *；如果在辅助索引中找聚集索引，如<code>select id, name from xxx where name=&#39;xxx&#39;;</code>，也只需要通过辅助索引(name)查找到对应的id，返回name和name索引对应的id即可，只需要一次查询；如果是通过辅助索引查找其他字段，则需要回表查询，如<code>select id, name, gender from xxx where name=&#39;xxx&#39;;</code></p>
<p>所以尽量不要用<code>select *</code>，容易出现回表查询，降低效率，除非有联合索引包含了所有字段</p>
<p>面试题：一张表，有四个字段（id, username, password, status），由于数据量大，需要对以下SQL语句进行优化，该如何进行才是最优方案：<br><code>select id, username, password from tb_user where username=&#39;itcast&#39;;</code></p>
<p>解：给username和password字段建立联合索引，则不需要回表查询，直接覆盖索引</p>
<h4 id="前缀索引"><a href="#前缀索引" class="headerlink" title="前缀索引"></a>前缀索引</h4><p>当字段类型为字符串（varchar, text等）时，有时候需要索引很长的字符串，这会让索引变得很大，查询时，浪费大量的磁盘IO，影响查询效率，此时可以只降字符串的一部分前缀，建立索引，这样可以大大节约索引空间，从而提高索引效率。</p>
<p>语法：<code>create index idx_xxxx on table_name(columnn(n));</code><br>前缀长度：可以根据索引的选择性来决定，而选择性是指不重复的索引值（基数）和数据表的记录总数的比值，索引选择性越高则查询效率越高，唯一索引的选择性是1，这是最好的索引选择性，性能也是最好的。<br>求选择性公式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select count(distinct email) / count(*) from tb_user;</span><br><span class="line">select count(distinct substring(email, 1, 5)) / count(*) from tb_user;</span><br></pre></td></tr></table></figure>

<p>show index 里面的sub_part可以看到接取的长度</p>
<h4 id="单列索引-amp-联合索引"><a href="#单列索引-amp-联合索引" class="headerlink" title="单列索引&amp;联合索引"></a>单列索引&amp;联合索引</h4><p>单列索引：即一个索引只包含单个列<br>联合索引：即一个索引包含了多个列<br>在业务场景中，如果存在多个查询条件，考虑针对于查询字段建立索引时，建议建立联合索引，而非单列索引。</p>
<p>单列索引情况：<br><code>explain select id, phone, name from tb_user where phone = &#39;17799990010&#39; and name = &#39;韩信&#39;;</code><br>这句只会用到phone索引字段</p>
<h5 id="注意事项-8"><a href="#注意事项-8" class="headerlink" title="注意事项"></a>注意事项</h5><ul>
<li>多条件联合查询时，MySQL优化器会评估哪个字段的索引效率更高，会选择该索引完成本次查询</li>
</ul>
<h3 id="设计原则"><a href="#设计原则" class="headerlink" title="设计原则"></a>设计原则</h3><ol>
<li>针对于数据量较大，且查询比较频繁的表建立索引</li>
<li>针对于常作为查询条件（where）、排序（order by）、分组（group by）操作的字段建立索引</li>
<li>尽量选择区分度高的列作为索引，尽量建立唯一索引，区分度越高，使用索引的效率越高</li>
<li>如果是字符串类型的字段，字段长度较长，可以针对于字段的特点，建立前缀索引</li>
<li>尽量使用联合索引，减少单列索引，查询时，联合索引很多时候可以覆盖索引，节省存储空间，避免回表，提高查询效率</li>
<li>要控制索引的数量，索引并不是多多益善，索引越多，维护索引结构的代价就越大，会影响增删改的效率</li>
<li>如果索引列不能存储NULL值，请在创建表时使用NOT NULL约束它。当优化器知道每列是否包含NULL值时，它可以更好地确定哪个索引最有效地用于查询</li>
</ol>
<h2 id="SQL-优化"><a href="#SQL-优化" class="headerlink" title="SQL 优化"></a>SQL 优化</h2><h3 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h3><p>普通插入：</p>
<ol>
<li>采用批量插入（一次插入的数据不建议超过1000条）</li>
<li>手动提交事务</li>
<li>主键顺序插入</li>
</ol>
<p>大批量插入：<br>如果一次性需要插入大批量数据，使用insert语句插入性能较低，此时可以使用MySQL数据库提供的load指令插入。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 客户端连接服务端时，加上参数 --local-infile（这一行在bash/cmd界面输入）</span><br><span class="line">mysql --local-infile -u root -p</span><br><span class="line"># 设置全局参数local_infile为1，开启从本地加载文件导入数据的开关</span><br><span class="line">set global local_infile = 1;</span><br><span class="line">select @@local_infile;</span><br><span class="line"># 执行load指令将准备好的数据，加载到表结构中</span><br><span class="line">load data local infile &#x27;/root/sql1.log&#x27; into table &#x27;tb_user&#x27; fields terminated by &#x27;,&#x27; lines terminated by &#x27;\n&#x27;;</span><br></pre></td></tr></table></figure>

<h3 id="主键优化"><a href="#主键优化" class="headerlink" title="主键优化"></a>主键优化</h3><p>数据组织方式：在InnoDB存储引擎中，表数据都是根据主键顺序组织存放的，这种存储方式的表称为索引组织表（Index organized table, IOT）</p>
<p>页分裂：页可以为空，也可以填充一般，也可以填充100%，每个页包含了2-N行数据（如果一行数据过大，会行溢出），根据主键排列。<br>页合并：当删除一行记录时，实际上记录并没有被物理删除，只是记录被标记（flaged）为删除并且它的空间变得允许被其他记录声明使用。当页中删除的记录到达 MERGE_THRESHOLD（默认为页的50%），InnoDB会开始寻找最靠近的页（前后）看看是否可以将这两个页合并以优化空间使用。</p>
<p>MERGE_THRESHOLD：合并页的阈值，可以自己设置，在创建表或创建索引时指定</p>
<blockquote>
<p>文字说明不够清晰明了，具体可以看视频里的PPT演示过程：<a href="https://www.bilibili.com/video/BV1Kr4y1i7ru?p=90">https://www.bilibili.com/video/BV1Kr4y1i7ru?p=90</a></p>
</blockquote>
<p>主键设计原则：</p>
<ul>
<li>满足业务需求的情况下，尽量降低主键的长度</li>
<li>插入数据时，尽量选择顺序插入，选择使用 AUTO_INCREMENT 自增主键</li>
<li>尽量不要使用 UUID 做主键或者是其他的自然主键，如身份证号</li>
<li>业务操作时，避免对主键的修改</li>
</ul>
<h3 id="order-by优化"><a href="#order-by优化" class="headerlink" title="order by优化"></a>order by优化</h3><ol>
<li>Using filesort：通过表的索引或全表扫描，读取满足条件的数据行，然后在排序缓冲区 sort buffer 中完成排序操作，所有不是通过索引直接返回排序结果的排序都叫 FileSort 排序</li>
<li>Using index：通过有序索引顺序扫描直接返回有序数据，这种情况即为 using index，不需要额外排序，操作效率高</li>
</ol>
<p>如果order by字段全部使用升序排序或者降序排序，则都会走索引，但是如果一个字段升序排序，另一个字段降序排序，则不会走索引，explain的extra信息显示的是<code>Using index, Using filesort</code>，如果要优化掉Using filesort，则需要另外再创建一个索引，如：<code>create index idx_user_age_phone_ad on tb_user(age asc, phone desc);</code>，此时使用<code>select id, age, phone from tb_user order by age asc, phone desc;</code>会全部走索引</p>
<p>总结：</p>
<ul>
<li>根据排序字段建立合适的索引，多字段排序时，也遵循最左前缀法则</li>
<li>尽量使用覆盖索引</li>
<li>多字段排序，一个升序一个降序，此时需要注意联合索引在创建时的规则（ASC/DESC）</li>
<li>如果不可避免出现filesort，大数据量排序时，可以适当增大排序缓冲区大小 sort_buffer_size（默认256k）</li>
</ul>
<h3 id="group-by优化"><a href="#group-by优化" class="headerlink" title="group by优化"></a>group by优化</h3><ul>
<li>在分组操作时，可以通过索引来提高效率</li>
<li>分组操作时，索引的使用也是满足最左前缀法则的</li>
</ul>
<p>如索引为<code>idx_user_pro_age_stat</code>，则句式可以是<code>select ... where profession order by age</code>，这样也符合最左前缀法则</p>
<h3 id="limit优化"><a href="#limit优化" class="headerlink" title="limit优化"></a>limit优化</h3><p>常见的问题如<code>limit 2000000, 10</code>，此时需要 MySQL 排序前2000000条记录，但仅仅返回2000000 - 2000010的记录，其他记录丢弃，查询排序的代价非常大。<br>优化方案：一般分页查询时，通过创建覆盖索引能够比较好地提高性能，可以通过覆盖索引加子查询形式进行优化</p>
<p>例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 此语句耗时很长</span><br><span class="line">select * from tb_sku limit 9000000, 10;</span><br><span class="line">-- 通过覆盖索引加快速度，直接通过主键索引进行排序及查询</span><br><span class="line">select id from tb_sku order by id limit 9000000, 10;</span><br><span class="line">-- 下面的语句是错误的，因为 MySQL 不支持 in 里面使用 limit</span><br><span class="line">-- select * from tb_sku where id in (select id from tb_sku order by id limit 9000000, 10);</span><br><span class="line">-- 通过连表查询即可实现第一句的效果，并且能达到第二句的速度</span><br><span class="line">select * from tb_sku as s, (select id from tb_sku order by id limit 9000000, 10) as a where s.id = a.id;</span><br></pre></td></tr></table></figure>

<h3 id="count优化"><a href="#count优化" class="headerlink" title="count优化"></a>count优化</h3><p>MyISAM 引擎把一个表的总行数存在了磁盘上，因此执行 count(*) 的时候会直接返回这个数，效率很高（前提是不适用where）；<br>InnoDB 在执行 count(*) 时，需要把数据一行一行地从引擎里面读出来，然后累计计数。<br>优化方案：自己计数，如创建key-value表存储在内存或硬盘，或者是用redis</p>
<p>count的几种用法：</p>
<ul>
<li>如果count函数的参数（count里面写的那个字段）不是NULL（字段值不为NULL），累计值就加一，最后返回累计值</li>
<li>用法：count(*)、count(主键)、count(字段)、count(1)</li>
<li>count(主键)跟count(*)一样，因为主键不能为空；count(字段)只计算字段值不为NULL的行；count(1)引擎会为每行添加一个1，然后就count这个1，返回结果也跟count(*)一样；count(null)返回0</li>
</ul>
<p>各种用法的性能：</p>
<ul>
<li>count(主键)：InnoDB引擎会遍历整张表，把每行的主键id值都取出来，返回给服务层，服务层拿到主键后，直接按行进行累加（主键不可能为空）</li>
<li>count(字段)：没有not null约束的话，InnoDB引擎会遍历整张表把每一行的字段值都取出来，返回给服务层，服务层判断是否为null，不为null，计数累加；有not null约束的话，InnoDB引擎会遍历整张表把每一行的字段值都取出来，返回给服务层，直接按行进行累加</li>
<li>count(1)：InnoDB 引擎遍历整张表，但不取值。服务层对于返回的每一层，放一个数字 1 进去，直接按行进行累加</li>
<li>count(*)：InnoDB 引擎并不会把全部字段取出来，而是专门做了优化，不取值，服务层直接按行进行累加</li>
</ul>
<p>按效率排序：count(字段) &lt; count(主键) &lt; count(1) &lt; count(*)，所以尽量使用 count(*)</p>
<h3 id="update优化（避免行锁升级为表锁）"><a href="#update优化（避免行锁升级为表锁）" class="headerlink" title="update优化（避免行锁升级为表锁）"></a>update优化（避免行锁升级为表锁）</h3><p>InnoDB 的行锁是针对索引加的锁，不是针对记录加的锁，并且该索引不能失效，否则会从行锁升级为表锁。</p>
<p>如以下两条语句：<br><code>update student set no = &#39;123&#39; where id = 1;</code>，这句由于id有主键索引，所以只会锁这一行；<br><code>update student set no = &#39;123&#39; where name = &#39;test&#39;;</code>，这句由于name没有索引，所以会把整张表都锁住进行数据更新，解决方法是给name字段添加索引</p>
<h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><h2 id="整型"><a href="#整型" class="headerlink" title="整型"></a>整型</h2><table>
<thead>
<tr>
<th>类型名称</th>
<th>取值范围</th>
<th>大小</th>
</tr>
</thead>
<tbody><tr>
<td>TINYINT</td>
<td>-128〜127</td>
<td>1个字节</td>
</tr>
<tr>
<td>SMALLINT</td>
<td>-32768〜32767</td>
<td>2个宇节</td>
</tr>
<tr>
<td>MEDIUMINT</td>
<td>-8388608〜8388607</td>
<td>3个字节</td>
</tr>
<tr>
<td>INT (INTEGHR)</td>
<td>-2147483648〜2147483647</td>
<td>4个字节</td>
</tr>
<tr>
<td>BIGINT</td>
<td>-9223372036854775808〜9223372036854775807</td>
<td>8个字节</td>
</tr>
</tbody></table>
<p>无符号在数据类型后加 unsigned 关键字。</p>
<h2 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h2><table>
<thead>
<tr>
<th>类型名称</th>
<th>说明</th>
<th>存储需求</th>
</tr>
</thead>
<tbody><tr>
<td>FLOAT</td>
<td>单精度浮点数</td>
<td>4 个字节</td>
</tr>
<tr>
<td>DOUBLE</td>
<td>双精度浮点数</td>
<td>8 个字节</td>
</tr>
<tr>
<td>DECIMAL (M, D)，DEC</td>
<td>压缩的“严格”定点数</td>
<td>M+2 个字节</td>
</tr>
</tbody></table>
<h2 id="日期和时间"><a href="#日期和时间" class="headerlink" title="日期和时间"></a>日期和时间</h2><table>
<thead>
<tr>
<th>类型名称</th>
<th>日期格式</th>
<th>日期范围</th>
<th>存储需求</th>
</tr>
</thead>
<tbody><tr>
<td>YEAR</td>
<td>YYYY</td>
<td>1901 ~ 2155</td>
<td>1 个字节</td>
</tr>
<tr>
<td>TIME</td>
<td>HH:MM:SS</td>
<td>-838:59:59 ~ 838:59:59</td>
<td>3 个字节</td>
</tr>
<tr>
<td>DATE</td>
<td>YYYY-MM-DD</td>
<td>1000-01-01 ~ 9999-12-3</td>
<td>3 个字节</td>
</tr>
<tr>
<td>DATETIME</td>
<td>YYYY-MM-DD HH:MM:SS</td>
<td>1000-01-01 00:00:00 ~ 9999-12-31 23:59:59</td>
<td>8 个字节</td>
</tr>
<tr>
<td>TIMESTAMP</td>
<td>YYYY-MM-DD HH:MM:SS</td>
<td>1980-01-01 00:00:01 UTC ~ 2040-01-19 03:14:07 UTC</td>
<td>4 个字节</td>
</tr>
</tbody></table>
<h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><table>
<thead>
<tr>
<th>类型名称</th>
<th>说明</th>
<th>存储需求</th>
</tr>
</thead>
<tbody><tr>
<td>CHAR(M)</td>
<td>固定长度非二进制字符串</td>
<td>M 字节，1&lt;=M&lt;=255</td>
</tr>
<tr>
<td>VARCHAR(M)</td>
<td>变长非二进制字符串</td>
<td>L+1字节，在此，L&lt; = M和 1&lt;=M&lt;=255</td>
</tr>
<tr>
<td>TINYTEXT</td>
<td>非常小的非二进制字符串</td>
<td>L+1字节，在此，L&lt;2^8</td>
</tr>
<tr>
<td>TEXT</td>
<td>小的非二进制字符串</td>
<td>L+2字节，在此，L&lt;2^16</td>
</tr>
<tr>
<td>MEDIUMTEXT</td>
<td>中等大小的非二进制字符串</td>
<td>L+3字节，在此，L&lt;2^24</td>
</tr>
<tr>
<td>LONGTEXT</td>
<td>大的非二进制字符串</td>
<td>L+4字节，在此，L&lt;2^32</td>
</tr>
<tr>
<td>ENUM</td>
<td>枚举类型，只能有一个枚举字符串值</td>
<td>1或2个字节，取决于枚举值的数目 (最大值为65535)</td>
</tr>
<tr>
<td>SET</td>
<td>一个设置，字符串对象可以有零个或 多个SET成员</td>
<td>1、2、3、4或8个字节，取决于集合 成员的数量（最多64个成员）</td>
</tr>
</tbody></table>
<h2 id="二进制类型"><a href="#二进制类型" class="headerlink" title="二进制类型"></a>二进制类型</h2><table>
<thead>
<tr>
<th>类型名称</th>
<th>说明</th>
<th>存储需求</th>
</tr>
</thead>
<tbody><tr>
<td>BIT(M)</td>
<td>位字段类型</td>
<td>大约 (M+7)/8 字节</td>
</tr>
<tr>
<td>BINARY(M)</td>
<td>固定长度二进制字符串</td>
<td>M 字节</td>
</tr>
<tr>
<td>VARBINARY (M)</td>
<td>可变长度二进制字符串</td>
<td>M+1 字节</td>
</tr>
<tr>
<td>TINYBLOB (M)</td>
<td>非常小的BLOB</td>
<td>L+1 字节，在此，L&lt;2^8</td>
</tr>
<tr>
<td>BLOB (M)</td>
<td>小 BLOB</td>
<td>L+2 字节，在此，L&lt;2^16</td>
</tr>
<tr>
<td>MEDIUMBLOB (M)</td>
<td>中等大小的BLOB</td>
<td>L+3 字节，在此，L&lt;2^24</td>
</tr>
<tr>
<td>LONGBLOB (M)</td>
<td>非常大的BLOB</td>
<td>L+4 字节，在此，L&lt;2^32</td>
</tr>
</tbody></table>
<h1 id="权限一览表"><a href="#权限一览表" class="headerlink" title="权限一览表"></a>权限一览表</h1><blockquote>
<p>具体权限的作用详见<a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html" title="官方文档">官方文档</a></p>
</blockquote>
<p>GRANT 和 REVOKE 允许的静态权限</p>
<table>
<thead>
<tr>
<th align="left">Privilege</th>
<th align="left">Grant Table Column</th>
<th align="left">Context</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_all"><code>ALL [PRIVILEGES]</code></a></td>
<td align="left">Synonym for “all privileges”</td>
<td align="left">Server administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_alter"><code>ALTER</code></a></td>
<td align="left"><code>Alter_priv</code></td>
<td align="left">Tables</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_alter-routine"><code>ALTER ROUTINE</code></a></td>
<td align="left"><code>Alter_routine_priv</code></td>
<td align="left">Stored routines</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create"><code>CREATE</code></a></td>
<td align="left"><code>Create_priv</code></td>
<td align="left">Databases, tables, or indexes</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-role"><code>CREATE ROLE</code></a></td>
<td align="left"><code>Create_role_priv</code></td>
<td align="left">Server administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-routine"><code>CREATE ROUTINE</code></a></td>
<td align="left"><code>Create_routine_priv</code></td>
<td align="left">Stored routines</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-tablespace"><code>CREATE TABLESPACE</code></a></td>
<td align="left"><code>Create_tablespace_priv</code></td>
<td align="left">Server administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-temporary-tables"><code>CREATE TEMPORARY TABLES</code></a></td>
<td align="left"><code>Create_tmp_table_priv</code></td>
<td align="left">Tables</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-user"><code>CREATE USER</code></a></td>
<td align="left"><code>Create_user_priv</code></td>
<td align="left">Server administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-view"><code>CREATE VIEW</code></a></td>
<td align="left"><code>Create_view_priv</code></td>
<td align="left">Views</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_delete"><code>DELETE</code></a></td>
<td align="left"><code>Delete_priv</code></td>
<td align="left">Tables</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_drop"><code>DROP</code></a></td>
<td align="left"><code>Drop_priv</code></td>
<td align="left">Databases, tables, or views</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_drop-role"><code>DROP ROLE</code></a></td>
<td align="left"><code>Drop_role_priv</code></td>
<td align="left">Server administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_event"><code>EVENT</code></a></td>
<td align="left"><code>Event_priv</code></td>
<td align="left">Databases</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_execute"><code>EXECUTE</code></a></td>
<td align="left"><code>Execute_priv</code></td>
<td align="left">Stored routines</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_file"><code>FILE</code></a></td>
<td align="left"><code>File_priv</code></td>
<td align="left">File access on server host</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_grant-option"><code>GRANT OPTION</code></a></td>
<td align="left"><code>Grant_priv</code></td>
<td align="left">Databases, tables, or stored routines</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_index"><code>INDEX</code></a></td>
<td align="left"><code>Index_priv</code></td>
<td align="left">Tables</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_insert"><code>INSERT</code></a></td>
<td align="left"><code>Insert_priv</code></td>
<td align="left">Tables or columns</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_lock-tables"><code>LOCK TABLES</code></a></td>
<td align="left"><code>Lock_tables_priv</code></td>
<td align="left">Databases</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_process"><code>PROCESS</code></a></td>
<td align="left"><code>Process_priv</code></td>
<td align="left">Server administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_proxy"><code>PROXY</code></a></td>
<td align="left">See <code>proxies_priv</code> table</td>
<td align="left">Server administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_references"><code>REFERENCES</code></a></td>
<td align="left"><code>References_priv</code></td>
<td align="left">Databases or tables</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_reload"><code>RELOAD</code></a></td>
<td align="left"><code>Reload_priv</code></td>
<td align="left">Server administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_replication-client"><code>REPLICATION CLIENT</code></a></td>
<td align="left"><code>Repl_client_priv</code></td>
<td align="left">Server administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_replication-slave"><code>REPLICATION SLAVE</code></a></td>
<td align="left"><code>Repl_slave_priv</code></td>
<td align="left">Server administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_select"><code>SELECT</code></a></td>
<td align="left"><code>Select_priv</code></td>
<td align="left">Tables or columns</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_show-databases"><code>SHOW DATABASES</code></a></td>
<td align="left"><code>Show_db_priv</code></td>
<td align="left">Server administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_show-view"><code>SHOW VIEW</code></a></td>
<td align="left"><code>Show_view_priv</code></td>
<td align="left">Views</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_shutdown"><code>SHUTDOWN</code></a></td>
<td align="left"><code>Shutdown_priv</code></td>
<td align="left">Server administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_super"><code>SUPER</code></a></td>
<td align="left"><code>Super_priv</code></td>
<td align="left">Server administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_trigger"><code>TRIGGER</code></a></td>
<td align="left"><code>Trigger_priv</code></td>
<td align="left">Tables</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_update"><code>UPDATE</code></a></td>
<td align="left"><code>Update_priv</code></td>
<td align="left">Tables or columns</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_usage"><code>USAGE</code></a></td>
<td align="left">Synonym for “no privileges”</td>
<td align="left">Server administration</td>
</tr>
</tbody></table>
<p>GRANT 和 REVOKE 允许的动态权限</p>
<table>
<thead>
<tr>
<th align="left">Privilege</th>
<th align="left">Context</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_application-password-admin"><code>APPLICATION_PASSWORD_ADMIN</code></a></td>
<td align="left">Dual password administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_audit-abort-exempt"><code>AUDIT_ABORT_EXEMPT</code></a></td>
<td align="left">Allow queries blocked by audit log filter</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_audit-admin"><code>AUDIT_ADMIN</code></a></td>
<td align="left">Audit log administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_authentication-policy-admin"><code>AUTHENTICATION_POLICY_ADMIN</code></a></td>
<td align="left">Authentication administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_backup-admin"><code>BACKUP_ADMIN</code></a></td>
<td align="left">Backup administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_binlog-admin"><code>BINLOG_ADMIN</code></a></td>
<td align="left">Backup and Replication administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_binlog-encryption-admin"><code>BINLOG_ENCRYPTION_ADMIN</code></a></td>
<td align="left">Backup and Replication administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_clone-admin"><code>CLONE_ADMIN</code></a></td>
<td align="left">Clone administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_connection-admin"><code>CONNECTION_ADMIN</code></a></td>
<td align="left">Server administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_encryption-key-admin"><code>ENCRYPTION_KEY_ADMIN</code></a></td>
<td align="left">Server administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_firewall-admin"><code>FIREWALL_ADMIN</code></a></td>
<td align="left">Firewall administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_firewall-exempt"><code>FIREWALL_EXEMPT</code></a></td>
<td align="left">Firewall administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_firewall-user"><code>FIREWALL_USER</code></a></td>
<td align="left">Firewall administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_flush-optimizer-costs"><code>FLUSH_OPTIMIZER_COSTS</code></a></td>
<td align="left">Server administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_flush-status"><code>FLUSH_STATUS</code></a></td>
<td align="left">Server administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_flush-tables"><code>FLUSH_TABLES</code></a></td>
<td align="left">Server administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_flush-user-resources"><code>FLUSH_USER_RESOURCES</code></a></td>
<td align="left">Server administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_group-replication-admin"><code>GROUP_REPLICATION_ADMIN</code></a></td>
<td align="left">Replication administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_group-replication-stream"><code>GROUP_REPLICATION_STREAM</code></a></td>
<td align="left">Replication administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_innodb-redo-log-archive"><code>INNODB_REDO_LOG_ARCHIVE</code></a></td>
<td align="left">Redo log archiving administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_ndb-stored-user"><code>NDB_STORED_USER</code></a></td>
<td align="left">NDB Cluster</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_passwordless-user-admin"><code>PASSWORDLESS_USER_ADMIN</code></a></td>
<td align="left">Authentication administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_persist-ro-variables-admin"><code>PERSIST_RO_VARIABLES_ADMIN</code></a></td>
<td align="left">Server administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_replication-applier"><code>REPLICATION_APPLIER</code></a></td>
<td align="left"><code>PRIVILEGE_CHECKS_USER</code> for a replication channel</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_replication-slave-admin"><code>REPLICATION_SLAVE_ADMIN</code></a></td>
<td align="left">Replication administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_resource-group-admin"><code>RESOURCE_GROUP_ADMIN</code></a></td>
<td align="left">Resource group administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_resource-group-user"><code>RESOURCE_GROUP_USER</code></a></td>
<td align="left">Resource group administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_role-admin"><code>ROLE_ADMIN</code></a></td>
<td align="left">Server administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_session-variables-admin"><code>SESSION_VARIABLES_ADMIN</code></a></td>
<td align="left">Server administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_set-user-id"><code>SET_USER_ID</code></a></td>
<td align="left">Server administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_show-routine"><code>SHOW_ROUTINE</code></a></td>
<td align="left">Server administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_system-user"><code>SYSTEM_USER</code></a></td>
<td align="left">Server administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_system-variables-admin"><code>SYSTEM_VARIABLES_ADMIN</code></a></td>
<td align="left">Server administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_table-encryption-admin"><code>TABLE_ENCRYPTION_ADMIN</code></a></td>
<td align="left">Server administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_version-token-admin"><code>VERSION_TOKEN_ADMIN</code></a></td>
<td align="left">Server administration</td>
</tr>
<tr>
<td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_xa-recover-admin"><code>XA_RECOVER_ADMIN</code></a></td>
<td align="left">Server administration</td>
</tr>
</tbody></table>
<h1 id="图形化界面工具"><a href="#图形化界面工具" class="headerlink" title="图形化界面工具"></a>图形化界面工具</h1><ul>
<li>Workbench(免费): <a href="http://dev.mysql.com/downloads/workbench/">http://dev.mysql.com/downloads/workbench/</a></li>
<li>navicat(收费，试用版30天): <a href="https://www.navicat.com/en/download/navicat-for-mysql">https://www.navicat.com/en/download/navicat-for-mysql</a></li>
<li>Sequel Pro(开源免费，仅支持Mac OS): <a href="http://www.sequelpro.com/">http://www.sequelpro.com/</a></li>
<li>HeidiSQL(免费): <a href="http://www.heidisql.com/">http://www.heidisql.com/</a></li>
<li>phpMyAdmin(免费): <a href="https://www.phpmyadmin.net/">https://www.phpmyadmin.net/</a></li>
<li>SQLyog: <a href="https://sqlyog.en.softonic.com/">https://sqlyog.en.softonic.com/</a></li>
</ul>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h1 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h1><ol>
<li>在SQL语句之后加上<code>\G</code>会将结果的表格形式转换成行文本形式</li>
<li>查看Mysql数据库占用空间：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT table_schema &quot;Database Name&quot;</span><br><span class="line">     , SUM(data_length + index_length) / (1024 * 1024) &quot;Database Size in MB&quot;</span><br><span class="line">FROM information_schema.TABLES</span><br><span class="line">GROUP BY table_schema;</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/04/17/hc/</url>
    <content><![CDATA[<p>html+css</p>
<span id="more"></span>

<h1 id="基础篇"><a href="#基础篇" class="headerlink" title="基础篇"></a>基础篇</h1><h1 id="HTML第01天（HTML初识）总结"><a href="#HTML第01天（HTML初识）总结" class="headerlink" title="HTML第01天（HTML初识）总结"></a>HTML第01天（HTML初识）总结</h1><h2 id="今日目标"><a href="#今日目标" class="headerlink" title="今日目标"></a>今日目标</h2><h3 id="能够说出Web标签三个组成部分"><a href="#能够说出Web标签三个组成部分" class="headerlink" title="能够说出Web标签三个组成部分"></a>能够说出Web标签三个组成部分</h3><h3 id="能够写出HTML骨架结构"><a href="#能够写出HTML骨架结构" class="headerlink" title="能够写出HTML骨架结构"></a>能够写出HTML骨架结构</h3><h3 id="能够写出标签标签和段落标签"><a href="#能够写出标签标签和段落标签" class="headerlink" title="能够写出标签标签和段落标签"></a>能够写出标签标签和段落标签</h3><h3 id="能够写出4-5个常见双标签"><a href="#能够写出4-5个常见双标签" class="headerlink" title="能够写出4~5个常见双标签"></a>能够写出4~5个常见双标签</h3><h3 id="能够写出1-2个常见单标签"><a href="#能够写出1-2个常见单标签" class="headerlink" title="能够写出1~2个常见单标签"></a>能够写出1~2个常见单标签</h3><h3 id="能够使用文本格式化标签让文本有加粗、下划线、倾斜、删除线效果"><a href="#能够使用文本格式化标签让文本有加粗、下划线、倾斜、删除线效果" class="headerlink" title="能够使用文本格式化标签让文本有加粗、下划线、倾斜、删除线效果"></a>能够使用文本格式化标签让文本有加粗、下划线、倾斜、删除线效果</h3><h3 id="能够说出图片标签的src属性、alt属性、title属性各自的作用"><a href="#能够说出图片标签的src属性、alt属性、title属性各自的作用" class="headerlink" title="能够说出图片标签的src属性、alt属性、title属性各自的作用"></a>能够说出图片标签的src属性、alt属性、title属性各自的作用</h3><h3 id="能够使用相对路径在网页中显示图片"><a href="#能够使用相对路径在网页中显示图片" class="headerlink" title="能够使用相对路径在网页中显示图片"></a>能够使用相对路径在网页中显示图片</h3><h3 id="能够在网页中插入音频、视频"><a href="#能够在网页中插入音频、视频" class="headerlink" title="能够在网页中插入音频、视频"></a>能够在网页中插入音频、视频</h3><h3 id="能够在网页中插入跳转去指定网页的超链接"><a href="#能够在网页中插入跳转去指定网页的超链接" class="headerlink" title="能够在网页中插入跳转去指定网页的超链接"></a>能够在网页中插入跳转去指定网页的超链接</h3><h2 id="课程内容"><a href="#课程内容" class="headerlink" title="课程内容"></a>课程内容</h2><h3 id="基础认知"><a href="#基础认知" class="headerlink" title="基础认知"></a>基础认知</h3><ul>
<li><p>前端基础概念铺垫</p>
<ul>
<li><p>认识网页</p>
<ul>
<li><p>网页的基本组成部分</p>
<ul>
<li>文字</li>
<li>图片</li>
<li>超链接</li>
<li>视频</li>
<li>音频</li>
</ul>
</li>
</ul>
</li>
<li><p>五大浏览器和渲染引擎</p>
<ul>
<li><p>ie浏览器</p>
<ul>
<li>trident</li>
</ul>
</li>
<li><p>火狐浏览器</p>
<ul>
<li>gecko</li>
</ul>
</li>
<li><p>谷歌浏览器</p>
<ul>
<li>blink</li>
</ul>
</li>
<li><p>safari浏览器</p>
<ul>
<li>webkit</li>
</ul>
</li>
<li><p>欧朋浏览器</p>
<ul>
<li>blink</li>
</ul>
</li>
</ul>
</li>
<li><p>Web标准</p>
<ul>
<li><p>结构</p>
<ul>
<li>html</li>
</ul>
</li>
<li><p>样式</p>
<ul>
<li>css</li>
</ul>
</li>
<li><p>行为</p>
<ul>
<li><p>js</p>
<ul>
<li>javascript</li>
<li>动态效果</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>HTML初体验</p>
<ul>
<li><p>HTML的感知</p>
<ul>
<li>HTML：超文本标记语言</li>
</ul>
</li>
<li><p>HTML骨架结构</p>
<html>

<pre><code>&lt;head&gt;

    &lt;title&gt;网页的标题&lt;/title&gt;

&lt;/head&gt;

&lt;body&gt;

    自己的代码

&lt;/body&gt;
</code></pre>
</html></li>
<li><p>开发工具使用</p>
<ul>
<li>VSCode</li>
</ul>
</li>
</ul>
</li>
<li><p>语法规范</p>
<ul>
<li><p>HTML的注释</p>
<ul>
<li>快捷键：ctrl + /</li>
</ul>
</li>
<li><p>HTML标签的构成</p>
<ul>
<li><p>双标签</p>
<ul>
<li><strong></strong></li>
</ul>
</li>
<li><p>单标签</p>
<ul>
<li><br></li>
</ul>
</li>
</ul>
</li>
<li><p>HTML标签的属性</p>
<ul>
<li>标签的属性写在开始标签内部</li>
<li>标签上可以同时存在多个属性</li>
<li>属性之间通过空格隔开</li>
<li>标签名与属性之间必须通过空格隔开</li>
<li>属性之间没有顺序之分</li>
</ul>
</li>
<li><p>HTML标签的关系</p>
<ul>
<li><p>父子关系</p>
<ul>
<li>嵌套关系</li>
</ul>
</li>
<li><p>兄弟关系</p>
<ul>
<li>并列关系</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="HTML标签学习"><a href="#HTML标签学习" class="headerlink" title="HTML标签学习"></a>HTML标签学习</h3><ul>
<li><p>排版系列标签</p>
<ul>
<li><p>标题标签</p>
<ul>
<li><p>h系列标签</p>
</li>
<li><p>语义：标题</p>
</li>
<li><p>代码</p>
<ul>
<li>h1~h6</li>
</ul>
</li>
<li><p>显示特点</p>
<ul>
<li>1、文字都有加粗</li>
<li>2、文字都有变大，但是从h1~h6逐渐减小</li>
<li>3、独占一行</li>
</ul>
</li>
<li><p>注意点</p>
<ul>
<li>h1不能乱用，一般只用于新闻的标题或者网页的logo</li>
<li>因为h1标签对于SEO比较重要</li>
</ul>
</li>
</ul>
</li>
<li><p>段落标签</p>
<ul>
<li><p>p标签</p>
</li>
<li><p>语义：段落</p>
</li>
<li><p>显示特点</p>
<ul>
<li>1、段落之间有默认的间隙</li>
<li>2、独占一行</li>
</ul>
</li>
</ul>
</li>
<li><p>水平线标签</p>
<ul>
<li><p>hr标签</p>
<ul>
<li>单标签</li>
</ul>
</li>
<li><p>作用：在网页中显示一条水平线</p>
</li>
</ul>
</li>
<li><p>换行标签</p>
<ul>
<li><p>br标签</p>
<ul>
<li>单标签</li>
</ul>
</li>
<li><p>作用：强制换行</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p>文本格式化标签</p>
<ul>
<li><p>标签语义化</p>
<ul>
<li><p>第一组：</p>
<ul>
<li>b：加粗</li>
<li>u：下划线</li>
<li>i：倾斜</li>
<li>s：删除线</li>
</ul>
</li>
<li><p>第二组：（推荐，语义更强）</p>
<ul>
<li>strong</li>
<li>ins</li>
<li>em</li>
<li>del</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>媒体标签</p>
<ul>
<li><p>图片标签</p>
<ul>
<li><p>img标签</p>
</li>
<li><p>作用：在网页中显示一张图片</p>
</li>
<li><p>属性</p>
<ul>
<li><p>1、src：图片的路径</p>
</li>
<li><p>2、alt：替换文本</p>
<ul>
<li>只有当图片加载失败时，才会显示的文字</li>
</ul>
</li>
<li><p>3、title：图片的标题</p>
<ul>
<li>鼠标悬停在图片上时，才会显示的文字</li>
</ul>
</li>
<li><p>4、width宽度/height高度</p>
<ul>
<li>如果只设置了其中的一个，另一个会等比例缩放</li>
</ul>
</li>
<li><p>注意点</p>
<ul>
<li>一般只会设置width或者height中的一个，如果同时设置了两个，图片可能会拉伸变形</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>路径</p>
<ul>
<li><p>绝对路径</p>
<ul>
<li>1、在个人电脑中，带有盘符的路径</li>
<li>2、外部链接，以https://开头的路径</li>
</ul>
</li>
<li><p>相对路径</p>
<ul>
<li><p>同级目录</p>
<ul>
<li>1、直接写目标文件的名字</li>
</ul>
</li>
<li><p>下级目录</p>
<ul>
<li><p>1、写目标文件所在文件夹的名字</p>
</li>
<li><p>2、进入目录文件夹</p>
<ul>
<li>/</li>
</ul>
</li>
<li><p>3、直接写目标文件的名字即可</p>
</li>
</ul>
</li>
<li><p>上级目录</p>
<ul>
<li><p>1、去上一级目录</p>
<ul>
<li>../</li>
</ul>
</li>
<li><p>2、直接写目标文件的名字即可</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>音频标签</p>
<ul>
<li><p>audio标签</p>
</li>
<li><p>作用：在网页中插入音频</p>
</li>
<li><p>属性</p>
<ul>
<li>1、src：音频的路径</li>
<li>2、controls：播放的控件</li>
<li>3、autoplay：自动播放</li>
<li>4、loop：循环播放</li>
</ul>
</li>
</ul>
</li>
<li><p>视频标签</p>
<ul>
<li><p>video标签</p>
</li>
<li><p>作用：在网页中插入视频</p>
</li>
<li><p>属性</p>
<ul>
<li>1、src：视频的路径</li>
<li>2、controls：播放的控件</li>
<li>3、autoplay：自动播放</li>
<li>4、loop：循环播放</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>链接标签</p>
<ul>
<li><p>href：告诉浏览器点击之后去哪一个网页</p>
<ul>
<li>取值：就是一个路径</li>
<li>1、外部链接：直接写网址即可（网址需要写完整，https://）</li>
<li>2、本地网页：直接写路径</li>
</ul>
</li>
<li><p>target：设置跳转方式</p>
<ul>
<li><p>取值</p>
<ul>
<li><p>_self</p>
<ul>
<li>在当前窗口中进行跳转，原网页不在了</li>
<li>默认值</li>
</ul>
</li>
<li><p>_blank</p>
<ul>
<li>在新窗口中进行跳转，原网页还在</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>空链接</p>
<ul>
<li><a href="#">空链接</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="综合案例"><a href="#综合案例" class="headerlink" title="综合案例"></a>综合案例</h2><h3 id="招聘案例"><a href="#招聘案例" class="headerlink" title="招聘案例"></a>招聘案例</h3><h3 id="今日热词案例"><a href="#今日热词案例" class="headerlink" title="今日热词案例"></a>今日热词案例</h3><h1 id="HTML第02天（HTML基础）总结"><a href="#HTML第02天（HTML基础）总结" class="headerlink" title="HTML第02天（HTML基础）总结"></a>HTML第02天（HTML基础）总结</h1><h2 id="今日目标-1"><a href="#今日目标-1" class="headerlink" title="今日目标"></a>今日目标</h2><h3 id="能够写出无序列表和有序列表的标签组成"><a href="#能够写出无序列表和有序列表的标签组成" class="headerlink" title="能够写出无序列表和有序列表的标签组成"></a>能够写出无序列表和有序列表的标签组成</h3><ul>
<li><p>无序列表</p>
<ul>
<li><p>整体</p>
<ul>
<li>ul</li>
</ul>
</li>
<li><p>每一项</p>
<ul>
<li>li</li>
</ul>
</li>
</ul>
</li>
<li><p>有序列表</p>
<ul>
<li><p>整体</p>
<ul>
<li>ol</li>
</ul>
</li>
<li><p>每一项</p>
<ul>
<li>li</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="能够说出表格常用基本标签"><a href="#能够说出表格常用基本标签" class="headerlink" title="能够说出表格常用基本标签"></a>能够说出表格常用基本标签</h3><ul>
<li><p>整体</p>
<ul>
<li>table</li>
</ul>
</li>
<li><p>每一行</p>
<ul>
<li>tr</li>
</ul>
</li>
<li><p>每一个单元格</p>
<ul>
<li>td</li>
</ul>
</li>
</ul>
<h3 id="能够写出一个简单的三行三列的表格"><a href="#能够写出一个简单的三行三列的表格" class="headerlink" title="能够写出一个简单的三行三列的表格"></a>能够写出一个简单的三行三列的表格</h3><table border="1" width="400" height="400">


<pre><code>&lt;tr&gt;

  &lt;td&gt;111&lt;/td&gt;

  &lt;td&gt;111&lt;/td&gt;

  &lt;td&gt;111&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

  &lt;td&gt;111&lt;/td&gt;

  &lt;td&gt;111&lt;/td&gt;

  &lt;td&gt;111&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

  &lt;td&gt;111&lt;/td&gt;

  &lt;td&gt;111&lt;/td&gt;

  &lt;td&gt;111&lt;/td&gt;

&lt;/tr&gt;
</code></pre>
  </table>

<h3 id="能够完成合并单元格的操作"><a href="#能够完成合并单元格的操作" class="headerlink" title="能够完成合并单元格的操作"></a>能够完成合并单元格的操作</h3><ul>
<li><p>1、明确合并哪几个单元格</p>
</li>
<li><p>2、通过左上原则，明确保留谁删除谁</p>
</li>
<li><p>3、设置跨行还是跨列合并</p>
<ul>
<li><p>跨行合并</p>
<ul>
<li>rowspan=“合并的个数”</li>
</ul>
</li>
<li><p>跨列合并</p>
<ul>
<li>colspan=“合并的个数”</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="能够说出input标签的3-5个常用的type属性值"><a href="#能够说出input标签的3-5个常用的type属性值" class="headerlink" title="能够说出input标签的3~5个常用的type属性值"></a>能够说出input标签的3~5个常用的type属性值</h3><ul>
<li><p>文本框</p>
<ul>
<li>text</li>
</ul>
</li>
<li><p>密码框</p>
<ul>
<li>password</li>
</ul>
</li>
<li><p>单选框</p>
<ul>
<li>radio</li>
</ul>
</li>
<li><p>多选框</p>
<ul>
<li>checkbox</li>
</ul>
</li>
<li><p>文件选择框</p>
<ul>
<li>file</li>
</ul>
</li>
<li><p>提交按钮</p>
<ul>
<li>submit</li>
</ul>
</li>
<li><p>重置按钮</p>
<ul>
<li>reset</li>
</ul>
</li>
<li><p>普通按钮</p>
<ul>
<li>button</li>
</ul>
</li>
</ul>
<h3 id="能够写出单选框和复选框默认选中效果"><a href="#能够写出单选框和复选框默认选中效果" class="headerlink" title="能够写出单选框和复选框默认选中效果"></a>能够写出单选框和复选框默认选中效果</h3><ul>
<li><p>默认选择</p>
<ul>
<li>checked</li>
</ul>
</li>
</ul>
<h3 id="能够写出一组单选框中只能单选的效果"><a href="#能够写出一组单选框中只能单选的效果" class="headerlink" title="能够写出一组单选框中只能单选的效果"></a>能够写出一组单选框中只能单选的效果</h3><ul>
<li>设置相同的name属性值即可</li>
</ul>
<h3 id="能够说出div和span标签的特点"><a href="#能够说出div和span标签的特点" class="headerlink" title="能够说出div和span标签的特点"></a>能够说出div和span标签的特点</h3><ul>
<li><p>div</p>
<ul>
<li>独占一行</li>
</ul>
</li>
<li><p>span</p>
<ul>
<li>一行显示多个</li>
</ul>
</li>
</ul>
<h2 id="课程内容-1"><a href="#课程内容-1" class="headerlink" title="课程内容"></a>课程内容</h2><h3 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h3><ul>
<li><p>应用场景</p>
<ul>
<li>网页中以行的方式整齐的展示数据：如数据列表、排行榜</li>
</ul>
</li>
<li><p>无序列表</p>
<ul>
<li><p>标签</p>
<ul>
<li><p>整体</p>
<ul>
<li>ul</li>
</ul>
</li>
<li><p>每一项</p>
<ul>
<li>li</li>
</ul>
</li>
</ul>
</li>
<li><p>显示的效果</p>
<ul>
<li>每一项前面默认有小圆点</li>
</ul>
</li>
<li><p>注意点</p>
<ul>
<li>1、每一项是没有顺序的</li>
<li>2、ul标签中只能放li标签</li>
<li>3、li标签里面可以放任意的标签</li>
</ul>
</li>
</ul>
</li>
<li><p>有序列表</p>
<ul>
<li><p>标签</p>
<ul>
<li><p>整体</p>
<ul>
<li>ol</li>
</ul>
</li>
<li><p>每一项</p>
<ul>
<li>li</li>
</ul>
</li>
</ul>
</li>
<li><p>显示的效果</p>
<ul>
<li>每一项前面有默认的序号</li>
</ul>
</li>
<li><p>注意点</p>
<ul>
<li>1、每一项都是有顺序的</li>
<li>2、ol标签中只能放li标签</li>
<li>3、li标签可以放任意的标签</li>
</ul>
</li>
</ul>
</li>
<li><p>自定义列表</p>
<ul>
<li><p>标签</p>
<ul>
<li><p>整体</p>
<ul>
<li>dl</li>
</ul>
</li>
<li><p>小标题</p>
<ul>
<li>dt</li>
</ul>
</li>
<li><p>每一项</p>
<ul>
<li>dd</li>
</ul>
</li>
</ul>
</li>
<li><p>注意点</p>
<ul>
<li>1、dl标签中只能放dt或者dd</li>
<li>2、dt或者dd中可以放任意标签</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><ul>
<li><p>应用场景</p>
<ul>
<li>以行+列的单元格的方式整齐的展示数据，如：股票价格</li>
</ul>
</li>
<li><p>表格的基本标签</p>
<ul>
<li><p>整体</p>
<ul>
<li>table</li>
</ul>
</li>
<li><p>每一行</p>
<ul>
<li>tr</li>
</ul>
</li>
<li><p>每一个单元格</p>
<ul>
<li>td</li>
</ul>
</li>
</ul>
</li>
<li><p>属性</p>
<ul>
<li><p>border</p>
<ul>
<li><p>边框</p>
<ul>
<li>1</li>
</ul>
</li>
</ul>
</li>
<li><p>width</p>
<ul>
<li>宽度</li>
</ul>
</li>
<li><p>height</p>
<ul>
<li>高度</li>
</ul>
</li>
</ul>
</li>
<li><p>表格的其他标签</p>
<ul>
<li><p>caption</p>
<ul>
<li>表格整体的大标题</li>
<li>写在：table标签开始标签的下面</li>
</ul>
</li>
<li><p>th</p>
<ul>
<li>表头标签（表格一列的小标题）</li>
<li>写在：用来替换td</li>
</ul>
</li>
<li><p>表格的结构标签</p>
<ul>
<li><p>表格的头部</p>
<ul>
<li>thead</li>
</ul>
</li>
<li><p>表格的身体</p>
<ul>
<li>tbody</li>
</ul>
</li>
<li><p>表格的底部</p>
<ul>
<li>tfoot</li>
</ul>
</li>
<li><p>写在：用来包裹tr</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p>合并单元格</p>
<ul>
<li><p>应用场景</p>
<ul>
<li>多个单元格展示内容相同时让信息简洁不重复显示</li>
</ul>
</li>
<li><p>合并属性</p>
<ul>
<li>rowspan</li>
<li>colspan</li>
</ul>
</li>
<li><p>实现步骤</p>
<ul>
<li><p>1、确定合并哪几个单元格</p>
</li>
<li><p>2、通过左上原则确定保留谁删除谁</p>
<ul>
<li><p>如果是上下合并</p>
<ul>
<li>保留最上面的，删除其他</li>
</ul>
</li>
<li><p>如果是左右合并</p>
<ul>
<li>保留最左边的，删除其他</li>
</ul>
</li>
</ul>
</li>
<li><p>3、确定是跨行还是跨列</p>
<ul>
<li><p>如果是跨行合并</p>
<ul>
<li><p>rowspan=“合并的个数”</p>
<ul>
<li>给保留的单元格设置</li>
</ul>
</li>
</ul>
</li>
<li><p>如果是跨列合并</p>
<ul>
<li><p>colspan=“合并的个数”</p>
<ul>
<li>给保留的单元格设置</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="表单标签"><a href="#表单标签" class="headerlink" title="表单标签"></a>表单标签</h3><ul>
<li><p>应用场景</p>
<ul>
<li>收集用户数据类网页，如：登录页、注册页等</li>
</ul>
</li>
<li><p>input标签</p>
<ul>
<li><p>可以通过type属性值的不同，表现不同的形态</p>
<ul>
<li><p>文本框</p>
<ul>
<li><p>text</p>
</li>
<li><p>属性</p>
<ul>
<li><p>1、value</p>
<ul>
<li>用户输入的数据</li>
<li>如果提前在代码中设置好了，相当于是内容的默认值</li>
<li>最后value属性值会发送给后台</li>
</ul>
</li>
<li><p>2、name</p>
<ul>
<li>告诉后台发送出去的数据是什么含义</li>
</ul>
</li>
<li><p>3、placeholder</p>
<ul>
<li>占位符</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>密码框</p>
<ul>
<li><p>password</p>
<ul>
<li>密文输入</li>
</ul>
</li>
<li><p>属性</p>
<ul>
<li><p>1、value</p>
<ul>
<li>用户输入的数据</li>
<li>如果提前在代码中设置好了，相当于是内容的默认值</li>
<li>最后value属性值会发送给后台</li>
</ul>
</li>
<li><p>2、name</p>
<ul>
<li>告诉后台发送出去的数据是什么含义</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>单选框</p>
<ul>
<li><p>radio</p>
</li>
<li><p>属性</p>
<ul>
<li><p>1、name</p>
<ul>
<li>告诉后台发送过去的数据是什么含义</li>
<li>分组：有相同name属性值的单选框为一组，一组中只能同时有一个被选中</li>
</ul>
</li>
<li><p>2、value</p>
<ul>
<li>表示用户选择的数据</li>
</ul>
</li>
<li><p>3、checked</p>
<ul>
<li>默认选中</li>
<li>针对于单选框，一组中只能设置一个</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>多选框</p>
<ul>
<li><p>checkbox</p>
</li>
<li><p>属性</p>
<ul>
<li><p>1、name</p>
<ul>
<li>告诉后台发送过去的数据是什么含义</li>
</ul>
</li>
<li><p>2、value</p>
<ul>
<li>表示用户选择的数据</li>
</ul>
</li>
<li><p>3、checked</p>
<ul>
<li>默认选中</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>文件选择框</p>
<ul>
<li><p>file</p>
</li>
<li><p>属性</p>
<ul>
<li><p>html5新增的属性</p>
<ul>
<li><p>multiple</p>
<ul>
<li>多文件选择</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>表单按钮</p>
<ul>
<li><p>提交按钮</p>
<ul>
<li>submit</li>
</ul>
</li>
<li><p>重置按钮</p>
<ul>
<li>reset</li>
<li>让表单恢复成默认值</li>
</ul>
</li>
<li><p>普通按钮</p>
<ul>
<li>button</li>
</ul>
</li>
<li><p>注意点：如果需要使用功能：需要配合form标签一起使用（使用form标签把表单标签一起包裹起来即可）</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>button标签</p>
<ul>
<li><p>默认的功能：提交按钮</p>
</li>
<li><p>type</p>
<ul>
<li><p>提交</p>
<ul>
<li>submit</li>
</ul>
</li>
<li><p>重置</p>
<ul>
<li>reset</li>
</ul>
</li>
<li><p>普通</p>
<ul>
<li>button</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>下拉菜单</p>
<ul>
<li><p>标签</p>
<ul>
<li><p>整体</p>
<ul>
<li>select</li>
</ul>
</li>
<li><p>每一项</p>
<ul>
<li>option</li>
</ul>
</li>
</ul>
</li>
<li><p>属性</p>
<ul>
<li><p>默认选中</p>
<ul>
<li>selected</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>文本域标签</p>
<ul>
<li>textarea</li>
<li>作用：用于输入大段文字</li>
</ul>
</li>
<li><p>label标签</p>
<ul>
<li><p>作用：绑定文本和表单标签的关系</p>
</li>
<li><p>使用</p>
<ul>
<li><p>方法一</p>
<ul>
<li>1、使用label标签把文本包裹起来</li>
<li>2、在表单标签上添加id属性</li>
<li>3、在label标签的for属性中设置id属性值</li>
</ul>
</li>
<li><p>方法二</p>
<ul>
<li>1、直接使用label标签把文本和表单标签一起包裹起来</li>
<li>注意点：需要把label标签的for属性删除</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="语义化标签"><a href="#语义化标签" class="headerlink" title="语义化标签"></a>语义化标签</h3><ul>
<li><p>没有语义的布局标签</p>
<ul>
<li><p>div</p>
<ul>
<li><p>特点</p>
<ul>
<li>1、独占一行</li>
<li>2、宽度默认是占满一行，高度默认由内容撑开</li>
</ul>
</li>
</ul>
</li>
<li><p>span</p>
<ul>
<li><p>特点</p>
<ul>
<li>1、一行中可以显示多个</li>
<li>2、宽度和高度默认都是由内容撑开</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="字符实体"><a href="#字符实体" class="headerlink" title="字符实体"></a>字符实体</h3><ul>
<li><p>HTML的空格合并现象</p>
</li>
<li><p>常见字符实体</p>
<ul>
<li><p>空格</p>
<ul>
<li>&nbsp;</li>
</ul>
</li>
<li><p>大于号</p>
<ul>
<li>&gt;</li>
</ul>
</li>
<li><p>小于号</p>
<ul>
<li>&lt;</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="综合案例-1"><a href="#综合案例-1" class="headerlink" title="综合案例"></a>综合案例</h2><h3 id="学生信息表格"><a href="#学生信息表格" class="headerlink" title="学生信息表格"></a>学生信息表格</h3><h3 id="会员注册表单"><a href="#会员注册表单" class="headerlink" title="会员注册表单"></a>会员注册表单</h3><h1 id="CSS第01天（基础选择器-文字文本相关属性）总结"><a href="#CSS第01天（基础选择器-文字文本相关属性）总结" class="headerlink" title="CSS第01天（基础选择器+文字文本相关属性）总结"></a>CSS第01天（基础选择器+文字文本相关属性）总结</h1><h2 id="今日目标-2"><a href="#今日目标-2" class="headerlink" title="今日目标"></a>今日目标</h2><h3 id="能够说出CSS的作用和语法格式"><a href="#能够说出CSS的作用和语法格式" class="headerlink" title="能够说出CSS的作用和语法格式"></a>能够说出CSS的作用和语法格式</h3><ul>
<li><p>css的作用</p>
<ul>
<li>给html标签设置样式</li>
</ul>
</li>
<li><p>css的语法格式</p>
<ul>
<li>选择器 { css的属性名:属性值; }</li>
</ul>
</li>
</ul>
<h3 id="能够说出三种CSS的书写位置"><a href="#能够说出三种CSS的书写位置" class="headerlink" title="能够说出三种CSS的书写位置"></a>能够说出三种CSS的书写位置</h3><ul>
<li><p>内嵌式</p>
<ul>
<li>css写在style标签中，style标签一般写在head标签里面，title标签的下面</li>
</ul>
</li>
<li><p>外联式</p>
<ul>
<li>css写在单独的.css文件中，需要配合link标签引入</li>
</ul>
</li>
<li><p>行内式</p>
<ul>
<li>css写在标签的style属性中</li>
</ul>
</li>
</ul>
<h3 id="能够使用标签选择器、类选择器、id选择器选择标签"><a href="#能够使用标签选择器、类选择器、id选择器选择标签" class="headerlink" title="能够使用标签选择器、类选择器、id选择器选择标签"></a>能够使用标签选择器、类选择器、id选择器选择标签</h3><ul>
<li><p>标签选择器</p>
<ul>
<li>标签名 { css的属性名：属性值； }</li>
</ul>
</li>
<li><p>类选择器</p>
<ul>
<li>.类名 { css的属性名：属性值； }</li>
</ul>
</li>
<li><p>id选择器</p>
<ul>
<li>#id属性值 { css的属性名：属性值； }</li>
</ul>
</li>
</ul>
<h3 id="能够说出类选择器和id选择器的区别"><a href="#能够说出类选择器和id选择器的区别" class="headerlink" title="能够说出类选择器和id选择器的区别"></a>能够说出类选择器和id选择器的区别</h3><ul>
<li><p>类选择器</p>
<ul>
<li>.类名 { css的属性名：属性值； }</li>
</ul>
</li>
<li><p>id选择器</p>
<ul>
<li>#id属性值 { css的属性名：属性值； }</li>
</ul>
</li>
</ul>
<h3 id="能够使用font属性设置文字大小和文字粗细"><a href="#能够使用font属性设置文字大小和文字粗细" class="headerlink" title="能够使用font属性设置文字大小和文字粗细"></a>能够使用font属性设置文字大小和文字粗细</h3><ul>
<li><p>文字大小</p>
<ul>
<li><p>font-size</p>
</li>
<li><p>取值</p>
<ul>
<li>数字+px</li>
</ul>
</li>
</ul>
</li>
<li><p>文字粗细</p>
<ul>
<li><p>font-weight</p>
</li>
<li><p>取值</p>
<ul>
<li><p>关键词</p>
<ul>
<li><p>正常</p>
<ul>
<li>normal</li>
</ul>
</li>
<li><p>加粗</p>
<ul>
<li>bold</li>
</ul>
</li>
</ul>
</li>
<li><p>纯数字</p>
<ul>
<li><p>正常</p>
<ul>
<li>400</li>
</ul>
</li>
<li><p>加粗</p>
<ul>
<li>700</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="能够设置文本首行缩进的效果"><a href="#能够设置文本首行缩进的效果" class="headerlink" title="能够设置文本首行缩进的效果"></a>能够设置文本首行缩进的效果</h3><ul>
<li><p>text-indent：2em</p>
<ul>
<li>首行缩进2个字位置</li>
</ul>
</li>
</ul>
<h3 id="能够设置文本水平居中"><a href="#能够设置文本水平居中" class="headerlink" title="能够设置文本水平居中"></a>能够设置文本水平居中</h3><ul>
<li>text-align:center</li>
</ul>
<h3 id="能够去除a标签默认的下划线"><a href="#能够去除a标签默认的下划线" class="headerlink" title="能够去除a标签默认的下划线"></a>能够去除a标签默认的下划线</h3><ul>
<li>text-decoration：none</li>
</ul>
<h3 id="能够使用行高让文本在标签中垂直居中"><a href="#能够使用行高让文本在标签中垂直居中" class="headerlink" title="能够使用行高让文本在标签中垂直居中"></a>能够使用行高让文本在标签中垂直居中</h3><ul>
<li>line-height:当前标签的高度</li>
</ul>
<h3 id="能够使用Chrome调试工具查看html和css代码"><a href="#能够使用Chrome调试工具查看html和css代码" class="headerlink" title="能够使用Chrome调试工具查看html和css代码"></a>能够使用Chrome调试工具查看html和css代码</h3><ul>
<li>右击</li>
<li>检查</li>
<li>左侧是html</li>
<li>右侧是当前选中标签的css</li>
</ul>
<h2 id="课程内容-2"><a href="#课程内容-2" class="headerlink" title="课程内容"></a>课程内容</h2><h3 id="CSS基础认知"><a href="#CSS基础认知" class="headerlink" title="CSS基础认知"></a>CSS基础认知</h3><ul>
<li><p>CSS初识</p>
<ul>
<li><p>CSS的介绍</p>
<ul>
<li>层叠样式表</li>
<li>作用：给页面中的html标签设置样式</li>
</ul>
</li>
<li><p>CSS语法规则</p>
<ul>
<li><p>选择器 { css属性 }</p>
</li>
<li><p>注意点</p>
<ul>
<li>1、标点符号都是英文状态下的</li>
<li>2、每一个样式的键值对写完之后，最后需要写分号</li>
</ul>
</li>
</ul>
</li>
<li><p>CSS初体验</p>
<ul>
<li><p>css写在哪里</p>
<ul>
<li>css写在style标签中，style标签一般写在head标签里面，title标签下面</li>
</ul>
</li>
<li><p>标签选择器</p>
</li>
<li><p>常见的属性</p>
<ul>
<li><p>文字的颜色</p>
<ul>
<li>color</li>
</ul>
</li>
<li><p>文字的大小</p>
<ul>
<li>font-size</li>
</ul>
</li>
<li><p>背景颜色</p>
<ul>
<li>background-color</li>
</ul>
</li>
<li><p>宽度</p>
<ul>
<li>width</li>
</ul>
</li>
<li><p>高度</p>
<ul>
<li>height</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>CSS引入方式</p>
<ul>
<li><p>内嵌样式</p>
<ul>
<li><p>书写位置</p>
<ul>
<li>css写在style标签中，style标签写在head标签里面，title标签的下面</li>
</ul>
</li>
<li><p>作用范围</p>
<ul>
<li>当前页面</li>
</ul>
</li>
<li><p>使用场景</p>
<ul>
<li>小案例、小demo</li>
</ul>
</li>
</ul>
</li>
<li><p>外联样式</p>
<ul>
<li><p>书写位置</p>
<ul>
<li>css写在一个单独的.css文件中，此时需要通过link标签引入</li>
</ul>
</li>
<li><p>作用范围</p>
<ul>
<li>多个页面（谁引入，谁就生效）</li>
</ul>
</li>
<li><p>使用场景</p>
<ul>
<li>项目中使用</li>
</ul>
</li>
</ul>
</li>
<li><p>行内样式</p>
<ul>
<li><p>书写位置</p>
<ul>
<li>css写在标签的style属性中</li>
</ul>
</li>
<li><p>作用范围</p>
<ul>
<li>当前标签</li>
</ul>
</li>
<li><p>使用场景</p>
<ul>
<li>在基础班是不用，之后配合js一起使用</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="基础选择器"><a href="#基础选择器" class="headerlink" title="基础选择器"></a>基础选择器</h3><ul>
<li><p>选择器的作用</p>
<ul>
<li>选中页面中对应的标签（找她），方便后续设置样式（改她）</li>
</ul>
</li>
<li><p>标签选择器</p>
<ul>
<li><p>结构：标签名 {css}</p>
</li>
<li><p>作用：通过标签名找到页面中所有这一类标签，设置样式</p>
</li>
<li><p>注意点</p>
<ul>
<li>1、找的是一类标签，不能单独找到某一个</li>
<li>2、标签选择器无论嵌套关系有多深，都能找到对应的标签</li>
</ul>
</li>
</ul>
</li>
<li><p>类选择器</p>
<ul>
<li><p>结构：.类名 {css}</p>
</li>
<li><p>作用：找到页面中所有带有该类名标签，设置样式</p>
</li>
<li><p>注意点</p>
<ul>
<li><p>1、所有的标签都有class属性，class属性的属性值就叫做类名</p>
<ul>
<li><p>类名的命名规则</p>
<ul>
<li>由数字、字母、下划线、中划线组成，但是不能以数字或者中划线开头</li>
<li>命名尽量需要有意义</li>
</ul>
</li>
</ul>
</li>
<li><p>2、一个标签可以有多个类名，类名之间通过空格隔开</p>
</li>
<li><p>3、一个类选择器可以同时选中多个标签</p>
</li>
<li><p>多对多</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p>id选择器</p>
<ul>
<li><p>结构：#id属性值 {css}</p>
</li>
<li><p>作用：找到页面中带有该id属性值的标签，设置样式</p>
</li>
<li><p>注意点</p>
<ul>
<li>1、id属性值相当于是身份证号码，在一个页面中是唯一的，不可重复的！！！</li>
<li>2、一个标签上只能有一个id属性值</li>
<li>3、一个id选择器只能选中一个标签</li>
<li>一对一</li>
</ul>
</li>
</ul>
</li>
<li><p>类与id的区别</p>
<ul>
<li><p>class类名与id属性值的区别</p>
<ul>
<li>class类名相当于姓名，可以重复，一个标签可以同时有多个class类名</li>
<li>id属性值相当于身份证号码，不可重复，一个标签只能有一个id属性值</li>
</ul>
</li>
<li><p>类选择器与id选择器的区别</p>
<ul>
<li>类选择器以.开头</li>
<li>id选择器以#开头</li>
</ul>
</li>
<li><p>实际开发的情况</p>
<ul>
<li><p>类选择器用的最多</p>
</li>
<li><p>id一般配合js使用，除非特殊情况，否则不要使用id设置样式</p>
</li>
<li><p>实际开发中会遇到冗余代码的抽取问题</p>
<ul>
<li>可以将一些公共的代码抽取到一个公共的类中去</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>通配符选择器</p>
<ul>
<li><p>结构：* {css}</p>
</li>
<li><p>作用：找到页面中所有的标签，设置样式</p>
</li>
<li><p>注意点</p>
<ul>
<li>针对于大型的项目，一般不会使用通配符选择器，可能会比较消耗浏览器的性能</li>
<li>之后可能在基础班的小页面中去除标签的默认margin和padding</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="字体和文本样式"><a href="#字体和文本样式" class="headerlink" title="字体和文本样式"></a>字体和文本样式</h3><ul>
<li><p>字体样式</p>
<ul>
<li><p>字体大小</p>
<ul>
<li><p>font-size</p>
</li>
<li><p>取值</p>
<ul>
<li><p>数字 + px</p>
<ul>
<li>px：像素</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>字体粗细</p>
<ul>
<li><p>font-weight</p>
</li>
<li><p>取值</p>
<ul>
<li><p>关键字</p>
<ul>
<li><p>正常</p>
<ul>
<li>normal</li>
</ul>
</li>
<li><p>加粗</p>
<ul>
<li>bold</li>
</ul>
</li>
</ul>
</li>
<li><p>纯数字</p>
<ul>
<li><p>正常</p>
<ul>
<li>400</li>
</ul>
</li>
<li><p>加粗</p>
<ul>
<li>700</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>字体样式</p>
<ul>
<li><p>font-style</p>
</li>
<li><p>取值</p>
<ul>
<li><p>正常</p>
<ul>
<li>normal</li>
</ul>
</li>
<li><p>倾斜</p>
<ul>
<li>italic</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>字体类型</p>
<ul>
<li><p>科普</p>
<ul>
<li><p>常见字体系列</p>
<ul>
<li><p>无衬线字体</p>
<ul>
<li><p>sans-serif</p>
</li>
<li><p>特点</p>
<ul>
<li>文字笔画粗细均匀，并且首尾无装饰</li>
</ul>
</li>
<li><p>场景</p>
<ul>
<li>网页中大多采用无衬线字体</li>
</ul>
</li>
<li><p>常见该类别字体</p>
<ul>
<li>黑体</li>
<li>Arial</li>
</ul>
</li>
</ul>
</li>
<li><p>衬线字体</p>
<ul>
<li><p>serif</p>
</li>
<li><p>特点</p>
<ul>
<li>文字笔画粗细不均，并且首尾有笔锋装饰</li>
</ul>
</li>
<li><p>场景</p>
<ul>
<li>报刊书籍中应用广泛</li>
</ul>
</li>
<li><p>常见该类别字体</p>
<ul>
<li>宋体</li>
<li>Times New Roman</li>
</ul>
</li>
</ul>
</li>
<li><p>等宽字体</p>
<ul>
<li><p>monospace</p>
</li>
<li><p>特点</p>
<ul>
<li>每个字母或文字的宽度相等</li>
</ul>
</li>
<li><p>场景</p>
<ul>
<li>一般用于程序代码的编写，利于代码编写和阅读</li>
</ul>
</li>
<li><p>常见该类别字体</p>
<ul>
<li>Consolas</li>
<li>fira code</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>font-family</p>
<ul>
<li><p>取值</p>
<ul>
<li>具体字体1,具体字体2,具体字体3,具体字体4,…,字体类型</li>
<li>具体字体名称：”Microsoft YaHei”、微软雅黑、黑体、宋体、楷体等……</li>
<li>字体系列名称：sans-serif、serif、monospace等……</li>
</ul>
</li>
<li><p>渲染规则：</p>
<ul>
<li><p>1、从左往右按照顺序查找，如果电脑中未安装该字体，则显示下一个字体</p>
</li>
<li><p>2、如果都不支持，则显示最后设置的字体系列的默认字体</p>
<ul>
<li>window：微软雅黑</li>
<li>mac：苹方</li>
</ul>
</li>
</ul>
</li>
<li><p>注意点</p>
<ul>
<li>1、如果字体名称中存在多个单词，推荐使用引号包裹</li>
<li>2、最后一项字体系列不需要引号包裹</li>
<li>3、网页开发时，尽量使用系统自带字体，保证不同用户浏览网页都可以正确显示</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>样式的层叠问题</p>
<ul>
<li><p>如果给同一个标签设置了相同的属性</p>
<ul>
<li><p>此时样式会覆盖（层叠）</p>
<ul>
<li>写在最下面的会生效</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>font属性的连写问题</p>
<ul>
<li><p>1、顺序问题</p>
<ul>
<li><p>font: style weight size family</p>
</li>
<li><p>稍微舒服</p>
<ul>
<li>swsf</li>
</ul>
</li>
</ul>
</li>
<li><p>2、省略问题</p>
<ul>
<li><p>只能省略前两个</p>
<ul>
<li>如果省略了相当于设置了默认值</li>
</ul>
</li>
<li><p>省略的覆盖问题</p>
<ul>
<li><p>如果需要同时设置单独的属性和连写形式</p>
<ul>
<li>要么把单独的样式写在连写的下面</li>
<li>要么把单独的样式写在连写的里面</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>文本样式</p>
<ul>
<li><p>文本缩进</p>
<ul>
<li><p>text-indent</p>
</li>
<li><p>取值</p>
<ul>
<li><p>1、数字 + px</p>
</li>
<li><p>2、数字 + em</p>
<ul>
<li>1em = 当前标签的font-size的大小</li>
</ul>
</li>
</ul>
</li>
<li><p>注意点</p>
<ul>
<li>不是独占一行的元素设置text-indent无效</li>
</ul>
</li>
</ul>
</li>
<li><p>文本水平对齐方式</p>
<ul>
<li><p>text-align</p>
</li>
<li><p>取值</p>
<ul>
<li><p>1、左对齐</p>
<ul>
<li>left</li>
</ul>
</li>
<li><p>2、居中对齐</p>
<ul>
<li>center</li>
</ul>
</li>
<li><p>3、右对齐</p>
<ul>
<li>right</li>
</ul>
</li>
</ul>
</li>
<li><p>注意点</p>
<ul>
<li>如果让文本水平居中，text-align:center给文本的父元素设置</li>
</ul>
</li>
</ul>
</li>
<li><p>文本修饰</p>
<ul>
<li><p>text-decoration</p>
</li>
<li><p>取值</p>
<ul>
<li><p>1、下划线</p>
<ul>
<li>underline</li>
</ul>
</li>
<li><p>2、删除线</p>
<ul>
<li>line-through</li>
</ul>
</li>
<li><p>3、没有效果</p>
<ul>
<li>none</li>
<li>用来清除a标签默认的下划线</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>拓展：水平居中方法的小总结</p>
<ul>
<li><p>text-align：center；</p>
<ul>
<li>1、文本</li>
<li>2、span标签、a标签</li>
<li>3、input标签、img标签</li>
<li>注意点：如果需要让以上元素水平居中，此时直接以上元素的父元素设置即可</li>
</ul>
</li>
<li><p>margin：0 auto；</p>
<ul>
<li>1、div、p、h（盒子）</li>
<li>注意点：直接给当前元素设置的</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>行高</p>
<ul>
<li><p>line-height</p>
</li>
<li><p>取值</p>
<ul>
<li>1、数字+px</li>
<li>2、倍数（当前文字大小的倍数）</li>
</ul>
</li>
<li><p>常见应用</p>
<ul>
<li>1、line-height：文字父元素的高度，让单行文本垂直居中</li>
<li>2、设置line-height：1取消上下间距，精准布局时会使用</li>
</ul>
</li>
<li><p>和font属性的连写形式</p>
<ul>
<li><p>font：style weight size/line-height family</p>
</li>
<li><p>如果需要设置单独的样式和连写</p>
<ul>
<li>要么把单独的样式写在连写的下面</li>
<li>要么把单独的样式写在连写的里面</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>补充：颜色常见取值（了解）</p>
<ul>
<li><p>关键字</p>
</li>
<li><p>rgb表示法</p>
<ul>
<li>每一项的取值范围：0~255</li>
</ul>
</li>
<li><p>rgba表示法</p>
<ul>
<li><p>a表示透明度</p>
<ul>
<li>0~1</li>
<li>0：完全透明</li>
<li>1：完全不透明</li>
</ul>
</li>
</ul>
</li>
<li><p>十六进制表示法</p>
<ul>
<li><p>#ffaabb</p>
<ul>
<li>#fab</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="Chrome调试工具"><a href="#Chrome调试工具" class="headerlink" title="Chrome调试工具"></a>Chrome调试工具</h3><ul>
<li><p>打开方式</p>
<ul>
<li><p>右击→检查</p>
</li>
<li><p>看哪里</p>
<ul>
<li>elements：显示当前页面的html结构</li>
<li>styles：显示当前标签的样式</li>
</ul>
</li>
</ul>
</li>
<li><p>选择元素</p>
<ul>
<li>方法一：在左侧elements中点击需要调试的元素</li>
<li>方法二：点击左上角按钮后，直接在网页中点击需要调试的元素</li>
</ul>
</li>
<li><p>功能</p>
<ul>
<li><p>控制样式</p>
<ul>
<li><p>1、修改属性值</p>
<ul>
<li>直接点击属性值，直接修改</li>
</ul>
</li>
<li><p>2、添加属性</p>
<ul>
<li>在上一个属性的分号后点击一下，直接添加</li>
</ul>
</li>
<li><p>3、控制样式生效</p>
<ul>
<li>点击属性前的小框即可</li>
</ul>
</li>
<li><p>注意点</p>
<ul>
<li>调试工具仅仅只是当前的调试效果，需要在代码中修改才能永久保留</li>
</ul>
</li>
</ul>
</li>
<li><p>特殊情况</p>
<ul>
<li><p>1、样式上有删除线</p>
<ul>
<li><p>含义</p>
<ul>
<li>样式失效</li>
</ul>
</li>
<li><p>原因</p>
<ul>
<li>1、样式被注释了</li>
<li>2、样式被覆盖了</li>
</ul>
</li>
</ul>
</li>
<li><p>2、样式前有小三角形</p>
<ul>
<li><p>含义</p>
<ul>
<li>样式报错</li>
</ul>
</li>
<li><p>原因</p>
<ul>
<li>1、属性值后没写分号</li>
<li>2、出现中文标点</li>
<li>3、属性名或者属性值单词拼错</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="综合案例-2"><a href="#综合案例-2" class="headerlink" title="综合案例"></a>综合案例</h2><h3 id="新闻网页案例"><a href="#新闻网页案例" class="headerlink" title="新闻网页案例"></a>新闻网页案例</h3><h3 id="卡片居中案例"><a href="#卡片居中案例" class="headerlink" title="卡片居中案例"></a>卡片居中案例</h3><h1 id="CSS第02天（选择器进阶-背景相关属性-元素显示模式-三大特性）总结"><a href="#CSS第02天（选择器进阶-背景相关属性-元素显示模式-三大特性）总结" class="headerlink" title="CSS第02天（选择器进阶+背景相关属性+元素显示模式+三大特性）总结"></a>CSS第02天（选择器进阶+背景相关属性+元素显示模式+三大特性）总结</h1><h2 id="今日目标-3"><a href="#今日目标-3" class="headerlink" title="今日目标"></a>今日目标</h2><h3 id="能够使用后代选择器选择标签"><a href="#能够使用后代选择器选择标签" class="headerlink" title="能够使用后代选择器选择标签"></a>能够使用后代选择器选择标签</h3><ul>
<li>选择器1 选择器2 { css的属性名：属性值； }</li>
</ul>
<h3 id="能够使用hover伪类选择器设置标签的鼠标悬停状态"><a href="#能够使用hover伪类选择器设置标签的鼠标悬停状态" class="headerlink" title="能够使用hover伪类选择器设置标签的鼠标悬停状态"></a>能够使用hover伪类选择器设置标签的鼠标悬停状态</h3><ul>
<li>a:hover { css的属性名：属性值； }</li>
</ul>
<h3 id="能够设置标签的背景颜色和背景图片"><a href="#能够设置标签的背景颜色和背景图片" class="headerlink" title="能够设置标签的背景颜色和背景图片"></a>能够设置标签的背景颜色和背景图片</h3><ul>
<li><p>背景颜色</p>
<ul>
<li>background-color</li>
</ul>
</li>
<li><p>背景图片</p>
<ul>
<li>background-image:url(图片的路径)</li>
</ul>
</li>
</ul>
<h3 id="能够说出常见元素显示模式分为哪三种"><a href="#能够说出常见元素显示模式分为哪三种" class="headerlink" title="能够说出常见元素显示模式分为哪三种"></a>能够说出常见元素显示模式分为哪三种</h3><ul>
<li><p>块级元素</p>
<ul>
<li>display:block</li>
</ul>
</li>
<li><p>行内元素</p>
<ul>
<li>display：inline</li>
</ul>
</li>
<li><p>行内块元素</p>
<ul>
<li>display：inline-block</li>
</ul>
</li>
</ul>
<h3 id="能够说出块级元素、行内元素、行内块元素的显示特点"><a href="#能够说出块级元素、行内元素、行内块元素的显示特点" class="headerlink" title="能够说出块级元素、行内元素、行内块元素的显示特点"></a>能够说出块级元素、行内元素、行内块元素的显示特点</h3><ul>
<li><p>块级元素</p>
<ul>
<li>1、独占一行</li>
<li>2、宽度默认占满父元素的宽度，高度默认由内容撑开</li>
<li>3、可以设置宽高</li>
</ul>
</li>
<li><p>行内元素</p>
<ul>
<li>1、一行可以显示多个</li>
<li>2、宽度和高度默认由内容撑开</li>
<li>3、不可以设置宽高</li>
</ul>
</li>
<li><p>行内块元素</p>
<ul>
<li>1、一行可以显示多个</li>
<li>2、可以设置宽高</li>
</ul>
</li>
</ul>
<h3 id="能够说出块级元素和行内元素的区别"><a href="#能够说出块级元素和行内元素的区别" class="headerlink" title="能够说出块级元素和行内元素的区别"></a>能够说出块级元素和行内元素的区别</h3><ul>
<li><p>块级元素</p>
<ul>
<li>1、独占一行</li>
<li>2、宽度默认占满父元素的宽度，高度默认由内容撑开</li>
<li>3、可以设置宽高</li>
</ul>
</li>
<li><p>行内元素</p>
<ul>
<li>1、一行可以显示多个</li>
<li>2、宽度和高度默认由内容撑开</li>
<li>3、不可以设置宽高</li>
</ul>
</li>
</ul>
<h3 id="能够写出将元素转换成块级元素和行内块元素的代码"><a href="#能够写出将元素转换成块级元素和行内块元素的代码" class="headerlink" title="能够写出将元素转换成块级元素和行内块元素的代码"></a>能够写出将元素转换成块级元素和行内块元素的代码</h3><ul>
<li><p>转换成块级元素</p>
<ul>
<li>display:block</li>
</ul>
</li>
<li><p>转换成行内块元素</p>
<ul>
<li>display:inline-block</li>
</ul>
</li>
</ul>
<h3 id="能够说出有哪些常见属性可以继承"><a href="#能够说出有哪些常见属性可以继承" class="headerlink" title="能够说出有哪些常见属性可以继承"></a>能够说出有哪些常见属性可以继承</h3><ul>
<li><p>color</p>
</li>
<li><p>font相关属性</p>
<ul>
<li>font-style</li>
<li>font-weight</li>
<li>font-size</li>
<li>font-family</li>
</ul>
</li>
<li><p>text相关属性</p>
<ul>
<li>text-indent</li>
<li>text-align</li>
</ul>
</li>
<li><p>line-height</p>
</li>
</ul>
<h3 id="能够说出块级元素水平居中的方法"><a href="#能够说出块级元素水平居中的方法" class="headerlink" title="能够说出块级元素水平居中的方法"></a>能够说出块级元素水平居中的方法</h3><ul>
<li>margin:0 auto</li>
</ul>
<h3 id="能够说出行内元素、行内块元素水平居中的方法"><a href="#能够说出行内元素、行内块元素水平居中的方法" class="headerlink" title="能够说出行内元素、行内块元素水平居中的方法"></a>能够说出行内元素、行内块元素水平居中的方法</h3><ul>
<li>text-align：center</li>
</ul>
<h2 id="课程内容-3"><a href="#课程内容-3" class="headerlink" title="课程内容"></a>课程内容</h2><h3 id="选择器进阶"><a href="#选择器进阶" class="headerlink" title="选择器进阶"></a>选择器进阶</h3><ul>
<li><p>复合选择器</p>
<ul>
<li><p>后代选择器</p>
<ul>
<li><p>结构</p>
<ul>
<li>选择器1 选择器2 {css}</li>
</ul>
</li>
<li><p>作用：</p>
<ul>
<li>先通过选择器1找到一堆标签，再一堆标签的后代（儿子、孙子、重孙子….）中找到满足选择器2的标签，设置样式</li>
</ul>
</li>
</ul>
</li>
<li><p>子代选择器</p>
<ul>
<li><p>结构</p>
<ul>
<li>选择器1&gt;选择器2 {css}</li>
</ul>
</li>
<li><p>作用：</p>
<ul>
<li>先通过选择器1找到一堆标签，再一堆标签的子代（儿子）中找到满足选择器2的标签，设置样式</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>并集选择器</p>
<ul>
<li><p>结构</p>
<ul>
<li>选择器1,选择器2 {css}</li>
</ul>
</li>
<li><p>作用：</p>
<ul>
<li>找到选择器1和选择器2对应的标签，设置样式</li>
</ul>
</li>
<li><p>注意点</p>
<ul>
<li>1、并集选择器中可以同时写多个选择器，多种选择器，选择器之间以逗号隔开</li>
</ul>
</li>
</ul>
</li>
<li><p>交集选择器</p>
<ul>
<li><p>结构</p>
<ul>
<li>选择器1选择器2 {css}</li>
</ul>
</li>
<li><p>作用：</p>
<ul>
<li>（既又原则）</li>
<li>找到页面中既满足选择器1又满足选择器2的标签，设置样式</li>
</ul>
</li>
<li><p>注意点</p>
<ul>
<li>1、交集选择器中可以同时写多个选择器，多种选择器，选择器之间紧挨着的</li>
<li>2、如果交集选择器中有标签选择器，此时标签选择器必须写在第一个</li>
</ul>
</li>
</ul>
</li>
<li><p>emmet语法</p>
</li>
<li><p>hover伪类选择器</p>
<ul>
<li>鼠标悬停的状态</li>
</ul>
</li>
</ul>
<h3 id="背景相关属性"><a href="#背景相关属性" class="headerlink" title="背景相关属性"></a>背景相关属性</h3><ul>
<li><p>background-color</p>
<ul>
<li><p>背景颜色</p>
</li>
<li><p>取值</p>
<ul>
<li>关键字</li>
<li>rgb表示法</li>
<li>rgba表示法</li>
<li>十六进制表示法</li>
</ul>
</li>
</ul>
</li>
<li><p>background-image</p>
<ul>
<li><p>背景图片</p>
</li>
<li><p>取值</p>
<ul>
<li>url( 图片的路径 )</li>
</ul>
</li>
</ul>
</li>
<li><p>background-repeat</p>
<ul>
<li><p>背景平铺</p>
</li>
<li><p>取值</p>
<ul>
<li><p>1、平铺</p>
<ul>
<li>repeat</li>
</ul>
</li>
<li><p>2、不平铺</p>
<ul>
<li>no-repeat</li>
</ul>
</li>
<li><p>3、沿着水平方向平铺</p>
<ul>
<li>repeat-x</li>
</ul>
</li>
<li><p>4、沿着垂直方向平铺</p>
<ul>
<li>repeat-y</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>background-position</p>
<ul>
<li><p>背景位置</p>
</li>
<li><p>取值</p>
<ul>
<li><p>1、方位名词（最多只能表示9个位置）</p>
<ul>
<li><p>水平方向</p>
<ul>
<li>left</li>
<li>center</li>
<li>right</li>
</ul>
</li>
<li><p>垂直方向</p>
<ul>
<li>top</li>
<li>center</li>
<li>bottom</li>
</ul>
</li>
</ul>
</li>
<li><p>2、数字+px（坐标）</p>
<ul>
<li><p>坐标系</p>
<ul>
<li><p>原点（0,0）</p>
<ul>
<li>盒子的左上角</li>
</ul>
</li>
<li><p>x轴</p>
<ul>
<li>水平向右</li>
</ul>
</li>
<li><p>y轴</p>
<ul>
<li>垂直向下</li>
</ul>
</li>
</ul>
</li>
<li><p>操作</p>
<ul>
<li>将图片左上角与坐标点重合即可</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>连写形式</p>
<ul>
<li><p>属性名</p>
<ul>
<li>background</li>
</ul>
</li>
<li><p>属性值</p>
<ul>
<li>单个属性值的合写，取值之间以空格隔开</li>
</ul>
</li>
<li><p>注意点</p>
<ul>
<li><p>书写顺序</p>
<ul>
<li>推荐：color image repeat position</li>
</ul>
</li>
<li><p>省略问题</p>
<ul>
<li><p>按照你的需求省略</p>
</li>
<li><p>特殊情况</p>
<ul>
<li>如果盒子的大小和背景图片一样大，此时可以直接写background：url();</li>
</ul>
</li>
</ul>
</li>
<li><p>如果需要设置单独的样式和连写</p>
<ul>
<li>要么把单独的样式写在连写的下面</li>
<li>要么把单独的样式写在连写的里面</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>img标签和背景图片的区别</p>
<ul>
<li><p>img标签</p>
<ul>
<li>不设置宽高会显示默认宽高</li>
</ul>
</li>
<li><p>div + 背景图片</p>
<ul>
<li><p>需要给div设置宽高</p>
<ul>
<li>因为背景图片只是一个css样式，不是html中的内容，不能撑开div标签</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="元素显示模式"><a href="#元素显示模式" class="headerlink" title="元素显示模式"></a>元素显示模式</h3><ul>
<li><p>块级元素</p>
<ul>
<li><p>display：block</p>
</li>
<li><p>特点</p>
<ul>
<li>1、独占一行</li>
<li>2、宽度默认占满一行，高度默认由内容撑开</li>
<li>3、可以设置宽高！！</li>
</ul>
</li>
<li><p>代表标签</p>
<ul>
<li>div</li>
<li>p</li>
<li>h系列标签</li>
</ul>
</li>
</ul>
</li>
<li><p>行内元素</p>
<ul>
<li><p>display：inline</p>
</li>
<li><p>特点</p>
<ul>
<li>1、一行可以显示多个</li>
<li>2、宽度和高度默认都是由内容撑开</li>
<li>3、不可以设置宽高！！！</li>
</ul>
</li>
<li><p>代表标签</p>
<ul>
<li>a</li>
<li>span</li>
</ul>
</li>
</ul>
</li>
<li><p>行内块元素</p>
<ul>
<li><p>display：inline-block</p>
</li>
<li><p>特点</p>
<ul>
<li>1、一行可以显示多个</li>
<li>2、可以设置宽高</li>
</ul>
</li>
<li><p>代表标签</p>
<ul>
<li><p>input</p>
</li>
<li><p>特殊情况</p>
<ul>
<li>img标签有行内块元素的特点，但是调试工具中显示默认显示模式为inline</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>三种显示方式的转换</p>
<ul>
<li><p>display</p>
<ul>
<li><p>块级元素</p>
<ul>
<li>block</li>
</ul>
</li>
<li><p>行内元素</p>
<ul>
<li>inline</li>
</ul>
</li>
<li><p>行内块元素</p>
<ul>
<li>inline-block</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>html的嵌套规范</p>
<ul>
<li>1、a标签中不能嵌套a标签</li>
<li>2、p标签中不能嵌套div、h系列标签常见的块级元素</li>
</ul>
</li>
<li><p>居中方法再总结</p>
<ul>
<li><p>水平居中</p>
<ul>
<li><p>text-align：center；</p>
<ul>
<li><p>1、文本</p>
</li>
<li><p>2、行内元素</p>
<ul>
<li>如：span、a</li>
</ul>
</li>
<li><p>3、行内块元素</p>
<ul>
<li>如：input、img</li>
</ul>
</li>
<li><p>注意点：如果需要让以上元素水平居中，此时直接以上元素的父元素设置即可</p>
</li>
</ul>
</li>
<li><p>margin：0 auto；</p>
<ul>
<li>1、块级元素</li>
<li>注意点：直接给当前元素设置的</li>
</ul>
</li>
</ul>
</li>
<li><p>垂直居中</p>
<ul>
<li><p>line-height</p>
<ul>
<li>单行文本</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="CSS-三大特性"><a href="#CSS-三大特性" class="headerlink" title="CSS 三大特性"></a>CSS 三大特性</h3><ul>
<li><p>1、继承性</p>
<ul>
<li><p>子承父业：子元素有默认继承父元素样式的效果</p>
</li>
<li><p>有哪些常见的样式可以继承</p>
<ul>
<li>1、color</li>
<li>2、font-相关的属性</li>
<li>3、text-相关的属性</li>
<li>4、line-height：行高</li>
</ul>
</li>
<li><p>继承的小应用</p>
<ul>
<li><p>去除列表默认的样式（小圆点）</p>
<ul>
<li>ul { list-style：none； }</li>
</ul>
</li>
<li><p>统一不同浏览器默认文字大小</p>
<ul>
<li>谷歌浏览器默认文字大小：16px</li>
<li>不同浏览器可能显示的默认字体大小不一致，开发的时候通常会给body标签设置统一的font-size保证不同浏览器效果一致</li>
</ul>
</li>
</ul>
</li>
<li><p>继承失效的特殊情况</p>
<ul>
<li><p>1、a标签的颜色会继承失效</p>
<ul>
<li>其实已经继承下来了，但是被浏览器默认设置的样式给覆盖掉了</li>
</ul>
</li>
<li><p>2、h系列标签的font-size会继承失效</p>
<ul>
<li>其实已经继承下来了，但是被浏览器默认设置的样式给覆盖掉了</li>
</ul>
</li>
<li><p>3、div的高度不能继承，但是宽度有继承的效果</p>
<ul>
<li>因为div有独占一行的特性</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>2、层叠性</p>
<ul>
<li><p>1、给同一个标签设置了相同的属性</p>
<ul>
<li><p>此时样式会覆盖</p>
<ul>
<li>最后写在下面的会生效</li>
</ul>
</li>
</ul>
</li>
<li><p>2、给同一个标签设置了不同的样式</p>
<ul>
<li><p>此时样式会叠加</p>
<ul>
<li>最后会共同作用在标签上</li>
</ul>
</li>
</ul>
</li>
<li><p>前提：只有当优先级相同是，此时才会比较层叠性</p>
</li>
</ul>
</li>
<li><p>3、优先级</p>
</li>
</ul>
<h3 id="拓展：Chrome调试工具-查错流程（经验）"><a href="#拓展：Chrome调试工具-查错流程（经验）" class="headerlink" title="拓展：Chrome调试工具-查错流程（经验）"></a>拓展：Chrome调试工具-查错流程（经验）</h3><ul>
<li><p>遇到样式不出来时，学会通过调试工具找错！！！</p>
</li>
<li><p>查错流程</p>
<ul>
<li><p>1、右击检查</p>
</li>
<li><p>2、哪里不会点哪里</p>
<ul>
<li>在elements找到对应的元素</li>
</ul>
</li>
<li><p>3、看styles中有没有自己设置的选择器</p>
<ul>
<li><p>如果没有，一般是选择器写错了</p>
<ul>
<li>常见原因1：选择器单词拼错</li>
<li>常见原因2：选择器结构写错</li>
</ul>
</li>
</ul>
</li>
<li><p>4、如果选择器有，但是样式没出来</p>
<ul>
<li><p>看是否有删除线（没生效）</p>
<ul>
<li>常见原因1：样式被注释</li>
<li>常见原因2：样式被覆盖</li>
</ul>
</li>
<li><p>看是否有小三角形（报错）</p>
<ul>
<li>属性名或者属性值有错误</li>
<li>常见原因1：属性值后没有分号</li>
<li>常见原因2：出现中文标点</li>
<li>常见原因3：属性名或者属性值单词拼错</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="综合案例-3"><a href="#综合案例-3" class="headerlink" title="综合案例"></a>综合案例</h2><h3 id="普通导航"><a href="#普通导航" class="headerlink" title="普通导航"></a>普通导航</h3><h3 id="五彩导航"><a href="#五彩导航" class="headerlink" title="五彩导航"></a>五彩导航</h3><h1 id="CSS第03天（盒子模型）总结"><a href="#CSS第03天（盒子模型）总结" class="headerlink" title="CSS第03天（盒子模型）总结"></a>CSS第03天（盒子模型）总结</h1><h2 id="今日目标-4"><a href="#今日目标-4" class="headerlink" title="今日目标"></a>今日目标</h2><h3 id="能够说出不同选择器的优先级公式"><a href="#能够说出不同选择器的优先级公式" class="headerlink" title="能够说出不同选择器的优先级公式"></a>能够说出不同选择器的优先级公式</h3><ul>
<li><p>继承&lt;通配符选择器&lt;标签选择器&lt;类选择器&lt;id选择器&lt;行内样式&lt;!important</p>
</li>
<li><p>注意点</p>
<ul>
<li>!important不能提升继承的优先级</li>
</ul>
</li>
</ul>
<h3 id="能够说出权重叠加方法"><a href="#能够说出权重叠加方法" class="headerlink" title="能够说出权重叠加方法"></a>能够说出权重叠加方法</h3><ul>
<li>（0,0,0,0）</li>
<li>1、行内样式的个数</li>
<li>2、id选择器的个数</li>
<li>3、类选择器的个数</li>
<li>4、标签选择器的个数</li>
</ul>
<h3 id="能够说出盒子模块的四大组成部分"><a href="#能够说出盒子模块的四大组成部分" class="headerlink" title="能够说出盒子模块的四大组成部分"></a>能够说出盒子模块的四大组成部分</h3><ul>
<li><p>内容</p>
<ul>
<li>content</li>
</ul>
</li>
<li><p>内边距</p>
<ul>
<li>padding</li>
</ul>
</li>
<li><p>边框</p>
<ul>
<li>border</li>
</ul>
</li>
<li><p>外边距</p>
<ul>
<li>margin</li>
</ul>
</li>
</ul>
<h3 id="能够写出1像素实线红色边框的代码"><a href="#能够写出1像素实线红色边框的代码" class="headerlink" title="能够写出1像素实线红色边框的代码"></a>能够写出1像素实线红色边框的代码</h3><ul>
<li>border: 1px solid red</li>
</ul>
<h3 id="能够写出上下20像素、左右10像素内边距的代码"><a href="#能够写出上下20像素、左右10像素内边距的代码" class="headerlink" title="能够写出上下20像素、左右10像素内边距的代码"></a>能够写出上下20像素、左右10像素内边距的代码</h3><ul>
<li>padding：20px 10px</li>
</ul>
<h3 id="能够说出盒子实际大小的组成部分"><a href="#能够说出盒子实际大小的组成部分" class="headerlink" title="能够说出盒子实际大小的组成部分"></a>能够说出盒子实际大小的组成部分</h3><ul>
<li>左border + 左padding + 内容的宽度 + 右padding + 右border</li>
<li>content + padding + border</li>
</ul>
<h3 id="能够计算盒子的实际大小"><a href="#能够计算盒子的实际大小" class="headerlink" title="能够计算盒子的实际大小"></a>能够计算盒子的实际大小</h3><ul>
<li>左border + 左padding + 内容的宽度 + 右padding + 右border</li>
</ul>
<h3 id="能够说出CSS3盒模型的代码"><a href="#能够说出CSS3盒模型的代码" class="headerlink" title="能够说出CSS3盒模型的代码"></a>能够说出CSS3盒模型的代码</h3><ul>
<li>box-sizing:border-box</li>
</ul>
<h3 id="能够说出盒子、文本水平居中的代码"><a href="#能够说出盒子、文本水平居中的代码" class="headerlink" title="能够说出盒子、文本水平居中的代码"></a>能够说出盒子、文本水平居中的代码</h3><ul>
<li><p>盒子水平居中</p>
<ul>
<li>margin：0 auto</li>
</ul>
</li>
<li><p>文本水平居中</p>
<ul>
<li>text-align：center</li>
</ul>
</li>
</ul>
<h3 id="能够说出外边距折叠现象-塌陷现象的解决方法"><a href="#能够说出外边距折叠现象-塌陷现象的解决方法" class="headerlink" title="能够说出外边距折叠现象-塌陷现象的解决方法"></a>能够说出外边距折叠现象-塌陷现象的解决方法</h3><ul>
<li>1、给父元素设置border-top或者padding-top</li>
<li>2、给父元素设置overflow:hidden</li>
<li>3、转换成行内块元素</li>
<li>4、设置浮动</li>
</ul>
<h2 id="课程内容-4"><a href="#课程内容-4" class="headerlink" title="课程内容"></a>课程内容</h2><h3 id="CSS-三大特性-1"><a href="#CSS-三大特性-1" class="headerlink" title="CSS 三大特性"></a>CSS 三大特性</h3><ul>
<li><p>1、继承性</p>
</li>
<li><p>2、层叠性</p>
</li>
<li><p>3、优先级</p>
<ul>
<li><p>优先级的公式</p>
<ul>
<li><p>继承&lt;通配符选择器&lt;标签选择器&lt;类选择器&lt;id选择器&lt;行内样式&lt; !important</p>
</li>
<li><p>注意点</p>
<ul>
<li>1、 !important写在属性值的后面，分号的前面</li>
<li>2、 !important不能提升继承的优先级，只要是继承，优先级最低！！</li>
</ul>
</li>
</ul>
</li>
<li><p>权重计算</p>
<ul>
<li><p>（0,0,0,0）</p>
</li>
<li><p>从左往右</p>
<ul>
<li>1、行内样式的个数</li>
<li>2、id选择器的个数</li>
<li>3、类选择器的个数</li>
<li>4、标签选择器的个数</li>
<li>注意点：如果 !important不是继承，优先级最高！！！</li>
</ul>
</li>
<li><p>比较的规则</p>
<ul>
<li>从左往右一个一个的比较，如果某一位比较出来了，此时后面的统统不看！！！</li>
<li>如果发现比较到最后权重是相同的，此时比较层叠性</li>
</ul>
</li>
</ul>
</li>
<li><p>权重计算题的解题步骤</p>
<ul>
<li>1、判断选择器是否可以直接选中标签（如果不能直接选中 → 继承，优先级最低 → pass）</li>
<li>2、通过权重计算公式比较即可</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="PxCook的基本使用"><a href="#PxCook的基本使用" class="headerlink" title="PxCook的基本使用"></a>PxCook的基本使用</h3><ul>
<li>1、量尺寸</li>
<li>2、吸颜色</li>
<li>3、psd文件在开发中直接获取数据</li>
</ul>
<h3 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h3><ul>
<li><p>内容：content</p>
<ul>
<li>width和height默认设置的是内容部分的宽高</li>
</ul>
</li>
<li><p>边框：border</p>
<ul>
<li><p>单个的属性</p>
<ul>
<li><p>边框的粗细</p>
<ul>
<li>border-width</li>
</ul>
</li>
<li><p>边框的样式</p>
<ul>
<li><p>border-style</p>
</li>
<li><p>取值</p>
<ul>
<li><p>实线</p>
<ul>
<li>solid</li>
</ul>
</li>
<li><p>虚线</p>
<ul>
<li>dashed</li>
</ul>
</li>
<li><p>点线</p>
<ul>
<li>dotted</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>边框的颜色</p>
<ul>
<li>border-color</li>
</ul>
</li>
</ul>
</li>
<li><p>连写</p>
<ul>
<li><p>属性名</p>
<ul>
<li>border</li>
</ul>
</li>
<li><p>属性值</p>
<ul>
<li>width style color</li>
</ul>
</li>
<li><p>快捷键</p>
<ul>
<li>bd + tab</li>
</ul>
</li>
</ul>
</li>
<li><p>border的单方向设置</p>
<ul>
<li><p>属性名</p>
<ul>
<li><p>border-方位名词</p>
<ul>
<li>top</li>
<li>right</li>
<li>bottom</li>
<li>left</li>
</ul>
</li>
</ul>
</li>
<li><p>属性值</p>
<ul>
<li>连写的属性值</li>
</ul>
</li>
</ul>
</li>
<li><p>盒子大小初级计算公式</p>
<ul>
<li>盒子实际大小 = 内容（content）+ 边框（border）</li>
</ul>
</li>
</ul>
</li>
<li><p>内边距：padding</p>
<ul>
<li><p>作用</p>
<ul>
<li>控制边框与内容之间的距离</li>
</ul>
</li>
<li><p>取值</p>
<ul>
<li><p>一个值</p>
<ul>
<li>上右下左</li>
</ul>
</li>
<li><p>两个值</p>
<ul>
<li>上下</li>
<li>左右</li>
</ul>
</li>
<li><p>三个值</p>
<ul>
<li>上</li>
<li>左右</li>
<li>下</li>
</ul>
</li>
<li><p>四个值</p>
<ul>
<li>上</li>
<li>右</li>
<li>下</li>
<li>左</li>
</ul>
</li>
<li><p>记忆规则：</p>
<ul>
<li>先从上开始赋值，然后顺时针赋值，如果没有赋值的？？？？看对面的！！</li>
</ul>
</li>
</ul>
</li>
<li><p>padding的单方向设置</p>
<ul>
<li>padding-方位名词</li>
</ul>
</li>
<li><p>盒子大小的终极计算公式</p>
<ul>
<li>盒子实际大小 = 内容（content）+ 边框（border）+ 内边距 （padding）</li>
</ul>
</li>
<li><p>不会撑大盒子的特殊情况</p>
<ul>
<li>如果子盒子没有设置宽度，此时宽度默认是父盒子的宽度</li>
<li>此时给子盒子设置左右的padding或者左右的border此时不会撑大盒子</li>
</ul>
</li>
<li><p>css3的盒模型</p>
<ul>
<li>自动内减</li>
<li>box-sizing:border-box</li>
</ul>
</li>
</ul>
</li>
<li><p>外边距：margin</p>
<ul>
<li><p>作用</p>
<ul>
<li>控制边框以外盒子与盒子之间的距离</li>
</ul>
</li>
<li><p>取值</p>
<ul>
<li><p>一个值</p>
<ul>
<li>上右下左</li>
</ul>
</li>
<li><p>两个值</p>
<ul>
<li>上下</li>
<li>左右</li>
</ul>
</li>
<li><p>三个值</p>
<ul>
<li>上</li>
<li>左右</li>
<li>下</li>
</ul>
</li>
<li><p>四个值</p>
<ul>
<li>上</li>
<li>右</li>
<li>下</li>
<li>左</li>
</ul>
</li>
<li><p>记忆规则：</p>
<ul>
<li>先从上开始赋值，然后顺时针赋值，如果没有赋值的？？？？看对面的！！</li>
</ul>
</li>
</ul>
</li>
<li><p>margin的单方向设置</p>
<ul>
<li>margin-方位名词</li>
</ul>
</li>
<li><p>margin的单方向应用</p>
<ul>
<li><p>水平方向</p>
<ul>
<li><p>margin-left</p>
<ul>
<li>让当前盒子往右移动</li>
</ul>
</li>
<li><p>margin-right</p>
<ul>
<li>让右边的盒子往右移动</li>
</ul>
</li>
</ul>
</li>
<li><p>垂直方向</p>
<ul>
<li><p>margin-top</p>
<ul>
<li>让当前的盒子往下移动</li>
</ul>
</li>
<li><p>margin-bottom</p>
<ul>
<li>让下面的盒子往下移动</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>去除标签默认的margin和padding</p>
<ul>
<li><ul>
<li>{margin：0；padding：0；}</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>margin外边距折叠现象</p>
<ul>
<li><p>margin的合并现象</p>
<ul>
<li><p>垂直布局的盒子，此时上下的margin会合并</p>
<ul>
<li>两者的距离为margin的最大值</li>
</ul>
</li>
<li><p>解决方法</p>
<ul>
<li>避免就好！！！！</li>
</ul>
</li>
</ul>
</li>
<li><p>margin的塌陷现象</p>
<ul>
<li><p>互相嵌套的块级元素，父子元素的margin-top会被合并作用在父元素上</p>
<ul>
<li>导致父元素一起往下移动（塌陷）</li>
</ul>
</li>
<li><p>解决方法</p>
<ul>
<li><p>1、给父元素设置一个border-top或者padding-top</p>
<ul>
<li>分隔父子元素的margin-top</li>
</ul>
</li>
<li><p>2、给父元素设置overflow：hidden</p>
</li>
<li><p>3、转换成行内块元素</p>
</li>
<li><p>4、设置浮动</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>行内元素的margin和padding无效的特殊情况</p>
<ul>
<li>水平方向的margin和padding布局有效果！</li>
<li>垂直方向的margin和padding布局是无效的！</li>
</ul>
</li>
</ul>
<h2 id="综合案例-4"><a href="#综合案例-4" class="headerlink" title="综合案例"></a>综合案例</h2><h3 id="综合案例：新浪导航"><a href="#综合案例：新浪导航" class="headerlink" title="综合案例：新浪导航"></a>综合案例：新浪导航</h3><h3 id="综合案例：网页新闻列表案例"><a href="#综合案例：网页新闻列表案例" class="headerlink" title="综合案例：网页新闻列表案例"></a>综合案例：网页新闻列表案例</h3><h1 id="CSS第04天（浮动）总结"><a href="#CSS第04天（浮动）总结" class="headerlink" title="CSS第04天（浮动）总结"></a>CSS第04天（浮动）总结</h1><h2 id="今日目标-5"><a href="#今日目标-5" class="headerlink" title="今日目标"></a>今日目标</h2><h3 id="能够使用结构伪类选择器找到偶数、奇数个li标签"><a href="#能够使用结构伪类选择器找到偶数、奇数个li标签" class="headerlink" title="能够使用结构伪类选择器找到偶数、奇数个li标签"></a>能够使用结构伪类选择器找到偶数、奇数个li标签</h3><ul>
<li><p>偶数个li标签</p>
<ul>
<li>li:nth-child( 2n ) { css }</li>
<li>li:nth-child( even ) { css }</li>
</ul>
</li>
<li><p>奇数个li标签</p>
<ul>
<li>li:nth-child( 2n+1 ) { css }</li>
<li>li:nth-child( odd ) { css }</li>
</ul>
</li>
</ul>
<h3 id="能够说出浮动的作用"><a href="#能够说出浮动的作用" class="headerlink" title="能够说出浮动的作用"></a>能够说出浮动的作用</h3><ul>
<li><p>早期的作用</p>
<ul>
<li>图文环绕</li>
</ul>
</li>
<li><p>现在的作用</p>
<ul>
<li><p>网页布局</p>
<ul>
<li>让垂直布局的盒子变成水平布局</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="能够说出浮动元素的特点"><a href="#能够说出浮动元素的特点" class="headerlink" title="能够说出浮动元素的特点"></a>能够说出浮动元素的特点</h3><ul>
<li><p>1、浮动之后会脱标，在标准流中不占位置</p>
</li>
<li><p>2、浮动的元素层级比标准流层级高出半个级别，可以覆盖标准流的元素</p>
</li>
<li><p>3、浮动找浮动，下一个浮动的元素会在上一个浮动元素的后面进行左右浮动</p>
</li>
<li><p>4、浮动元素会受上方元素边界的影响</p>
</li>
<li><p>5、浮动元素会有特殊的显示效果</p>
<ul>
<li>1、一行可以显示多个</li>
<li>2、可以设置宽高</li>
</ul>
</li>
</ul>
<h3 id="能够说出常见的清除浮动方法"><a href="#能够说出常见的清除浮动方法" class="headerlink" title="能够说出常见的清除浮动方法"></a>能够说出常见的清除浮动方法</h3><ul>
<li>1、给父元素设置高度</li>
<li>2、额外标签法</li>
<li>3、单伪元素清除法</li>
<li>4、双伪元素清除法</li>
<li>5、给父元素设置overflow:hidden</li>
</ul>
<h3 id="能够使用浮动完成小米模块案例"><a href="#能够使用浮动完成小米模块案例" class="headerlink" title="能够使用浮动完成小米模块案例"></a>能够使用浮动完成小米模块案例</h3><h3 id="能够使用浮动完成网页导航案例"><a href="#能够使用浮动完成网页导航案例" class="headerlink" title="能够使用浮动完成网页导航案例"></a>能够使用浮动完成网页导航案例</h3><h2 id="课程内容-5"><a href="#课程内容-5" class="headerlink" title="课程内容"></a>课程内容</h2><h3 id="结构伪类选择器"><a href="#结构伪类选择器" class="headerlink" title="结构伪类选择器"></a>结构伪类选择器</h3><ul>
<li><p>匹配父元素中的第一个子元素E</p>
<ul>
<li>E:first-child{}</li>
</ul>
</li>
<li><p>匹配父元素中的最后一个子元素E</p>
<ul>
<li>E:last-child{}</li>
</ul>
</li>
<li><p>匹配父元素中的第n个子元素E</p>
<ul>
<li><p>E:nth-child(n) {}</p>
</li>
<li><p>拓展</p>
<ul>
<li><p>括号里面可以写一个带n的式子</p>
<ul>
<li>n：0,1,2,3,4,5…..</li>
</ul>
</li>
<li><p>偶数</p>
<ul>
<li>E:nth-child(2n) {}</li>
<li>E:nth-child(even) {}</li>
</ul>
</li>
<li><p>奇数</p>
<ul>
<li>E:nth-child(2n+1) {}</li>
<li>E:nth-child(2n-1) {}</li>
<li>E:nth-child(odd) {}</li>
</ul>
</li>
<li><p>找到前5个</p>
<ul>
<li>E:nth-child(-n+5) {}</li>
</ul>
</li>
<li><p>找到从第5个开始往后</p>
<ul>
<li>E:nth-child(n+5) {}</li>
</ul>
</li>
</ul>
</li>
<li><p>注意点</p>
<ul>
<li>li*12&gt;a 中，如果需要找到第一个a，结构伪类选择器注意不要写错！！！</li>
<li>li:first-child a { css }</li>
</ul>
</li>
</ul>
</li>
<li><p>匹配父元素中倒数的第n个子元素E</p>
<ul>
<li>E:nth-last-child(n){}</li>
</ul>
</li>
<li><p>匹配父元素中同类型子元素中的第n个</p>
<ul>
<li>E:nth-of-type（n）{}</li>
</ul>
</li>
</ul>
<h3 id="伪元素"><a href="#伪元素" class="headerlink" title="伪元素"></a>伪元素</h3><ul>
<li><p>假的元素</p>
<ul>
<li>一般页面中的非主体内容中可以使用伪元素</li>
</ul>
</li>
<li><p>区别</p>
<ul>
<li><p>元素</p>
<ul>
<li>html设置的标签</li>
</ul>
</li>
<li><p>伪元素</p>
<ul>
<li>由css模拟出来的标签效果</li>
</ul>
</li>
</ul>
</li>
<li><p>种类</p>
<ul>
<li><p>::before</p>
<ul>
<li>在父元素内容的最前面添加一个伪元素</li>
</ul>
</li>
<li><p>::after</p>
<ul>
<li>在父元素内容的最后添加一个伪元素</li>
</ul>
</li>
</ul>
</li>
<li><p>注意点</p>
<ul>
<li><p>1、有一个必加的属性</p>
<ul>
<li>content：‘伪元素中的内容’；</li>
</ul>
</li>
<li><p>2、默认是行内元素</p>
</li>
</ul>
</li>
</ul>
<h3 id="标准流"><a href="#标准流" class="headerlink" title="标准流"></a>标准流</h3><ul>
<li><p>又称：文档流，是浏览器在渲染显示网页内容时默认采用的一套排版规则，规定了应该以何种方式排列元素</p>
</li>
<li><p>常见排版规则</p>
<ul>
<li><p>1、块级元素</p>
<ul>
<li><p>从上往下</p>
<ul>
<li>垂直布局</li>
<li>独占一行</li>
</ul>
</li>
</ul>
</li>
<li><p>2、行内元素和行内块元素</p>
<ul>
<li><p>从左往右</p>
<ul>
<li>水平布局</li>
<li>空间不够自动折行</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="浮动"><a href="#浮动" class="headerlink" title="浮动"></a>浮动</h3><ul>
<li><p>作用</p>
<ul>
<li><p>早期的作用</p>
<ul>
<li>图文环绕</li>
</ul>
</li>
<li><p>现在的作用</p>
<ul>
<li>用于布局</li>
<li>让垂直布局的盒子变成水平布局，如：一个在左，一个在右</li>
</ul>
</li>
</ul>
</li>
<li><p>代码</p>
<ul>
<li><p>float：left</p>
<ul>
<li>左浮动</li>
</ul>
</li>
<li><p>float：right</p>
<ul>
<li>右浮动</li>
</ul>
</li>
</ul>
</li>
<li><p>浮动的特点</p>
<ul>
<li><p>1、浮动的元素会脱离标准流</p>
<ul>
<li>相当于飘到了空中</li>
<li>在标准流中就不占位置</li>
</ul>
</li>
<li><p>2、浮动的元素比标准流高出半个级别</p>
<ul>
<li>可以覆盖标准流中的元素</li>
</ul>
</li>
<li><p>3、浮动找浮动</p>
<ul>
<li>下一个浮动元素会在上一个浮动元素后面左右浮动</li>
</ul>
</li>
<li><p>4、浮动会受到上面元素边界的影响</p>
</li>
<li><p>5、浮动的元素有特殊的显示效果</p>
<ul>
<li>1、一行可以显示多个</li>
<li>2、可以设置宽高</li>
</ul>
</li>
<li><p>注意点：浮动的元素不能通过text-align：center或者margin：0 auto，让浮动的元素水平居中</p>
</li>
</ul>
</li>
<li><p>（案例）网页布局案例</p>
</li>
<li><p>（案例）小米模块案例</p>
</li>
<li><p>（案例）网页导航案例</p>
</li>
</ul>
<h3 id="清除浮动"><a href="#清除浮动" class="headerlink" title="清除浮动"></a>清除浮动</h3><ul>
<li><p>含义</p>
<ul>
<li><p>清除浮动带来的影响</p>
</li>
<li><p>影响</p>
<ul>
<li>如果子元素浮动，此时子元素不能撑开标准流的块级父元素。</li>
</ul>
</li>
</ul>
</li>
<li><p>清除浮动的方法</p>
<ul>
<li><p>1、直接设置父元素的高度</p>
</li>
<li><p>2、额外标签法</p>
<ul>
<li>1、在父元素的最后添加一个块级元素</li>
<li>2、需要给添加的块级元素设置清除浮动的核心代码：clear：both</li>
<li>缺点：会在页面中添加额外的标签，会让页面的HTML结构变得复杂</li>
</ul>
</li>
<li><p>3、单伪元素清除法</p>
<ul>
<li><p>用伪元素替代了额外标签</p>
<ul>
<li>::before …之前</li>
<li>::after …之后</li>
<li>两个::是css3的规范，如果要兼容老版本的浏览器，一般使用的是:</li>
</ul>
</li>
<li><p>代码</p>
<p>.clearfix::after {</p>
<pre><code>content: &#39;&#39;;

display: block;

clear: both;
</code></pre>
<p>}</p>
<ul>
<li><p>content：‘’；</p>
<ul>
<li>伪元素必加的属性</li>
</ul>
</li>
<li><p>display：block</p>
<ul>
<li>伪元素默认是行内元素，需要转换成块级元素</li>
</ul>
</li>
<li><p>clear:both</p>
<ul>
<li>清除浮动的核心代码</li>
</ul>
</li>
<li><p>补充的代码（作用：就是在页面中看不到伪元素）</p>
<ul>
<li><p>height：0；</p>
</li>
<li><p>visibility：hidden</p>
<ul>
<li>元素隐藏</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>4、双伪元素清除法</p>
<ul>
<li><p>作用</p>
<ul>
<li>1、清除浮动</li>
<li>2、解决外边距折叠的塌陷现象</li>
</ul>
</li>
<li><p>代码</p>
<p>.clearfix::before,</p>
<p>.clearfix::after {</p>
<pre><code>content: &quot;&quot;;

display: table;
</code></pre>
<p>}</p>
<p>.clearfix::after {</p>
<pre><code>clear: both;
</code></pre>
<p>}</p>
</li>
</ul>
</li>
<li><p>5、给父元素设置一个overflow：hidden</p>
</li>
</ul>
</li>
</ul>
<h3 id="（拓展补充）BFC"><a href="#（拓展补充）BFC" class="headerlink" title="（拓展补充）BFC"></a>（拓展补充）BFC</h3><ul>
<li><p>概念</p>
<ul>
<li>块格式化上下文（Block Formatting Context，BFC） 是Web页面的可视CSS渲染的一部分，是块盒子的布局过程发生的区域，也是浮动元素与其他元素交互的区域。</li>
</ul>
</li>
<li><p>创建BFC方式</p>
<ul>
<li><p>1、html标签</p>
</li>
<li><p>2、浮动元素</p>
</li>
<li><p>3、overflow取值不为visible</p>
<ul>
<li>如：overflow:hidden</li>
</ul>
</li>
<li><p>……</p>
</li>
</ul>
</li>
<li><p>特点</p>
<ul>
<li><p>BFC是一种块级元素的布局空间，在BFC这个布局空间中存在以下两个特点：</p>
</li>
<li><p>1、BFC盒子会默认包裹住内部子元素（标准流、浮动）</p>
<ul>
<li>应用：清除浮动</li>
</ul>
</li>
<li><p>2、BFC盒子与子元素之间不存在margin的塌陷现象</p>
<ul>
<li>应用：解决margin的塌陷</li>
</ul>
</li>
<li><p>……</p>
</li>
</ul>
</li>
</ul>
<h2 id="综合案例-5"><a href="#综合案例-5" class="headerlink" title="综合案例"></a>综合案例</h2><h3 id="小米模块案例"><a href="#小米模块案例" class="headerlink" title="小米模块案例"></a>小米模块案例</h3><h3 id="网页导航案例"><a href="#网页导航案例" class="headerlink" title="网页导航案例"></a>网页导航案例</h3><h1 id="CSS第05天（定位-装饰）总结"><a href="#CSS第05天（定位-装饰）总结" class="headerlink" title="CSS第05天（定位+装饰）总结"></a>CSS第05天（定位+装饰）总结</h1><h2 id="今日目标-6"><a href="#今日目标-6" class="headerlink" title="今日目标"></a>今日目标</h2><h3 id="能够说出定位的常见应用场景"><a href="#能够说出定位的常见应用场景" class="headerlink" title="能够说出定位的常见应用场景"></a>能够说出定位的常见应用场景</h3><ul>
<li><p>1、解决盒子与盒子之间的层叠问题</p>
<ul>
<li>子绝父相</li>
</ul>
</li>
<li><p>2、让盒子固定在页面中的某个位置</p>
<ul>
<li>固定定位</li>
</ul>
</li>
</ul>
<h3 id="能够说出相对定位、绝对定位、固定定位的特点"><a href="#能够说出相对定位、绝对定位、固定定位的特点" class="headerlink" title="能够说出相对定位、绝对定位、固定定位的特点"></a>能够说出相对定位、绝对定位、固定定位的特点</h3><ul>
<li><p>相对定位</p>
<ul>
<li>1、需要配合方位属性实现移动</li>
<li>2、相对于自己原来的位置进行移动</li>
<li>3、占位置</li>
</ul>
</li>
<li><p>绝对定位</p>
<ul>
<li><p>1、需要配合方位属性实现移动</p>
</li>
<li><p>2、分情况</p>
<ul>
<li>1、如果祖先元素中没有定位的元素，此时默认相对于浏览器的可视区域进行移动</li>
<li>2、如果祖先元素中有定位的元素，此时相对于最近的有定位的祖先元素进行移动</li>
</ul>
</li>
<li><p>3、不占位置</p>
<ul>
<li><p>已经脱标了</p>
<ul>
<li>脱标之后的元素宽高默认由内容撑开了</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>固定定位</p>
<ul>
<li><p>1、需要配合方位属性实现移动</p>
</li>
<li><p>2、相对于浏览器的可视区域进行移动</p>
</li>
<li><p>3、不占位置</p>
<ul>
<li><p>已经脱标了</p>
<ul>
<li>脱标之后的元素宽高默认由内容撑开</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="能够说出相对定位元素是否还占位置，会相对于谁偏移"><a href="#能够说出相对定位元素是否还占位置，会相对于谁偏移" class="headerlink" title="能够说出相对定位元素是否还占位置，会相对于谁偏移"></a>能够说出相对定位元素是否还占位置，会相对于谁偏移</h3><ul>
<li>占位置</li>
<li>相对于自己原来的位置</li>
</ul>
<h3 id="能够说出绝对定位元素是否还占位置，会相对于谁偏移"><a href="#能够说出绝对定位元素是否还占位置，会相对于谁偏移" class="headerlink" title="能够说出绝对定位元素是否还占位置，会相对于谁偏移"></a>能够说出绝对定位元素是否还占位置，会相对于谁偏移</h3><ul>
<li><p>不占位置</p>
</li>
<li><p>分情况</p>
<ul>
<li>1、如果祖先元素中没有定位的元素，此时默认相对于浏览器的可视区域进行移动</li>
<li>2、如果祖先元素中有定位的元素，此时相对于最近的有定位的祖先元素进行移动</li>
</ul>
</li>
</ul>
<h3 id="能够说出固定定位元素是否还占位置，会相对于谁偏移"><a href="#能够说出固定定位元素是否还占位置，会相对于谁偏移" class="headerlink" title="能够说出固定定位元素是否还占位置，会相对于谁偏移"></a>能够说出固定定位元素是否还占位置，会相对于谁偏移</h3><ul>
<li>不占位置</li>
<li>相对于浏览器的可视区域</li>
</ul>
<h3 id="能够说出子绝父相的含义"><a href="#能够说出子绝父相的含义" class="headerlink" title="能够说出子绝父相的含义"></a>能够说出子绝父相的含义</h3><ul>
<li><p>子绝</p>
<ul>
<li>子元素绝对定位</li>
</ul>
</li>
<li><p>父相</p>
<ul>
<li>父元素相对定位</li>
</ul>
</li>
</ul>
<h3 id="能够写出定位让盒子水平垂直都居中的代码"><a href="#能够写出定位让盒子水平垂直都居中的代码" class="headerlink" title="能够写出定位让盒子水平垂直都居中的代码"></a>能够写出定位让盒子水平垂直都居中的代码</h3><ul>
<li>1、子绝父相</li>
<li>2、left:50%</li>
<li>3、top：50%</li>
<li>4、transform:translate(-50%,-50%)</li>
</ul>
<h3 id="能够设置定位元素的层级"><a href="#能够设置定位元素的层级" class="headerlink" title="能够设置定位元素的层级"></a>能够设置定位元素的层级</h3><ul>
<li><p>属性名</p>
<ul>
<li>z-index</li>
</ul>
</li>
<li><p>属性值</p>
<ul>
<li>数字，数字越大，层级越高</li>
</ul>
</li>
<li><p>注意点</p>
<ul>
<li>z-index只能设置定位元素的层级！！</li>
</ul>
</li>
</ul>
<h3 id="能够说出常见光标样式"><a href="#能够说出常见光标样式" class="headerlink" title="能够说出常见光标样式"></a>能够说出常见光标样式</h3><ul>
<li><p>属性名</p>
<ul>
<li>cursor</li>
</ul>
</li>
<li><p>属性值</p>
<ul>
<li><p>默认的箭头</p>
<ul>
<li>default</li>
</ul>
</li>
<li><p>小手</p>
<ul>
<li>pointer</li>
</ul>
</li>
<li><p>工字型</p>
<ul>
<li>text</li>
</ul>
</li>
<li><p>十字光标</p>
<ul>
<li>move</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="能够说出边框圆角的代码"><a href="#能够说出边框圆角的代码" class="headerlink" title="能够说出边框圆角的代码"></a>能够说出边框圆角的代码</h3><ul>
<li><p>属性名</p>
<ul>
<li>border-radius</li>
</ul>
</li>
<li><p>属性值</p>
<ul>
<li>数字+px</li>
</ul>
</li>
<li><p>赋值规则</p>
<ul>
<li>先从左上开始赋值，然后顺时针赋值，如果没有赋值的？看对角</li>
</ul>
</li>
</ul>
<h3 id="能够写出正圆和胶囊按钮"><a href="#能够写出正圆和胶囊按钮" class="headerlink" title="能够写出正圆和胶囊按钮"></a>能够写出正圆和胶囊按钮</h3><ul>
<li><p>正圆</p>
<ul>
<li>1、盒子要是正方形</li>
<li>2、border-radius:50%</li>
</ul>
</li>
<li><p>胶囊按钮</p>
<ul>
<li>1、盒子要是长方形</li>
<li>2、border-radius：盒子高度的一半</li>
</ul>
</li>
</ul>
<h3 id="能够设置元素的显示和隐藏"><a href="#能够设置元素的显示和隐藏" class="headerlink" title="能够设置元素的显示和隐藏"></a>能够设置元素的显示和隐藏</h3><ul>
<li><p>元素隐藏</p>
<ul>
<li>display:none</li>
</ul>
</li>
<li><p>元素显示</p>
<ul>
<li>display：block</li>
</ul>
</li>
</ul>
<h3 id="能够说出display-none和visibility-hidden的区别"><a href="#能够说出display-none和visibility-hidden的区别" class="headerlink" title="能够说出display:none和visibility:hidden的区别"></a>能够说出display:none和visibility:hidden的区别</h3><ul>
<li><p>display:none</p>
<ul>
<li>元素隐藏之后不占位置</li>
</ul>
</li>
<li><p>visibility：hidden</p>
<ul>
<li>元素隐藏之后占位置</li>
</ul>
</li>
</ul>
<h2 id="课程内容-6"><a href="#课程内容-6" class="headerlink" title="课程内容"></a>课程内容</h2><h3 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h3><ul>
<li><p>属性名</p>
<ul>
<li>position</li>
</ul>
</li>
<li><p>属性值</p>
<ul>
<li><p>1、静态定位</p>
<ul>
<li><p>static</p>
</li>
<li><p>标准流中的元素默认就是静态定位</p>
</li>
<li><p>注意点</p>
<ul>
<li>1、不能配合方位属性实现移动</li>
<li>2、之后说的定位，一般指的是：相对、绝对、固定</li>
</ul>
</li>
</ul>
</li>
<li><p>2、相对定位</p>
<ul>
<li><p>relative</p>
</li>
<li><p>特点</p>
<ul>
<li><p>1、需要配合方位属性实现移动</p>
</li>
<li><p>2、相对于自己原来的位置进行移动</p>
</li>
<li><p>3、还占位置</p>
<ul>
<li>没有脱标</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>3、绝对定位</p>
<ul>
<li><p>absolute</p>
</li>
<li><p>特点</p>
<ul>
<li><p>1、需要配合方位属性实现移动</p>
</li>
<li><p>2、分情况</p>
<ul>
<li><p>1、如果祖先元素中没有定位的元素</p>
<ul>
<li>此时相对于浏览器可视区进行移动</li>
</ul>
</li>
<li><p>2、如果祖先元素中有定位的元素</p>
<ul>
<li>此时相对于最近的有定位的祖先元素进行移动</li>
</ul>
</li>
</ul>
</li>
<li><p>3、不占位置</p>
<ul>
<li><p>已经脱标了</p>
<ul>
<li>脱标之后的元素，宽度默认由内容撑开</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>4、固定定位</p>
<ul>
<li><p>fixed</p>
</li>
<li><p>特点</p>
<ul>
<li><p>1、需要配合方位属性实现移动</p>
</li>
<li><p>2、永远相对于浏览器进行移动</p>
</li>
<li><p>3、不占位置</p>
<ul>
<li><p>已经脱标了</p>
<ul>
<li>脱标之后的元素，宽度默认由内容撑开</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>应用场景</p>
<ul>
<li><p>子绝父相</p>
<ul>
<li>子元素绝对定位</li>
<li>父元素相对定位</li>
<li>场景：让子元素相对于父元素进行定位移动</li>
</ul>
</li>
<li><p>水平居中</p>
<ul>
<li><p>1、子绝父相</p>
</li>
<li><p>2、给子元素设置</p>
<ul>
<li>left：50%</li>
<li>transform：translateX（-50%）</li>
</ul>
</li>
</ul>
</li>
<li><p>水平垂直都居中</p>
<ul>
<li><p>1、子绝父相</p>
</li>
<li><p>2、给子元素设置</p>
<ul>
<li>left:50%</li>
<li>top:50%</li>
<li>transform：translate（-50%，-50%）</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>元素的层级关系</p>
<ul>
<li><p>标准流&lt;浮动&lt;定位</p>
</li>
<li><p>三种定位之间的层级默认是相同，在html结构中写在下面的，层级更高</p>
</li>
<li><p>z-index</p>
<ul>
<li><p>作用</p>
<ul>
<li>设置定位元素的层级！！！！！！！</li>
</ul>
</li>
<li><p>取值</p>
<ul>
<li><p>数字</p>
<ul>
<li>数字越大，层级越高</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="装饰"><a href="#装饰" class="headerlink" title="装饰"></a>装饰</h3><ul>
<li><p>垂直对齐方式</p>
<ul>
<li><p>属性名</p>
<ul>
<li>vertical-align</li>
</ul>
</li>
<li><p>属性值</p>
<ul>
<li><p>baseline</p>
<ul>
<li>基线对齐</li>
</ul>
</li>
<li><p>top</p>
<ul>
<li>顶部对齐</li>
</ul>
</li>
<li><p>middle</p>
<ul>
<li>中部对齐</li>
</ul>
</li>
<li><p>bottom</p>
<ul>
<li>底部对齐</li>
</ul>
</li>
</ul>
</li>
<li><p>注意点</p>
<ul>
<li><p>给行内元素或者行内块元素设置</p>
<ul>
<li>优先给img标签设置</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>光标类型</p>
<ul>
<li><p>属性名</p>
<ul>
<li>cursor</li>
</ul>
</li>
<li><p>属性值</p>
<ul>
<li><p>default</p>
<ul>
<li>默认箭头</li>
</ul>
</li>
<li><p>pointer</p>
<ul>
<li>小手</li>
<li>提示：用户可以点击</li>
</ul>
</li>
<li><p>text</p>
<ul>
<li>工字型</li>
<li>提示：用于选择文本</li>
</ul>
</li>
<li><p>move</p>
<ul>
<li>十字光标</li>
<li>提示：用户可以拖拽</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>边框圆角</p>
<ul>
<li><p>border-radius</p>
</li>
<li><p>取值</p>
<ul>
<li><p>一个值</p>
<ul>
<li>左上右上右下左下</li>
</ul>
</li>
<li><p>两个值</p>
<ul>
<li>左上右下</li>
<li>右上左下</li>
</ul>
</li>
<li><p>三个值</p>
<ul>
<li>左上</li>
<li>右上左下</li>
<li>右下</li>
</ul>
</li>
<li><p>四个值</p>
<ul>
<li>左上</li>
<li>右上</li>
<li>右下</li>
<li>左下</li>
</ul>
</li>
<li><p>记忆规则：</p>
<ul>
<li>先从左上开始赋值，然后顺时针赋值，如果没有赋值的？？看对角的！！！</li>
</ul>
</li>
</ul>
</li>
<li><p>应用</p>
<ul>
<li><p>画一个圆</p>
<ul>
<li>1、盒子的正方形</li>
<li>2、border-radius：50%；</li>
</ul>
</li>
<li><p>画一个胶囊按钮</p>
<ul>
<li>1、盒子是长方形</li>
<li>2、border-radius：高度的一半</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>overflow</p>
<ul>
<li><p>作用</p>
<ul>
<li>设置内容的超出部分的显示效果</li>
</ul>
</li>
<li><p>取值</p>
<ul>
<li><p>visible</p>
<ul>
<li>超出部分可见</li>
</ul>
</li>
<li><p>hidden</p>
<ul>
<li>超出部分隐藏</li>
</ul>
</li>
<li><p>scroll</p>
<ul>
<li>显示滚动条</li>
</ul>
</li>
<li><p>auto</p>
<ul>
<li>自动根据内容的多少显示或者隐藏滚动条</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>元素本身隐藏属性</p>
<ul>
<li><p>visibility：hidden</p>
<ul>
<li><p>当前元素隐藏</p>
<ul>
<li><p>还占位置</p>
<ul>
<li>穿上了隐身衣</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>display：none</p>
<ul>
<li><p>当前元素隐藏</p>
<ul>
<li><p>不占位置</p>
<ul>
<li>相当于干掉了</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>（拓展补充）元素整体透明度</p>
<ul>
<li><p>opacity</p>
</li>
<li><p>取值</p>
<ul>
<li><p>0~1</p>
</li>
<li><p>0</p>
<ul>
<li>完全透明</li>
</ul>
</li>
<li><p>1</p>
<ul>
<li>完全不透明</li>
</ul>
</li>
</ul>
</li>
<li><p>特殊情况</p>
<ul>
<li>当设置opacity:0时，此时元素完全透明，有元素隐藏的效果</li>
</ul>
</li>
</ul>
</li>
<li><p>（拓展补充）边框合并</p>
<ul>
<li>border-collapse：collapse</li>
<li>给table标签设置</li>
</ul>
</li>
<li><p>（拓展补充）用css画三角形</p>
</li>
</ul>
<h3 id="选择器拓展"><a href="#选择器拓展" class="headerlink" title="选择器拓展"></a>选择器拓展</h3><ul>
<li><p>伪类选择器</p>
<ul>
<li><p>链接伪类选择器</p>
<ul>
<li><p>选中的是标签的某种状态</p>
</li>
<li><p>E:link</p>
<ul>
<li>a标签未访问过的状态</li>
</ul>
</li>
<li><p>E:visited</p>
<ul>
<li>a标签访问过之后的转态</li>
</ul>
</li>
<li><p>E:hover</p>
<ul>
<li>鼠标悬停a标签的状态</li>
</ul>
</li>
<li><p>E:active</p>
<ul>
<li>鼠标按下的状态</li>
</ul>
</li>
<li><p>注意点</p>
<ul>
<li><p>1、书写顺序</p>
<ul>
<li>lvha</li>
</ul>
</li>
<li><p>2、hover用的最多，并且可以用在其他标签上</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p>焦点伪类选择器</p>
<ul>
<li>E:focus</li>
</ul>
</li>
</ul>
</li>
<li><p>属性选择器</p>
<ul>
<li>E[attr] {}</li>
<li>E[attr=’xxx’] {}</li>
</ul>
</li>
</ul>
<h2 id="综合案例-6"><a href="#综合案例-6" class="headerlink" title="综合案例"></a>综合案例</h2><h3 id="网页导航hot图片按钮"><a href="#网页导航hot图片按钮" class="headerlink" title="网页导航hot图片按钮"></a>网页导航hot图片按钮</h3><h3 id="元素显示隐藏切换案例"><a href="#元素显示隐藏切换案例" class="headerlink" title="元素显示隐藏切换案例"></a>元素显示隐藏切换案例</h3><h3 id="网页遮罩显示隐藏切换案例"><a href="#网页遮罩显示隐藏切换案例" class="headerlink" title="网页遮罩显示隐藏切换案例"></a>网页遮罩显示隐藏切换案例</h3><h1 id="day08（小兔鲜01-项目前置样式-项目搭建）"><a href="#day08（小兔鲜01-项目前置样式-项目搭建）" class="headerlink" title="day08（小兔鲜01-项目前置样式+项目搭建）"></a>day08（小兔鲜01-项目前置样式+项目搭建）</h1><h2 id="今日目标-7"><a href="#今日目标-7" class="headerlink" title="今日目标"></a>今日目标</h2><h3 id="能够在网页中使用精灵图"><a href="#能够在网页中使用精灵图" class="headerlink" title="能够在网页中使用精灵图"></a>能够在网页中使用精灵图</h3><ul>
<li>1、书写一个盒子</li>
<li>2、设置盒子的宽高和精灵图中小图片的大小保持一致</li>
<li>3、设置盒子的背景图为精灵图</li>
<li>4、设置背景图片的位置（background-position），此时坐标需要取负值设置！！</li>
</ul>
<h3 id="能够写出过渡的代码"><a href="#能够写出过渡的代码" class="headerlink" title="能够写出过渡的代码"></a>能够写出过渡的代码</h3><ul>
<li><p>过渡的作用</p>
<ul>
<li>让元素的样式慢慢的变化</li>
</ul>
</li>
<li><p>过渡的代码</p>
<ul>
<li><p>属性名</p>
<ul>
<li>transition</li>
</ul>
</li>
<li><p>属性值</p>
<ul>
<li><p>过渡的属性</p>
<ul>
<li><p>all</p>
<ul>
<li>所有可以过渡的样式都有过渡的效果</li>
</ul>
</li>
<li><p>单独的属性名</p>
<ul>
<li>width、、、</li>
</ul>
</li>
</ul>
</li>
<li><p>过渡的时间</p>
<ul>
<li>数字+s（秒）</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="能够说出SEO三大标签分别有哪些"><a href="#能够说出SEO三大标签分别有哪些" class="headerlink" title="能够说出SEO三大标签分别有哪些"></a>能够说出SEO三大标签分别有哪些</h3><ul>
<li><p>title标签</p>
<ul>
<li>网页的标题</li>
</ul>
</li>
<li><p>description标签</p>
<ul>
<li>网页的描述</li>
</ul>
</li>
<li><p>keywords标签</p>
<ul>
<li>网页的关键词</li>
</ul>
</li>
</ul>
<h3 id="能够说出常见的有语义布局标签"><a href="#能够说出常见的有语义布局标签" class="headerlink" title="能够说出常见的有语义布局标签"></a>能够说出常见的有语义布局标签</h3><ul>
<li><p>网页的头部</p>
<ul>
<li>header</li>
</ul>
</li>
<li><p>网页的导航</p>
<ul>
<li>nav</li>
</ul>
</li>
<li><p>网页的底部</p>
<ul>
<li>footer</li>
</ul>
</li>
<li><p>网页的侧边栏</p>
<ul>
<li>aside</li>
</ul>
</li>
<li><p>网页的区块</p>
<ul>
<li>section</li>
</ul>
</li>
<li><p>网页的文章</p>
<ul>
<li>article</li>
</ul>
</li>
</ul>
<h3 id="能够在网页中使用favicon-ico图标"><a href="#能够在网页中使用favicon-ico图标" class="headerlink" title="能够在网页中使用favicon.ico图标"></a>能够在网页中使用favicon.ico图标</h3><ul>
<li>link标签</li>
<li><link rel="shortcut icon" href="favicon.ico" type="image/x-icon"></li>
</ul>
<h3 id="能够解释CSS基础公共样式中常见代码的含义"><a href="#能够解释CSS基础公共样式中常见代码的含义" class="headerlink" title="能够解释CSS基础公共样式中常见代码的含义"></a>能够解释CSS基础公共样式中常见代码的含义</h3><ul>
<li>需要都能阅读认识</li>
</ul>
<h3 id="能够跟随课堂完成xtx-shortcut模块"><a href="#能够跟随课堂完成xtx-shortcut模块" class="headerlink" title="能够跟随课堂完成xtx-shortcut模块"></a>能够跟随课堂完成xtx-shortcut模块</h3><ul>
<li>跟随课堂完成</li>
</ul>
<h2 id="课程内容-7"><a href="#课程内容-7" class="headerlink" title="课程内容"></a>课程内容</h2><h3 id="CSS样式补充"><a href="#CSS样式补充" class="headerlink" title="CSS样式补充"></a>CSS样式补充</h3><ul>
<li><p>精灵图</p>
</li>
<li><p>background-size</p>
</li>
<li><p>阴影</p>
<ul>
<li>文字阴影</li>
<li>盒子阴影</li>
</ul>
</li>
<li><p>过渡</p>
</li>
</ul>
<h3 id="项目前置认知"><a href="#项目前置认知" class="headerlink" title="项目前置认知"></a>项目前置认知</h3><ul>
<li><p>网页与网站的关系</p>
</li>
<li><p>骨架结构标签</p>
<ul>
<li><p>文档类型声明</p>
</li>
<li><p>网页语言</p>
</li>
<li><p>字符编码</p>
</li>
<li><p>SEO三大标签</p>
<ul>
<li><p>SEO简介</p>
</li>
<li><p>title</p>
</li>
<li><p>description</p>
</li>
<li><p>keywords</p>
</li>
<li><p>有语义的布局标签</p>
<ul>
<li><p>头部</p>
<ul>
<li>header</li>
</ul>
</li>
<li><p>导航</p>
<ul>
<li>nav</li>
</ul>
</li>
<li><p>底部</p>
<ul>
<li>footer</li>
</ul>
</li>
<li><p>侧边栏</p>
<ul>
<li>aside</li>
</ul>
</li>
<li><p>区块</p>
<ul>
<li>section</li>
</ul>
</li>
<li><p>文章</p>
<ul>
<li>article</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>ico图标的设置</p>
</li>
<li><p>企业开发流程</p>
<ul>
<li>协同岗位</li>
</ul>
</li>
<li><p>CSS 书写顺序</p>
</li>
<li><p>查阅MDN文档</p>
</li>
</ul>
<h3 id="项目结构搭建"><a href="#项目结构搭建" class="headerlink" title="项目结构搭建"></a>项目结构搭建</h3><ul>
<li>文件和目录准备</li>
<li>基础公共样式</li>
<li>index 页面骨架</li>
<li>版心</li>
</ul>
<h3 id="项目撰写"><a href="#项目撰写" class="headerlink" title="项目撰写"></a>项目撰写</h3><ul>
<li>……</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/04/17/yidong/</url>
    <content><![CDATA[<p>移动端</p>
<span id="more"></span>

<h1 id="基础篇"><a href="#基础篇" class="headerlink" title="基础篇"></a>基础篇</h1><h1 id="移动web第一天"><a href="#移动web第一天" class="headerlink" title="移动web第一天"></a>移动web第一天</h1><h2 id="全天目标"><a href="#全天目标" class="headerlink" title="全天目标"></a>全天目标</h2><h3 id="使用字体图标简化网页中装饰性图标实现方式"><a href="#使用字体图标简化网页中装饰性图标实现方式" class="headerlink" title="使用字体图标简化网页中装饰性图标实现方式"></a>使用字体图标简化网页中装饰性图标实现方式</h3><h3 id="使用位移、缩放、旋转、渐变效果丰富网页元素的呈现方式"><a href="#使用位移、缩放、旋转、渐变效果丰富网页元素的呈现方式" class="headerlink" title="使用位移、缩放、旋转、渐变效果丰富网页元素的呈现方式"></a>使用位移、缩放、旋转、渐变效果丰富网页元素的呈现方式</h3><h2 id="字体图标"><a href="#字体图标" class="headerlink" title="字体图标"></a>字体图标</h2><h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><ul>
<li>使用字体图标简化网页中装饰性图标实现方式</li>
</ul>
<h3 id="学习内容"><a href="#学习内容" class="headerlink" title="学习内容"></a>学习内容</h3><ul>
<li><p>字体图标介绍</p>
<ul>
<li><p>iconfont图标库</p>
</li>
<li><p>特点</p>
<ul>
<li><p>字体图标看起来是图，本质是字</p>
</li>
<li><p>加载速度快</p>
</li>
<li><p>兼容性高</p>
</li>
<li><p>灵活性高</p>
<ul>
<li>通过字体属性控制样式</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>下载</p>
<ul>
<li>登录后，选择目标图标，加入购物车</li>
<li>在购物车中添加至项目后， 在项目中下载</li>
</ul>
</li>
<li><p>使用</p>
<ul>
<li><p>Unicode编码</p>
<ul>
<li>引入iconfont.css样式表</li>
<li>标签粘贴Unicode编码</li>
<li>标签调用类名iconfont</li>
</ul>
</li>
<li><p>类名</p>
<ul>
<li><p>引入iconfont.css样式表</p>
</li>
<li><p>标签调用类名</p>
<ul>
<li>iconfont（font-family）</li>
<li>icon-xx（图标对应的类名）</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>svg上传</p>
<ul>
<li><p>作用： 图标库中的图标无法满足项目需求</p>
</li>
<li><p>步骤</p>
<ul>
<li><ol>
<li>上传SVG图标</li>
</ol>
</li>
<li><ol start="2">
<li>去除颜色提交</li>
</ol>
</li>
<li><ol start="3">
<li>加购物车并下载使用</li>
</ol>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="平面转换"><a href="#平面转换" class="headerlink" title="平面转换"></a>平面转换</h2><h3 id="目标-1"><a href="#目标-1" class="headerlink" title="目标"></a>目标</h3><ul>
<li>使用位移、缩放、旋转、渐变效果丰富网页呈现方式</li>
</ul>
<h3 id="学习内容-1"><a href="#学习内容-1" class="headerlink" title="学习内容"></a>学习内容</h3><ul>
<li><p>平面转换介绍</p>
<ul>
<li><p>平面</p>
<ul>
<li>x和y  2条坐标轴组成的屏幕</li>
<li>x轴正值向右</li>
<li>y轴正值向下</li>
</ul>
</li>
<li><p>转换</p>
<ul>
<li><p>改变盒子形态</p>
<ul>
<li>位置</li>
<li>角度</li>
<li>大小</li>
</ul>
</li>
</ul>
</li>
<li><p>属性： transform</p>
</li>
</ul>
</li>
<li><p>位移</p>
<ul>
<li>translate(x, y)</li>
<li>translateX()</li>
<li>translateY()</li>
</ul>
</li>
<li><p>定位盒子居中</p>
<ul>
<li><p>定位</p>
<ul>
<li>绝对定位</li>
<li>left：50%</li>
<li>top：50%</li>
</ul>
</li>
<li><p>位移</p>
<ul>
<li>translate(-50%, -50%)</li>
</ul>
</li>
</ul>
</li>
<li><p>旋转</p>
<ul>
<li><p>rotate(角度)</p>
</li>
<li><p>单位：deg</p>
</li>
<li><p>旋转方向</p>
<ul>
<li>正值：顺时针</li>
<li>负值：逆时针</li>
</ul>
</li>
</ul>
</li>
<li><p>转换中心点</p>
<ul>
<li><p>属性</p>
<ul>
<li>transform-origin</li>
</ul>
</li>
<li><p>取值</p>
<ul>
<li><p>关键词</p>
<ul>
<li>top</li>
<li>bottom</li>
<li>center</li>
<li>left</li>
<li>right</li>
</ul>
</li>
<li><p>百分比</p>
</li>
<li><p>px</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p>多重转换</p>
<ul>
<li><p>定义</p>
<ul>
<li>同时改变盒子的多个形态</li>
</ul>
</li>
<li><p>注意</p>
<ul>
<li>旋转放在最后</li>
<li>旋转会改变坐标轴向</li>
</ul>
</li>
</ul>
</li>
<li><p>缩放</p>
<ul>
<li><p>scale(倍数)</p>
</li>
<li><p>值</p>
<ul>
<li>大于1，表示放大</li>
<li>小于1，表示缩小</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="渐变"><a href="#渐变" class="headerlink" title="渐变"></a>渐变</h2><h3 id="目标-2"><a href="#目标-2" class="headerlink" title="目标"></a>目标</h3><ul>
<li>使用background-image属性添加渐变背景效果</li>
</ul>
<h3 id="学习内容-2"><a href="#学习内容-2" class="headerlink" title="学习内容"></a>学习内容</h3><ul>
<li><p>基本写法</p>
<ul>
<li>background-image： linear-gradient(<br>颜色1,<br>颜色2,<br>……<br>);</li>
</ul>
</li>
<li><p>透明渐变</p>
<ul>
<li>background-image: linear-gradient(<pre><code>transparent, 
rgba(0, 0, 0, .6)
</code></pre>
);</li>
</ul>
</li>
</ul>
<h1 id="移动web第二天"><a href="#移动web第二天" class="headerlink" title="移动web第二天"></a>移动web第二天</h1><h2 id="全天目标-1"><a href="#全天目标-1" class="headerlink" title="全天目标"></a>全天目标</h2><h3 id="使用空间转换、动画效果丰富网页元素的呈现方式"><a href="#使用空间转换、动画效果丰富网页元素的呈现方式" class="headerlink" title="使用空间转换、动画效果丰富网页元素的呈现方式"></a>使用空间转换、动画效果丰富网页元素的呈现方式</h3><h2 id="空间转换"><a href="#空间转换" class="headerlink" title="空间转换"></a>空间转换</h2><h3 id="目标-3"><a href="#目标-3" class="headerlink" title="目标"></a>目标</h3><ul>
<li>使用位移、缩放、旋转等空间转换效果丰富网页呈现方式</li>
</ul>
<h3 id="学习内容-3"><a href="#学习内容-3" class="headerlink" title="学习内容"></a>学习内容</h3><ul>
<li><p>空间转换介绍</p>
<ul>
<li><p>坐标轴</p>
<ul>
<li>X、Y、Z</li>
<li>Z轴与用户视线方向重叠</li>
</ul>
</li>
<li><p>属性</p>
<ul>
<li>transform</li>
</ul>
</li>
</ul>
</li>
<li><p>空间位移</p>
<ul>
<li><p>完整写法</p>
<ul>
<li>translate3d(x, y, z)</li>
</ul>
</li>
<li><p>某个坐标轴位移</p>
<ul>
<li>translateX()</li>
<li>translateY()</li>
<li>translateZ()</li>
</ul>
</li>
</ul>
</li>
<li><p>透视</p>
<ul>
<li><p>作用</p>
<ul>
<li>产生近大远小，近实远虚的视觉效果</li>
</ul>
</li>
<li><p>概念</p>
<ul>
<li>视距：用户眼睛和屏幕的距离</li>
</ul>
</li>
<li><p>写法</p>
<ul>
<li>perspective: 值；</li>
<li>添加给父级</li>
<li>取值一般800-1200px之间</li>
</ul>
</li>
</ul>
</li>
<li><p>空间旋转</p>
<ul>
<li><p>旋转</p>
<ul>
<li>rotateX()</li>
<li>rotateY()</li>
<li>rotateZ()</li>
</ul>
</li>
<li><p>左手法则</p>
<ul>
<li>左手握住旋转轴，大拇指指向坐标轴正值方向， 四根手指弯曲方向为旋转正值方向</li>
</ul>
</li>
</ul>
</li>
<li><p>立体呈现</p>
<ul>
<li><p>作用</p>
<ul>
<li>让子级处于真正的3D空间内</li>
</ul>
</li>
<li><p>写法</p>
<ul>
<li>transform-style: preserve-3d;</li>
<li>添加给父级</li>
</ul>
</li>
</ul>
</li>
<li><p>缩放</p>
<ul>
<li><p>完整写法</p>
<ul>
<li>scale3d(x, y, z)</li>
</ul>
</li>
<li><p>某个坐标轴缩放</p>
<ul>
<li>scaleX()</li>
<li>scaleY()</li>
<li>scaleZ()</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h2><h3 id="目标-4"><a href="#目标-4" class="headerlink" title="目标"></a>目标</h3><ul>
<li>使用关键帧动画效果，给网页元素添加动画特效，提升用户体验</li>
</ul>
<h3 id="学习内容-4"><a href="#学习内容-4" class="headerlink" title="学习内容"></a>学习内容</h3><ul>
<li><p>动画介绍</p>
</li>
<li><p>基本使用</p>
<ul>
<li><p>定义动画</p>
<ul>
<li>@keyframes{<br>from {}<br> to {}<br>}</li>
<li>@keyframes{<br>0% {}<br> 20% {}<br> 50% {}<br> 100% {}<br>}</li>
</ul>
</li>
<li><p>使用动画</p>
<ul>
<li>animation: 动画名称  动画时长;</li>
</ul>
</li>
</ul>
</li>
<li><p>animation属性</p>
<ul>
<li><p>复合属性</p>
<ul>
<li><p>写法</p>
<ul>
<li>animation：动画名称  动画时长  速度曲线  延迟时间   重复次数  动画方向  执行完毕时状态；</li>
</ul>
</li>
<li><p>注意事项</p>
<ul>
<li>取值不分先后顺序</li>
<li>必须赋值项：动画名称和动画时长</li>
<li>若出现2个时间：第一个时间为动画时长， 第二个时间为延迟时间</li>
</ul>
</li>
</ul>
</li>
<li><p>拆分写法（了解）</p>
<ul>
<li><p>animation-name：动画名称</p>
</li>
<li><p>animation-duration：动画时长</p>
</li>
<li><p>animation-delay：延迟时间</p>
</li>
<li><p>animation-fill-mode：动画执行完毕时状态</p>
<ul>
<li>forwards：最后一帧状态</li>
<li>backwards：第一帧状态（默认值）</li>
</ul>
</li>
<li><p>animation-timing-function：速度曲线</p>
<ul>
<li>steps(数字) : 逐帧动画</li>
</ul>
</li>
<li><p>animation-iteration-count：重复次数</p>
<ul>
<li>infinite：无限循环</li>
</ul>
</li>
<li><p>animation-direction：动画方向</p>
<ul>
<li>alternate：反向</li>
</ul>
</li>
<li><p>animation-play-state：动画播放状态</p>
<ul>
<li>paused：暂停</li>
<li>通常配合:hover使用</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>逐帧动画</p>
<ul>
<li><p>作用</p>
<ul>
<li>精灵动画</li>
<li>搭配精灵图使用</li>
</ul>
</li>
<li><p>核心</p>
<ul>
<li>动画速度曲线为steps(N)</li>
<li>N与精灵图小图个数相同</li>
</ul>
</li>
</ul>
</li>
<li><p>多组动画</p>
<ul>
<li><p>作用：一个元素添加多个动画效果</p>
</li>
<li><p>写法</p>
<ul>
<li>animation: 动画1，动画2，动画N；</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1 id="移动web第三天"><a href="#移动web第三天" class="headerlink" title="移动web第三天"></a>移动web第三天</h1><h2 id="全天目标-2"><a href="#全天目标-2" class="headerlink" title="全天目标"></a>全天目标</h2><h3 id="了解移动端与PC端屏幕和网页布局的差异，能够使用Flex布局模型布局移动端网页"><a href="#了解移动端与PC端屏幕和网页布局的差异，能够使用Flex布局模型布局移动端网页" class="headerlink" title="了解移动端与PC端屏幕和网页布局的差异，能够使用Flex布局模型布局移动端网页"></a>了解移动端与PC端屏幕和网页布局的差异，能够使用Flex布局模型布局移动端网页</h3><h2 id="百分比布局"><a href="#百分比布局" class="headerlink" title="百分比布局"></a>百分比布局</h2><h3 id="目标-5"><a href="#目标-5" class="headerlink" title="目标"></a>目标</h3><ul>
<li>了解百分比布局方案</li>
</ul>
<h3 id="学习内容-5"><a href="#学习内容-5" class="headerlink" title="学习内容"></a>学习内容</h3><ul>
<li><p>特点</p>
<ul>
<li>流式布局</li>
<li>宽度自适应，高度固定</li>
</ul>
</li>
<li><p>布局方式</p>
<ul>
<li>宽度为半分比写法</li>
</ul>
</li>
</ul>
<h2 id="FLex布局"><a href="#FLex布局" class="headerlink" title="FLex布局"></a>FLex布局</h2><h3 id="目标-6"><a href="#目标-6" class="headerlink" title="目标"></a>目标</h3><ul>
<li>使用Flex布局模型完成网页基本布局效果</li>
</ul>
<h3 id="学习内容-6"><a href="#学习内容-6" class="headerlink" title="学习内容"></a>学习内容</h3><ul>
<li><p>Flex的优势和特点</p>
<ul>
<li>浏览器提倡的布局模型，页面渲染性能高</li>
<li>布局简单、方便</li>
<li>避免浮动脱标的问题</li>
<li>兼容性较高（不兼容低版本浏览器）</li>
</ul>
</li>
<li><p>组成部分</p>
<ul>
<li>弹性容器（父级， 添加display:flex的盒子）</li>
<li>弹性盒子（子级）</li>
<li>主轴（默认水平）</li>
<li>侧轴（默认垂直）</li>
</ul>
</li>
<li><p>主侧轴对齐方式</p>
<ul>
<li><p>主轴</p>
<ul>
<li><p>justify-content</p>
<ul>
<li><p>center：居中</p>
</li>
<li><p>space-between：间距出现在弹性盒子之间</p>
</li>
<li><p>space-evenly：父子级间距都相同</p>
</li>
<li><p>space-around：间距出现在弹性盒子两侧</p>
<ul>
<li>视觉效果: 子级之间的间距是父级左右两侧间距的2倍</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>侧轴</p>
<ul>
<li><p>align-items（控制所有弹性盒子）</p>
<ul>
<li>center：居中</li>
<li>stretch：默认值， 拉伸</li>
</ul>
</li>
<li><p>align-self（控制某个弹性盒子）</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p>弹性伸缩比</p>
<ul>
<li>flex: 整数数字;</li>
<li>占用父级剩余尺寸的份数</li>
</ul>
</li>
</ul>
<h1 id="移动web第四天"><a href="#移动web第四天" class="headerlink" title="移动web第四天"></a>移动web第四天</h1><h2 id="全天目标-3"><a href="#全天目标-3" class="headerlink" title="全天目标"></a>全天目标</h2><h3 id="使用Flex布局模型实现网页布局效果"><a href="#使用Flex布局模型实现网页布局效果" class="headerlink" title="使用Flex布局模型实现网页布局效果"></a>使用Flex布局模型实现网页布局效果</h3><h2 id="Flex布局"><a href="#Flex布局" class="headerlink" title="Flex布局"></a>Flex布局</h2><h3 id="目标-7"><a href="#目标-7" class="headerlink" title="目标"></a>目标</h3><ul>
<li>使用Flex布局模型实现网页布局效果</li>
</ul>
<h3 id="学习内容-7"><a href="#学习内容-7" class="headerlink" title="学习内容"></a>学习内容</h3><ul>
<li><p>修改主轴方向</p>
<ul>
<li>flex-direction：column；(垂直方向)</li>
</ul>
</li>
<li><p>弹性盒子换行</p>
<ul>
<li><p>弹性盒子换行</p>
<ul>
<li>flex-wrap: wrap;</li>
</ul>
</li>
<li><p>调整行对齐方式</p>
<ul>
<li>align-content</li>
<li>取值与主轴对齐方式基本相同</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1 id="移动web第五天"><a href="#移动web第五天" class="headerlink" title="移动web第五天"></a>移动web第五天</h1><h2 id="全天目标-4"><a href="#全天目标-4" class="headerlink" title="全天目标"></a>全天目标</h2><h3 id="使用rem布局方案，实现视口宽度不同，网页元素宽高等比缩放效果"><a href="#使用rem布局方案，实现视口宽度不同，网页元素宽高等比缩放效果" class="headerlink" title="使用rem布局方案，实现视口宽度不同，网页元素宽高等比缩放效果"></a>使用rem布局方案，实现视口宽度不同，网页元素宽高等比缩放效果</h3><h2 id="rem"><a href="#rem" class="headerlink" title="rem"></a>rem</h2><h3 id="目标-8"><a href="#目标-8" class="headerlink" title="目标"></a>目标</h3><ul>
<li>实现在不同宽度的设备中，网页元素尺寸等比缩放效果</li>
</ul>
<h3 id="学习内容-8"><a href="#学习内容-8" class="headerlink" title="学习内容"></a>学习内容</h3><ul>
<li><p>rem介绍</p>
<ul>
<li>相对单位，相对于HTML标签字号计算尺寸</li>
<li>1rem = 1HTML标签字号</li>
</ul>
</li>
<li><p>基本使用</p>
<ul>
<li><ol>
<li>给HTML标签添加字号</li>
</ol>
</li>
<li><ol start="2">
<li>设置元素尺寸为rem单位</li>
</ol>
</li>
</ul>
</li>
<li><p>媒体查询基本使用</p>
<ul>
<li>视口不同，添加不同的根字号</li>
<li>@media (视口宽度) {<br>差异化CSS样式<br>}</li>
</ul>
</li>
<li><p>rem布局流程</p>
<ul>
<li><ol>
<li>媒体查询添加根字号</li>
</ol>
<ul>
<li>@media (视口宽度) {<br>html {<br>  font-size: 37.5px;<br>}<br>}</li>
</ul>
</li>
<li><ol start="2">
<li>flexible添加根字号</li>
</ol>
<ul>
<li><script src="flexible.js"></script></li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="less"><a href="#less" class="headerlink" title="less"></a>less</h2><h3 id="目标-9"><a href="#目标-9" class="headerlink" title="目标"></a>目标</h3><ul>
<li>掌握Less常用语法</li>
</ul>
<h3 id="学习内容-9"><a href="#学习内容-9" class="headerlink" title="学习内容"></a>学习内容</h3><ul>
<li><p>less介绍</p>
<ul>
<li>CSS预处理器，让CSS具备逻辑和计算能力</li>
<li>浏览器和网页不识别less，目前需要将less文件导出CSS文件，HTML引入CSS文件</li>
</ul>
</li>
<li><p>插件</p>
<ul>
<li>EasyLess</li>
</ul>
</li>
<li><p>语法</p>
<ul>
<li><p>注释</p>
<ul>
<li><p>单行</p>
<ul>
<li>// 注释内容</li>
<li>ctrl + /</li>
</ul>
</li>
<li><p>块</p>
<ul>
<li>/* 注释内容 */</li>
<li>alt + shift + A</li>
</ul>
</li>
</ul>
</li>
<li><p>嵌套</p>
<ul>
<li><p>作用</p>
<ul>
<li>生成后代选择器</li>
</ul>
</li>
<li><p>写法</p>
<ul>
<li><p>父选择器 {<br>子选择器{}<br>}</p>
</li>
<li><p>&amp;</p>
<ul>
<li>表示当前选择器， 不会生成后代选择器</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>运算</p>
<ul>
<li><p>作用</p>
<ul>
<li>完成常用数学计算</li>
</ul>
</li>
<li><p>写法</p>
<ul>
<li><p>除法</p>
<ul>
<li>(xx / xx)</li>
<li>xx ./ xx</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>变量</p>
<ul>
<li><p>作用</p>
<ul>
<li>存储数据，方便修改和使用</li>
</ul>
</li>
<li><p>用法</p>
<ul>
<li><ol>
<li>定义变量</li>
</ol>
<ul>
<li>@变量名: 值;</li>
</ul>
</li>
<li><ol start="2">
<li>使用变量</li>
</ol>
<ul>
<li>CSS属性: @变量;</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>导入</p>
<ul>
<li><p>作用</p>
<ul>
<li>引入其他less文件</li>
</ul>
</li>
<li><p>写法</p>
<ul>
<li>@import: ‘文件及路径’;</li>
</ul>
</li>
</ul>
</li>
<li><p>导出</p>
<ul>
<li><p>导出CSS文件</p>
<ul>
<li><p>控制所有Less导出路径</p>
<ul>
<li><p>修改EasyLess插件</p>
<ul>
<li><ol>
<li>设置 → 搜索easy → 在settings.json中编辑</li>
</ol>
</li>
<li><ol start="2">
<li>添加代码：”out”: “目标存储路径”（文件夹以/结束）</li>
</ol>
</li>
</ul>
</li>
</ul>
</li>
<li><p>单独控制某个Less文件导出路径</p>
<ul>
<li>less文件第一行添加  // out：路径</li>
</ul>
</li>
</ul>
</li>
<li><p>禁止导出CSS文件</p>
<ul>
<li>less文件第一行添加： // out: false</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1 id="移动web第六天"><a href="#移动web第六天" class="headerlink" title="移动web第六天"></a>移动web第六天</h1><h2 id="全天目标-5"><a href="#全天目标-5" class="headerlink" title="全天目标"></a>全天目标</h2><h3 id="使用vw布局方案，实现视口宽度不同，网页元素宽高等比缩放效果"><a href="#使用vw布局方案，实现视口宽度不同，网页元素宽高等比缩放效果" class="headerlink" title="使用vw布局方案，实现视口宽度不同，网页元素宽高等比缩放效果"></a>使用vw布局方案，实现视口宽度不同，网页元素宽高等比缩放效果</h3><h2 id="vw-vh"><a href="#vw-vh" class="headerlink" title="vw / vh"></a>vw / vh</h2><h3 id="目标-10"><a href="#目标-10" class="headerlink" title="目标"></a>目标</h3><ul>
<li>使用vw布局方案，实现视口宽度不同，网页元素宽高等比缩放效果</li>
</ul>
<h3 id="学习内容-10"><a href="#学习内容-10" class="headerlink" title="学习内容"></a>学习内容</h3><ul>
<li><p>vw和vh基本使用</p>
<ul>
<li>vw和vh为相对单位，相对视口尺寸计算结果</li>
<li>1vw = 1/100视口宽度</li>
<li>1vh = 1/100视口高度</li>
</ul>
</li>
<li><p>布局流程</p>
<ul>
<li><ol>
<li>根据设计稿确定1vw尺寸</li>
</ol>
</li>
<li><ol start="2">
<li>px单位转换成vw单位尺寸</li>
</ol>
<ul>
<li>px / (1/100视口宽度)</li>
</ul>
</li>
</ul>
</li>
<li><p>vh弊端</p>
<ul>
<li>vh是相对视口高度计算尺寸</li>
<li>需要考虑全面屏，视口高度尺寸偏大</li>
</ul>
</li>
</ul>
<h1 id="移动web第七天"><a href="#移动web第七天" class="headerlink" title="移动web第七天"></a>移动web第七天</h1><h2 id="全天目标-6"><a href="#全天目标-6" class="headerlink" title="全天目标"></a>全天目标</h2><h3 id="了解响应式网页特点，知道响应式布局的核心技术：媒体查询的用法"><a href="#了解响应式网页特点，知道响应式布局的核心技术：媒体查询的用法" class="headerlink" title="了解响应式网页特点，知道响应式布局的核心技术：媒体查询的用法"></a>了解响应式网页特点，知道响应式布局的核心技术：媒体查询的用法</h3><h3 id="了解BootStrap框架使用方法和手册用法，能够使用BootStrap框架开发响应式网页"><a href="#了解BootStrap框架使用方法和手册用法，能够使用BootStrap框架开发响应式网页" class="headerlink" title="了解BootStrap框架使用方法和手册用法，能够使用BootStrap框架开发响应式网页"></a>了解BootStrap框架使用方法和手册用法，能够使用BootStrap框架开发响应式网页</h3><h2 id="媒体查询"><a href="#媒体查询" class="headerlink" title="媒体查询"></a>媒体查询</h2><h3 id="目标-11"><a href="#目标-11" class="headerlink" title="目标"></a>目标</h3><ul>
<li>能够使用媒体查询写法，检测不同的响应断点，设置差异化CSS样式</li>
</ul>
<h3 id="学习内容-11"><a href="#学习内容-11" class="headerlink" title="学习内容"></a>学习内容</h3><ul>
<li><p>max-width / min-width</p>
</li>
<li><p>书写顺序</p>
</li>
<li><p>案例</p>
<ul>
<li>隐藏效果</li>
</ul>
</li>
<li><p>其他写法</p>
<ul>
<li>完整写法</li>
<li>link写法</li>
</ul>
</li>
</ul>
<h2 id="BootStrap"><a href="#BootStrap" class="headerlink" title="BootStrap"></a>BootStrap</h2><h3 id="目标-12"><a href="#目标-12" class="headerlink" title="目标"></a>目标</h3><ul>
<li>掌握BootStrap框架基本用法</li>
<li>掌握BootStrap框架手册用法</li>
</ul>
<h3 id="学习内容-12"><a href="#学习内容-12" class="headerlink" title="学习内容"></a>学习内容</h3><ul>
<li><p>BootStrap介绍</p>
<ul>
<li>UI框架</li>
<li>封装了大量的HTML、CSS、JavaScript，只需要按照框架要求书写代码，即可快速完成对应的效果</li>
</ul>
</li>
<li><p>下载</p>
<ul>
<li><p>生产环境</p>
<ul>
<li>压缩的代码</li>
<li>开发可以直接使用</li>
</ul>
</li>
<li><p>less源码</p>
<ul>
<li>基于less的源码包</li>
<li>可学习使用</li>
</ul>
</li>
</ul>
</li>
<li><p>使用</p>
<ul>
<li><p>全局CSS样式</p>
<ul>
<li><p>栅格系统</p>
<ul>
<li><p>介绍</p>
<ul>
<li>作用：响应式布局</li>
</ul>
</li>
<li><p>原理</p>
<ul>
<li>将网页等分成12等分，每个元素占对应的份数</li>
</ul>
</li>
<li><p>使用</p>
<ul>
<li><p>大屏</p>
<ul>
<li><p>响应断点</p>
<ul>
<li><blockquote>
<p>= 1200px</p>
</blockquote>
</li>
</ul>
</li>
<li><p>类前缀</p>
<ul>
<li>col-lg-*</li>
</ul>
</li>
<li><p>版心</p>
<ul>
<li>1170px</li>
</ul>
</li>
</ul>
</li>
<li><p>中屏</p>
<ul>
<li><p>响应断点</p>
<ul>
<li><blockquote>
<p>= 992px</p>
</blockquote>
</li>
</ul>
</li>
<li><p>类前缀</p>
<ul>
<li>col-md-*</li>
</ul>
</li>
<li><p>版心</p>
<ul>
<li>970px</li>
</ul>
</li>
</ul>
</li>
<li><p>小屏</p>
<ul>
<li><p>响应断点</p>
<ul>
<li><blockquote>
<p>= 768</p>
</blockquote>
</li>
</ul>
</li>
<li><p>类前缀</p>
<ul>
<li>col-sm-*</li>
</ul>
</li>
<li><p>版心</p>
<ul>
<li>750px</li>
</ul>
</li>
</ul>
</li>
<li><p>超小屏</p>
<ul>
<li><p>响应断点</p>
<ul>
<li>&lt; 768px</li>
</ul>
</li>
<li><p>类前缀</p>
<ul>
<li>col-xs-*</li>
</ul>
</li>
<li><p>版心</p>
<ul>
<li>100%</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>标签样式</p>
<ul>
<li>表格</li>
<li>按钮</li>
<li>…..</li>
</ul>
</li>
</ul>
</li>
<li><p>组件</p>
<ul>
<li><p>作用：封装常见功能的HTML+CSS</p>
</li>
<li><p>分类</p>
<ul>
<li><p>布局组件</p>
<ul>
<li><ol>
<li>引入样式表</li>
</ol>
</li>
<li><ol start="2">
<li>复制粘贴结构，修改内容</li>
</ol>
</li>
</ul>
</li>
<li><p>字体图标</p>
<ul>
<li><ol>
<li>引入样式表</li>
</ol>
</li>
<li><ol start="2">
<li>空标签粘贴类名</li>
</ol>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>插件</p>
<ul>
<li><p>介绍</p>
<ul>
<li>封装了常见功能的交互效果，包含HTML、CSS、JavaScript</li>
</ul>
</li>
<li><p>使用步骤</p>
<ul>
<li><ol>
<li>引入样式表</li>
</ol>
</li>
<li><ol start="2">
<li>引入js</li>
</ol>
<ul>
<li>2.1 jQuery.js</li>
<li>2.2 bootstrap.js</li>
</ul>
</li>
<li><ol start="3">
<li>复制结构，修改内容</li>
</ol>
</li>
</ul>
</li>
</ul>
</li>
<li><p>定制</p>
<ul>
<li><p>作用：针对项目定义bootstrap框架</p>
</li>
<li><p>步骤</p>
<ul>
<li><ol>
<li>导航菜单：定制</li>
</ol>
</li>
<li><ol start="2">
<li>输入对应的Less变量值</li>
</ol>
</li>
<li><ol start="3">
<li>编译并下载，使用新框架</li>
</ol>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/04/19/%E5%8D%95%E8%AF%8D/</url>
    <content><![CDATA[<p>单词</p>
<span id="more"></span>

<h1 id="unit1-4"><a href="#unit1-4" class="headerlink" title="unit1-4"></a>unit1-4</h1><table>
<thead>
<tr>
<th>unit1.2</th>
<th>unit3.4</th>
</tr>
</thead>
<tbody><tr>
<td>1.work    -patchwork    -labo(u)r</td>
<td>44.(in  ex  con)clude</td>
</tr>
<tr>
<td>2.state    stationary</td>
<td>45.national(inter  multi)    -naive</td>
</tr>
<tr>
<td>3.change</td>
<td>46.political</td>
</tr>
<tr>
<td>4.social</td>
<td>47.stress (dis)    -emphasis</td>
</tr>
<tr>
<td>5.public</td>
<td>48.view (re  inter)    -perspective</td>
</tr>
<tr>
<td>6.human    -anthropology</td>
<td>49.(re  ac  en)quire</td>
</tr>
<tr>
<td>7.take</td>
<td>50.(a)round</td>
</tr>
<tr>
<td>8.govern    -control    -curb    -chancellor</td>
<td>51.back(-)     feedback</td>
</tr>
<tr>
<td>9.accord    -record</td>
<td>52.expert    experience    -empirical</td>
</tr>
<tr>
<td>10.mean</td>
<td>53.lead    plea    pledge</td>
</tr>
<tr>
<td>11.direct    -steer    -hijack</td>
<td>54.value    (e  over)</td>
</tr>
<tr>
<td>12.<u>para</u>graph    graph</td>
<td>54-  price    rate    (un)estimate    assess</td>
</tr>
<tr>
<td>13.section    -segment</td>
<td>55.call</td>
</tr>
<tr>
<td>14.sheet</td>
<td>56.patent    -invent    -monopoly</td>
</tr>
<tr>
<td>15.question    -matter    -issue</td>
<td>57.provide</td>
</tr>
<tr>
<td>16.increase    -mute   -reduce</td>
<td>57- supply    -render     -offer</td>
</tr>
<tr>
<td>17.research    -rake</td>
<td>58.fund   (re  pro)    -entrenched</td>
</tr>
<tr>
<td>18.mark    remark    -spot</td>
<td>59.language   linguistic    -vocabulary    -sentence</td>
</tr>
<tr>
<td>19.suggest    -cue</td>
<td>60.percent    -decade</td>
</tr>
<tr>
<td>20.test</td>
<td>61.consider    -contemplate</td>
</tr>
<tr>
<td>21.economic    -astronomy    -inflation    -ecology</td>
<td>62.consumer    (as  re)sume    -presumably</td>
</tr>
<tr>
<td>22.end</td>
<td>63.improve    prove    -verfiy</td>
</tr>
<tr>
<td>23.science</td>
<td>64.down</td>
</tr>
<tr>
<td>24.company</td>
<td>65.skill</td>
</tr>
<tr>
<td>25.federal</td>
<td>66.concern    discern</td>
</tr>
<tr>
<td>26.system    -regime</td>
<td>67.million    -mill</td>
</tr>
<tr>
<td>27.differ</td>
<td>68.</td>
</tr>
<tr>
<td>28.example    -instance</td>
<td></td>
</tr>
<tr>
<td>29.found    -erect    -pioneering</td>
<td></td>
</tr>
<tr>
<td>30.pay    -instal(l)ment</td>
<td></td>
</tr>
<tr>
<td>31.place</td>
<td></td>
</tr>
<tr>
<td>32.believe   -credit    -faith</td>
<td></td>
</tr>
<tr>
<td>33.influence</td>
<td></td>
</tr>
<tr>
<td>34.data</td>
<td></td>
</tr>
<tr>
<td>35.observe    serve(re/con)    -abide</td>
<td></td>
</tr>
<tr>
<td>35-    glance  glimpse  gaze  glare</td>
<td></td>
</tr>
<tr>
<td>36.create (re  con  pro)</td>
<td></td>
</tr>
<tr>
<td>37.<u>cult</u>ure</td>
<td></td>
</tr>
<tr>
<td>38.inform   form(per  re  uni  con)</td>
<td></td>
</tr>
<tr>
<td>38.formal     former    formula  formidable</td>
<td></td>
</tr>
<tr>
<td>38-    previous</td>
<td></td>
</tr>
<tr>
<td>39.fim(in  con  reaf   af)</td>
<td></td>
</tr>
<tr>
<td>40.interest</td>
<td></td>
</tr>
<tr>
<td>41.product(by)    (re)produce</td>
<td></td>
</tr>
<tr>
<td>42.effect (in)    -impact    -toll</td>
<td></td>
</tr>
<tr>
<td>43.industry    -diligent</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="unit5-8"><a href="#unit5-8" class="headerlink" title="unit5-8"></a>unit5-8</h1><h1 id="unit9-10"><a href="#unit9-10" class="headerlink" title="unit9-10"></a>unit9-10</h1>]]></content>
  </entry>
  <entry>
    <title>我的博客beginning</title>
    <url>/2022/04/02/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2beginning/</url>
    <content><![CDATA[<p>爱猪妮是终身浪漫的开始</p>
<blockquote>
<p>亲爱的，你知道嘛。其实我一直在寻觅有什么方法可以不去喜欢你，现在终于明白…我对你的爱恋早溶入血液，渗到骨髓并且永久的驻留在身体的每个细胞里。我就这样不停的喜欢你喜欢你喜欢你喜欢你……直到停止心跳与呼吸……</p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/04/17/%E8%AE%B0%E5%BD%95mysql%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<p>安装bug心得</p>
<span id="more"></span>

<p>mysql误删了一个系统文件，之后卸载了文件，删了注册表（HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\Eventlog\Application\MySQL 目录删除      2、HKEY_LOCAL_MACHINE\SYSTEM\ControlSet002\Services\Eventlog\Application\MySQL 目录删除 　　3、HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Eventlog\Application\MySQL），发现重新初始化就行，然而为时已晚</p>
<p>之后被无法关闭服务折磨，又发现sc query mysql 和 sc delete mysql命令，一直用错误的方式打开终端，应该在搜索里搜命令提示符，再右键以管理员身份运行。之后再按照教程安装。</p>
<p>hexo的安装，因为直接已经弄过github的ssh密钥，现在只用下载hexo，用脚手架初始化都不用（因为已经有了myblog里的一些文件），只需要在下载个hexo的git，就可以部署了。</p>
<p>还有node的安装，安装后现在的东西在C盘不要动</p>
<p>尤其cnpm的安装，注意教程。</p>
]]></content>
  </entry>
</search>
